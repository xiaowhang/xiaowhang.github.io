<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>vitest</title>
    <link href="/archives/27327315/"/>
    <url>/archives/27327315/</url>
    
    <content type="html"><![CDATA[<h2 id="安装">安装</h2><figure class="shiki shell"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6F42C1">pnpm</span><span style="color: #24292E"> </span><span style="color: #032F62">add</span><span style="color: #24292E"> </span><span style="color: #005CC5">-D</span><span style="color: #24292E"> </span><span style="color: #032F62">vitest</span><span style="color: #24292E"> </span><span style="color: #032F62">@vue/test-utils</span><span style="color: #24292E"> </span><span style="color: #032F62">jsdom</span><span style="color: #24292E"> </span><span style="color: #032F62">@vitejs/plugin-vue</span><span style="color: #24292E"> </span><span style="color: #032F62">@vitejs/plugin-vue-jsx</span></span></code></pre></div></div></figure><h2 id="配置-vitest">配置 Vitest</h2><p>在项目根目录创建 <code>vitest.config.ts</code>：</p><figure class="shiki ts"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> { defineConfig } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;vitest/config&#39;</span></span><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> vue </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;@vitejs/plugin-vue&#39;</span></span><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> VueJsx </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;@vitejs/plugin-vue-jsx&#39;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">export</span><span style="color: #24292E"> </span><span style="color: #D73A49">default</span><span style="color: #24292E"> </span><span style="color: #6F42C1">defineConfig</span><span style="color: #24292E">({</span></span><span class="line"><span style="color: #24292E">  plugins: [</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">vue</span><span style="color: #24292E">(), </span><span style="color: #6A737D">// 关键：让 Vitest 能解析 .vue 文件</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">VueJsx</span><span style="color: #24292E">(),</span></span><span class="line"><span style="color: #24292E">  ],</span></span><span class="line"><span style="color: #24292E">  test: {</span></span><span class="line"><span style="color: #24292E">    globals: </span><span style="color: #005CC5">true</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">    environment: </span><span style="color: #032F62">&#39;jsdom&#39;</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">  },</span></span><span class="line"><span style="color: #24292E">})</span></span></code></pre></div></div></figure><h2 id="运行测试">运行测试</h2><p>在 <code>package.json</code> 中添加脚本：</p><figure class="shiki json"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #005CC5">&quot;scripts&quot;</span><span style="color: #24292E">: {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #005CC5">&quot;test&quot;</span><span style="color: #24292E">: </span><span style="color: #032F62">&quot;vitest&quot;</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #005CC5">&quot;test:coverage&quot;</span><span style="color: #24292E">: </span><span style="color: #032F62">&quot;vitest run --coverage&quot;</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><p>运行测试：</p><figure class="shiki bash"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6F42C1">npm</span><span style="color: #24292E"> </span><span style="color: #032F62">test</span></span></code></pre></div></div></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>深入理解 JS —— 事件循环</title>
    <link href="/archives/1540962542/"/>
    <url>/archives/1540962542/</url>
    
    <content type="html"><![CDATA[<h2 id="什么是事件循环">什么是事件循环？</h2><p>JavaScript 是单线程的语言，意味着它一次只能做一件事。但现代 Web应用往往需要处理大量的异步操作，比如 DOM事件处理、网络请求、定时器等。为了避免阻塞主线程，JavaScript使用了事件循环机制来实现异步操作。</p><p>事件循环的核心是一个不断轮询的过程，用来检查是否有待处理的任务。在任务队列中有任务时，事件循环将它们取出并执行。</p><h2 id="javascript-执行模型">JavaScript 执行模型</h2><p>JavaScript 的执行模型通常由以下几个部分组成：</p><ol type="1"><li><strong>调用栈（Call Stack）</strong>调用栈是一个栈结构，用于存储当前正在执行的函数。当你调用一个函数时，它被压入栈顶，函数执行完毕后从栈顶弹出。</li><li><strong>消息队列（Message Queue）</strong>消息队列存储的是待执行的异步任务。比如，定时器回调、网络请求的响应等。</li><li><strong>事件循环（Event Loop）</strong>事件循环负责检查调用栈是否为空。如果栈为空，它就会检查消息队列中是否有待执行的任务。如果队列中有任务，事件循环就会将这些任务依次取出并压入调用栈执行。</li><li><strong>Web APIs（浏览器环境）</strong> Web APIs 是浏览器提供的异步API，比如 <code>setTimeout</code>、<code>fetch</code>等。它们会在调用时将任务交给浏览器去处理，一旦处理完成，回调函数会被推送到消息队列中等待事件循环的执行。</li></ol><h2 id="事件循环的执行流程">事件循环的执行流程</h2><p>简单来说，JavaScript 的事件循环过程可以分为以下几个步骤：</p><ol type="1"><li>执行同步代码，压入调用栈。</li><li>当调用栈清空后，事件循环会检查消息队列中是否有待执行的任务。</li><li>如果有任务，事件循环会将这些任务逐个取出并执行。</li></ol><h3 id="具体流程">具体流程</h3><ul><li><strong>执行同步任务</strong>：首先，JavaScript引擎从全局执行上下文开始，执行同步任务。同步任务会立即压入调用栈，依次执行。</li><li><strong>执行异步任务</strong>：当遇到异步任务（如<code>setTimeout</code>、<code>fetch</code>等），这些任务会被交给浏览器的 Web APIs处理。当这些任务完成后，回调函数会被推送到消息队列中，等待事件循环的轮询。</li><li><strong>事件循环轮询</strong>：当调用栈为空时，事件循环开始执行消息队列中的任务。它会取出队列中的任务，压入调用栈，并执行它们。</li></ul><h2 id="微任务与宏任务">微任务与宏任务</h2><p>JavaScript中的异步任务分为两类：<strong>宏任务（Macrotask）和微任务（Microtask）</strong>。事件循环会先执行完所有宏任务，然后再执行微任务。微任务的优先级高于宏任务。</p><table><thead><tr><th>宏任务（Macrotask）</th><th>微任务（Microtask）</th></tr></thead><tbody><tr><td>DOM 事件（如点击、输入框变化等）</td><td><code>Promise.then</code></td></tr><tr><td>I/O 操作（如文件读写）</td><td>async / await</td></tr><tr><td>网络请求（Ajax）</td><td></td></tr></tbody></table><h3 id="执行顺序">执行顺序</h3><ol type="1"><li>执行同步代码（当前宏任务）。</li><li>执行所有微任务（微任务队列）。</li><li>执行下一个宏任务，重复上述步骤。</li></ol><p>这种机制保证了微任务比宏任务优先执行，且所有微任务都会在每个宏任务后执行完毕。</p><h2 id="易错点">易错点</h2><ol type="1"><li><p><code>Promise</code>本身是一个同步的代码（只是容器），只有它后面调用的 <code>then()</code>方法里面的回调才是微任务</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #005CC5">Promise</span><span style="color: #24292E">(</span><span style="color: #E36209">resolve</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">resolve</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">}).</span><span style="color: #6F42C1">then</span><span style="color: #24292E">(() </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">2</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">});</span></span><span class="line"><span style="color: #24292E">console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">3</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 1 3 2</span></span></code></pre></div></div></figure></li><li><p><code>await</code>右边的表达式还是会立即执行，表达式之后的代码才是微任务，<code>await</code>微任务可以转换成等价的 <code>Promise</code> 微任务分析</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">async</span><span style="color: #24292E"> </span><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">async1</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">await</span><span style="color: #24292E"> </span><span style="color: #6F42C1">async2</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">2</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">async</span><span style="color: #24292E"> </span><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">async2</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">3</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #6F42C1">async1</span><span style="color: #24292E">();</span></span></code></pre></div></div></figure></li></ol><h2 id="面试题">面试题</h2><h3 id="一.">一.</h3><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #D73A49">async</span><span style="color: #24292E"> </span><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">async1</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">2</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">await</span><span style="color: #24292E"> </span><span style="color: #6F42C1">async2</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">3</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">await</span><span style="color: #24292E"> </span><span style="color: #6F42C1">async3</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">4</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"><span style="color: #D73A49">async</span><span style="color: #24292E"> </span><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">async2</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">5</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"><span style="color: #D73A49">async</span><span style="color: #24292E"> </span><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">async3</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">6</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"><span style="color: #6F42C1">async1</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">7</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 1 2 5 7 3 6 4</span></span></code></pre></div></div></figure><ol type="1"><li>先执行同步代码 <code>console.log(1)</code></li><li>然后执行异步函数 <code>async1()</code><ol type="1"><li>执行遇到第一个 <code>await</code> 之前的代码<code>console.log(2)</code></li><li>执行 <code>async2()</code> 中的 <code>console.log(5)</code></li><li>将第一个 <code>await</code> 之后的代码放入微任务队列</li></ol></li><li>继续执行同步代码 <code>console.log(7)</code></li><li>同步代码结束，执行微任务<ol type="1"><li><code>console.log(3)</code></li><li>执行 <code>await async3()</code> ，完毕后将<code>console.log(4)</code> 放入微任务队列</li><li>执行 <code>console.log(4)</code></li></ol></li></ol><h3 id="二.">二.</h3><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #6F42C1">setTimeout</span><span style="color: #24292E">(() </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">2</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #005CC5">Promise</span><span style="color: #24292E">(</span><span style="color: #E36209">resolve</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">    console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">3</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">resolve</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">  }).</span><span style="color: #6F42C1">then</span><span style="color: #24292E">(() </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">    console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">4</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  });</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">5</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">}, </span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #005CC5">Promise</span><span style="color: #24292E">(</span><span style="color: #E36209">resolve</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">6</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">resolve</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">}).</span><span style="color: #6F42C1">then</span><span style="color: #24292E">(() </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">7</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">});</span></span><span class="line"></span><span class="line"><span style="color: #24292E">console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">8</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 1 6 8 7 2 3 5 4</span></span></code></pre></div></div></figure><ol type="1"><li>先执行同步代码，输出 <span class="math inline">\(1, 6,8\)</span>（<code>Promise</code> 是同步的，<code>then</code>的回调才是微任务）</li><li><code>setTimeout()</code> 是宏任务，放入宏任务队列</li><li>执行微任务 <code>console.log(7)</code></li><li>执行宏任务队列中的 <span class="math inline">\(2, 3, 5\)</span> ，将<code>then()</code> 中的 <code>console.log(4)</code> 放入微任务</li><li>执行微任务 <code>console.log(4)</code></li></ol><h3 id="三.">三.</h3><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">async</span><span style="color: #24292E"> </span><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">async1</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">2</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">await</span><span style="color: #24292E"> </span><span style="color: #6F42C1">async2</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">3</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">await</span><span style="color: #24292E"> </span><span style="color: #6F42C1">async3</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">4</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">async</span><span style="color: #24292E"> </span><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">async2</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">5</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">async</span><span style="color: #24292E"> </span><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">async3</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">6</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #24292E">console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">7</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #6F42C1">async1</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #6F42C1">setTimeout</span><span style="color: #24292E">(() </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">8</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">}, </span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #005CC5">Promise</span><span style="color: #24292E">(</span><span style="color: #E36209">resolve</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">9</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">resolve</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">})</span></span><span class="line"><span style="color: #24292E">  .</span><span style="color: #6F42C1">then</span><span style="color: #24292E">(() </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">    console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">10</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  })</span></span><span class="line"><span style="color: #24292E">  .</span><span style="color: #6F42C1">then</span><span style="color: #24292E">(() </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">    console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">11</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  });</span></span><span class="line"></span><span class="line"><span style="color: #24292E">console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">12</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 1 7 2 5 9 12 3 6 10 4 11 8</span></span></code></pre></div></div></figure><ol type="1"><li>先执行同步代码，输出 <span class="math inline">\(1,7\)</span></li><li>遇到异步函数 <code>async1()</code><ol type="1"><li>执行第一个 <code>await</code> 之前的<code>console.log(2)</code></li><li>执行 <code>async2()</code>，输出 <spanclass="math inline">\(5\)</span></li><li>将第一个 <code>await</code> 之后的代码放入微任务队列</li></ol></li><li>将 <code>setTimeout()</code> 的回调函数放入宏任务队列</li><li>执行同步任务 <code>Promise</code> 中的<code>console.log(9)</code>，将第一个 <code>then()</code>的回调函数放入微任务队列</li><li>执行同步任务 <code>console.log(12)</code></li><li>执行微任务队列中的 <code>console.log(3)</code> 和<code>async3()</code>，将 <code>console.log(4)</code>放入微任务队列</li><li>继续执行微任务队列中的 <code>console.log(10)</code>，将下一个<code>then()</code>的回调函数 <code>console.log(11)</code>放入微任务队列</li><li>继续执行微任务队列中剩下的任务，输出 <span class="math inline">\(4,11\)</span>，微任务队列清空</li><li>开始执行宏任务队列中的 <code>console.log(8)</code></li></ol><h3 id="四.">四.</h3><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #005CC5">Promise</span><span style="color: #24292E">(</span><span style="color: #E36209">resolve</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #005CC5">Promise</span><span style="color: #24292E">(</span><span style="color: #E36209">resolve</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">    console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">2</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">setTimeout</span><span style="color: #24292E">(() </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #6F42C1">resolve</span><span style="color: #24292E">(</span><span style="color: #005CC5">3</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">      console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">4</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    }, </span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  }).</span><span style="color: #6F42C1">then</span><span style="color: #24292E">(</span><span style="color: #E36209">data</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">setTimeout</span><span style="color: #24292E">(() </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">      console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">5</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    }, </span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(data);</span></span><span class="line"><span style="color: #24292E">  });</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">setTimeout</span><span style="color: #24292E">(() </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">resolve</span><span style="color: #24292E">(</span><span style="color: #005CC5">6</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">7</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  }, </span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">}).</span><span style="color: #6F42C1">then</span><span style="color: #24292E">(</span><span style="color: #E36209">data</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(data);</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">setTimeout</span><span style="color: #24292E">(() </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">    console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">8</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  }, </span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">9</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">});</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 1 2 4 3 7 6 9 5 8</span></span></code></pre></div></div></figure><ol type="1"><li>执行同步代码<ol type="1"><li>执行 <code>console.log(1)</code> ，输出 <spanclass="math inline">\(1\)</span></li><li>执行 <code>console.log(2)</code> ，输出 <spanclass="math inline">\(2\)</span></li><li>将内部 <code>setTimeout</code> 的回调放入宏任务队列（记为宏任务<span class="math inline">\(1\)</span> ）</li><li>将外部 <code>setTimeout</code> 的回调放入宏任务队列（记为宏任务<span class="math inline">\(2\)</span> ）</li></ol></li><li>微任务队列为空，处理宏任务队列，执行宏任务 <spanclass="math inline">\(1\)</span> （内部 <code>setTimeout</code>）<ol type="1"><li>将 <code>then()</code> 的回调放入微任务队列（记为微任务 <spanclass="math inline">\(1\)</span>）</li><li>执行 <code>console.log(4)</code> ，输出 <spanclass="math inline">\(4\)</span></li></ol></li><li>宏任务 <span class="math inline">\(1\)</span>处理完毕，检查微任务队列，不为空，处理微任务队列，执行微任务 <spanclass="math inline">\(1\)</span><ol type="1"><li>将 <code>setTimeout</code> 的回调放入宏任务队列（记为宏任务 <spanclass="math inline">\(3\)</span> ）</li><li>执行 <code>console.log(data)</code>，输出 <spanclass="math inline">\(3\)</span></li></ol></li><li>微任务队列为空，处理宏任务队列，执行宏任务 <spanclass="math inline">\(2\)</span> （外部 <code>setTimeout</code>）<ol type="1"><li>将 <code>then()</code> 的回调放入微任务队列（记为微任务 <spanclass="math inline">\(2\)</span>）</li><li>执行 <code>console.log(7)</code> ，输出 <spanclass="math inline">\(7\)</span></li></ol></li><li>宏任务 <span class="math inline">\(2\)</span>处理完毕，检查微任务队列，不为空，处理微任务队列，执行微任务 <spanclass="math inline">\(2\)</span><ol type="1"><li>执行 <code>console.log(data)</code>，输出 <spanclass="math inline">\(6\)</span></li><li>将 <code>setTimeout</code> 的回调放入宏任务队列（记为宏任务 <spanclass="math inline">\(4\)</span> ）</li><li>执行 <code>console.log(9)</code> ，输出 <spanclass="math inline">\(9\)</span></li></ol></li><li>微任务队列为空，处理宏任务队列，执行宏任务 <spanclass="math inline">\(3\)</span> （微任务 <spanclass="math inline">\(1\)</span> 的 <code>setTimeout</code>）<ol type="1"><li>执行 <code>console.log(5)</code>，输出 <spanclass="math inline">\(5\)</span></li></ol></li><li>微任务队列为空，处理宏任务队列，执行宏任务 <spanclass="math inline">\(4\)</span> （微任务 <spanclass="math inline">\(2\)</span> 的 <code>setTimeout</code>）<ol type="1"><li>执行 <code>console.log(8)</code>，输出 <spanclass="math inline">\(8\)</span></li></ol></li></ol><h2 id="附录">附录</h2><h3 id="参考资料">参考资料</h3><ol type="1"><li><ahref="https://juejin.cn/post/7108751200262029319">你知道JS的执行原理吗？一文详解EventLoop事件循环、微任务、宏任务 - 掘金</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>深入理解 JS —— 垃圾回收</title>
    <link href="/archives/2435124965/"/>
    <url>/archives/2435124965/</url>
    
    <content type="html"><![CDATA[<p>垃圾回收（Garbage Collection，简称GC）是指自动回收不再使用的内存，从而避免内存泄漏和提高程序性能的过程。当一个对象不再被引用时，GC 会自动释放它占用的内存空间。这样，我们就不需要手动管理内存分配和释放，从而降低了程序出错的概率。</p><h2 id="垃圾回收的算法"><a href="#垃圾回收的算法" class="headerlink" title="垃圾回收的算法"></a>垃圾回收的算法</h2><p>JavaScript 垃圾回收机制主要使用两种算法：<strong>标记-清除</strong>（Mark-and-Sweep）和<strong>引用计数</strong>（Reference Counting）。</p><h3 id="引用计数（Reference-Counting）"><a href="#引用计数（Reference-Counting）" class="headerlink" title="引用计数（Reference Counting）"></a>引用计数（Reference Counting）</h3><p>引用计数的基本原理是，跟踪每个对象的引用数量。当一个对象被引用时，它的引用计数就增加；当某个引用不再指向该对象时，引用计数就减少。当一个对象的引用计数为零时，说明该对象已经不再被任何地方引用，此时可以将其销毁，释放内存。</p><p><strong>优点</strong>：实现简单，实时性强（引用值为 0 时立刻回收），内存管理高效。</p><p><strong>缺点</strong>：存在循环引用的问题。例如，两个对象互相引用，它们的引用计数永远不为零，导致无法释放内存。</p><h3 id="标记-清除（Mark-and-Sweep）"><a href="#标记-清除（Mark-and-Sweep）" class="headerlink" title="标记-清除（Mark-and-Sweep）"></a>标记-清除（Mark-and-Sweep）</h3><p>标记-清除是目前 JavaScript 引擎中使用最广泛的垃圾回收算法。其步骤如下：</p><ul><li><strong>标记阶段</strong>：从根对象（如全局对象、局部变量、活动函数等）开始，递归地访问所有可达的对象，标记它们为“活动”。</li><li><strong>清除阶段</strong>：遍历内存中的所有对象，如果一个对象没有被标记为“活动”，那么它就是垃圾对象，GC 会将其销毁，并释放内存。</li></ul><p><strong>优点</strong>：不容易受到循环引用问题的影响。（通过标记整理算法还可以解决空闲内存不连续的问题）</p><p><strong>缺点</strong>：标记-清除需要每隔一段时间进行一次，那在应用程序（JS脚本）运行过程中线程就必须要暂停去执行一段时间的 <code>GC</code>，还需要遍历堆里的活动以及非活动对象来清除，可能导致程序的性能下降。</p><h2 id="V8对GC的优化"><a href="#V8对GC的优化" class="headerlink" title="V8对GC的优化"></a>V8对GC的优化</h2><h3 id="分代式垃圾回收（Generational）"><a href="#分代式垃圾回收（Generational）" class="headerlink" title="分代式垃圾回收（Generational）"></a>分代式垃圾回收（Generational）</h3><p>分代式垃圾回收是一种优化垃圾回收过程的策略，其核心思想是根据对象的生命周期将内存分为多个“代”（generation）。这种方法假设大多数对象在被创建后会很快变得不再需要，而只有少数对象会长时间存活。因此，垃圾回收机制根据对象的年龄将它们分配到不同的代，并对不同代的对象使用不同的垃圾回收策略。</p><h4 id="新老生代"><a href="#新老生代" class="headerlink" title="新老生代"></a>新老生代</h4><p>在 V8 引擎中，堆内存被分为新生代和老生代两个区域，以便针对不同类型的对象采用不同的垃圾回收策略。</p><ul><li><strong>新生代</strong>存放生命周期较短的对象，通常是刚创建的对象，内存容量相对较小（一般为 1～8MB）。</li><li><strong>老生代</strong>则存放生命周期较长或常驻内存的对象，通常是经过多次垃圾回收仍然存活下来的对象，内存容量通常较大。</li></ul><h4 id="新生代垃圾回收：Cheney-算法"><a href="#新生代垃圾回收：Cheney-算法" class="headerlink" title="新生代垃圾回收：Cheney 算法"></a>新生代垃圾回收：Cheney 算法</h4><p>在 V8 引擎中，新生代的垃圾回收是通过一种名为 <strong>Scavenge</strong> 的算法来实现的，Scavenge 算法本质上采用了 <strong>Cheney 算法</strong>，这是一种复制式的垃圾回收方法。通过这种方法，堆内存被分为两个区域：<strong>使用区</strong> 和 <strong>空闲区</strong>，以便在垃圾回收时更加高效地管理内存。</p><h5 id="堆内存的划分"><a href="#堆内存的划分" class="headerlink" title="堆内存的划分"></a>堆内存的划分</h5><p>堆内存在垃圾回收之前会被分为两部分：</p><ul><li><p><strong>使用区</strong>：存放活动对象，也就是正在使用的内存区域。</p></li><li><p><strong>空闲区</strong>：空闲的内存区域，用来存放经过回收后的活动对象。</p></li></ul><p>所有新创建的对象都会被放入使用区。当使用区即将填满时，垃圾回收机制便会触发，开始清理无效的对象。</p><h5 id="垃圾回收过程"><a href="#垃圾回收过程" class="headerlink" title="垃圾回收过程"></a>垃圾回收过程</h5><p>垃圾回收的过程会按照以下步骤进行：</p><ol><li><strong>标记活动对象</strong>：首先，垃圾回收器会扫描使用区中的对象，并标记所有活动对象（即仍然被引用的对象）。</li><li><strong>复制到空闲区</strong>：接着，标记的活动对象会被复制到空闲区，并按顺序整理，确保空闲区内的对象是有效且紧凑的。</li><li><strong>清理无效对象</strong>：一旦活动对象被复制，空闲区会清理掉不再使用的对象，释放内存。</li><li><strong>角色互换</strong>：完成复制和清理后，使用区和空闲区会互换角色。原先的使用区变成空闲区，而原先的空闲区则成为新的使用区，准备好接收新对象。</li></ol><p>这种复制的过程能有效地整理内存，减少碎片化，并确保每次垃圾回收都能有一个清晰的内存结构。</p><h5 id="对象晋升到老生代"><a href="#对象晋升到老生代" class="headerlink" title="对象晋升到老生代"></a>对象晋升到老生代</h5><p>如果一个对象在经过多次复制后仍然存活，说明它的生命周期较长，可能会成为老生代的一部分。为了避免新生代的回收过于频繁，存活较久的对象会被晋升到老生代，并采用更为复杂的垃圾回收策略进行管理。</p><h5 id="内存占用过高的处理"><a href="#内存占用过高的处理" class="headerlink" title="内存占用过高的处理"></a>内存占用过高的处理</h5><p>此外，Cheney 算法还设定了一个阈值：当空闲区的空间占用超过 25% 时，任何复制到空闲区的对象会直接晋升到老生代。这是因为如果空闲区的空间占比过高，可能会影响到后续内存分配，导致垃圾回收变得低效。因此，这个 25% 的限制确保了内存分配过程的高效性。</p><h4 id="老生代垃圾回收：标记清除与标记整理算法"><a href="#老生代垃圾回收：标记清除与标记整理算法" class="headerlink" title="老生代垃圾回收：标记清除与标记整理算法"></a>老生代垃圾回收：标记清除与标记整理算法</h4><p>相比新生代，老生代的垃圾回收过程就显得相对简单一些。通常，生命周期较长、占用内存较大的对象会被分配到老生代。由于老生代中的对象通常比较大，如果也像新生代那样采用复制的方式进行垃圾回收，会显得非常低效。因此，V8 在老生代的垃圾回收过程中采用了 <strong>标记清除</strong> 和 <strong>标记整理</strong> 算法，以提高回收效率并避免内存碎片问题。</p><h4 id="为什么需要分代式？"><a href="#为什么需要分代式？" class="headerlink" title="为什么需要分代式？"></a>为什么需要分代式？</h4><p>分代式垃圾回收的核心目的是优化内存管理，基于对象的生命周期差异，提高垃圾回收效率。大多数对象在创建后很快就不再需要，因此将它们放入新生代进行高频次、高效率的回收；而生命周期较长的对象则被晋升到老生代，避免频繁的回收操作。通过这种分代管理，分代式垃圾回收能有效减少内存碎片，提高内存利用率，并减少垃圾回收对性能的影响，尤其是在处理大量短期对象和少量长期对象的场景中表现尤为突出。</p><h3 id="并行垃圾回收（Parallel）"><a href="#并行垃圾回收（Parallel）" class="headerlink" title="并行垃圾回收（Parallel）"></a>并行垃圾回收（Parallel）</h3><p>并行垃圾回收是一种通过多线程并行执行垃圾回收过程来提高回收效率的策略。在现代 JavaScript 引擎中，垃圾回收过程通常会涉及多个阶段（如标记、清理等），这些操作会消耗大量的 CPU 资源，尤其是在处理老生代时，垃圾回收的复杂度较高，可能导致应用的长时间停顿。为了减少这种停顿并提升回收效率，V8 等引擎采用了并行垃圾回收。</p><h4 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h4><p>并行垃圾回收通过在多个 CPU 核心上同时执行回收任务来加速垃圾回收过程。垃圾回收的各个阶段，特别是老生代的回收，通常需要遍历大量对象，这些操作会消耗大量的 CPU 时间。通过并行化处理，可以将这些操作分配到多个线程上并行执行，从而减少垃圾回收的总体时间。</p><h4 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h4><ul><li><strong>减少停顿时间</strong>：通过并行处理，多个线程可以同时执行垃圾回收任务，从而缩短了每次垃圾回收的执行时间，避免了长时间的停顿，提升了应用的响应性。</li><li><strong>提升性能</strong>：在多核 CPU 上，利用并行垃圾回收可以显著提升回收效率，避免单个线程占用过多 CPU 时间，提升整体性能。</li><li><strong>更高效的内存管理</strong>：尤其是在老生代的垃圾回收中，较长生命周期的对象需要进行更复杂的回收操作，通过并行化可以更快速地处理这些复杂任务，避免性能瓶颈。</li></ul><h3 id="增量垃圾回收（Incremental）"><a href="#增量垃圾回收（Incremental）" class="headerlink" title="增量垃圾回收（Incremental）"></a>增量垃圾回收（Incremental）</h3><p>增量垃圾回收是一种将垃圾回收任务分割成多个小块，逐步完成的策略，旨在减少垃圾回收的停顿时间，避免长时间的应用卡顿。与传统的全量垃圾回收相比，增量垃圾回收通过分阶段执行垃圾回收任务，让应用能够持续运行，减少回收过程对用户体验的影响，特别是在需要频繁回收的场景中，如处理大量短期对象的新生代。</p><h4 id="基本概念-1"><a href="#基本概念-1" class="headerlink" title="基本概念"></a>基本概念</h4><p>增量垃圾回收的主要思想是将垃圾回收的工作分解成多个小步骤，而不是一次性执行完所有的标记和清理工作。每个小步骤执行一部分任务，执行时间短，应用可以在这些步骤之间间歇性地恢复到正常操作。这意味着垃圾回收不再需要一次性地暂停应用，而是将回收任务分布到多个周期中去，减少了垃圾回收带来的应用停顿时间。</p><h4 id="优势-1"><a href="#优势-1" class="headerlink" title="优势"></a>优势</h4><ul><li><strong>减少停顿时间</strong>：通过将垃圾回收任务分散到多个阶段，增量垃圾回收能够避免一次性的大规模停顿。每次回收停顿的时间都被限制在一个可接受的范围内，使得用户不会察觉到明显的卡顿。</li><li><strong>提高响应性</strong>：增量回收确保了应用在垃圾回收的过程中可以保持较高的响应性，因为它允许回收任务在空闲时间段执行，而不是让应用长时间停顿。</li><li><strong>适应性强</strong>：增量垃圾回收可以更好地适应动态内存分配和回收的需求，尤其适用于新生代等频繁回收的内存区域，能够有效减少频繁回收对应用的影响。</li></ul>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>深入理解 JS —— this 关键词</title>
    <link href="/archives/1253991442/"/>
    <url>/archives/1253991442/</url>
    
    <content type="html"><![CDATA[<p><code>this</code> 是一个指向当前执行上下文的对象的引用。在不同的上下文中，<code>this</code> 的值可以有所不同。</p><h2 id="常见用法"><a href="#常见用法" class="headerlink" title="常见用法"></a>常见用法</h2><h3 id="全局上下文中的-this"><a href="#全局上下文中的-this" class="headerlink" title="全局上下文中的 this"></a>全局上下文中的 <code>this</code></h3><p>在全局执行上下文中（不在函数内），<code>this</code> 指向全局对象。在浏览器环境中，全局对象是 <code>window</code>，在 Node.js 中是 <code>global</code>。</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">this</span><span style="color: #24292E">);  </span><span style="color: #6A737D">// 浏览器中输出：window</span></span></code></pre></div></div></figure><h3 id="函数调用中的-this"><a href="#函数调用中的-this" class="headerlink" title="函数调用中的 this"></a>函数调用中的 <code>this</code></h3><p>在普通函数调用中，<code>this</code> 依赖于调用该函数的方式。</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">showThis</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">this</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #6F42C1">showThis</span><span style="color: #24292E">();  </span><span style="color: #6A737D">// 在浏览器中，输出：window（全局对象）</span></span></code></pre></div></div></figure><p>函数中的 <code>this</code> 默认指向全局对象（在严格模式下为 <code>undefined</code>）。但是，<code>this</code> 的值会根据调用方式发生变化。</p><h3 id="方法调用中的-this"><a href="#方法调用中的-this" class="headerlink" title="方法调用中的 this"></a>方法调用中的 <code>this</code></h3><p>当函数作为对象的方法调用时，<code>this</code> 会指向调用该方法的对象。</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">person</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  name: </span><span style="color: #032F62">&#39;Alice&#39;</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">greet</span><span style="color: #24292E">: </span><span style="color: #D73A49">function</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">    console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">this</span><span style="color: #24292E">.name);</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"><span style="color: #24292E">};</span></span><span class="line"></span><span class="line"><span style="color: #24292E">person.</span><span style="color: #6F42C1">greet</span><span style="color: #24292E">();  </span><span style="color: #6A737D">// 输出：Alice</span></span></code></pre></div></div></figure><p>在这个例子中，<code>greet</code> 是 <code>person</code> 对象的方法，<code>this</code> 指向 <code>person</code> 对象，因此 <code>this.name</code> 访问了 <code>person</code> 的 <code>name</code> 属性。</p><h3 id="构造函数中的-this"><a href="#构造函数中的-this" class="headerlink" title="构造函数中的 this"></a>构造函数中的 <code>this</code></h3><p>在构造函数中，<code>this</code> 指向新创建的实例对象。通过 <code>new</code> 关键字调用构造函数时，<code>this</code> 会指向新创建的对象。</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Person</span><span style="color: #24292E">(</span><span style="color: #E36209">name</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #005CC5">this</span><span style="color: #24292E">.name </span><span style="color: #D73A49">=</span><span style="color: #24292E"> name;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">john</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Person</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;John&#39;</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(john.name);  </span><span style="color: #6A737D">// 输出：John</span></span></code></pre></div></div></figure><p>在这个例子中，<code>Person</code> 是一个构造函数，<code>this</code> 指向新创建的 <code>john</code> 对象。</p><h3 id="箭头函数中的-this"><a href="#箭头函数中的-this" class="headerlink" title="箭头函数中的 this"></a>箭头函数中的 <code>this</code></h3><p>箭头函数与普通函数不同，箭头函数没有自己的 <code>this</code>，它会继承外部作用域的 <code>this</code> 值。也就是说，箭头函数中的 <code>this</code> 指向定义时的 <code>this</code>，而不是调用时的 <code>this</code>。</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">person</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  name: </span><span style="color: #032F62">&#39;Alice&#39;</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">greet</span><span style="color: #24292E">: </span><span style="color: #D73A49">function</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #6F42C1">arrowFunc</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> () </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">      console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">this</span><span style="color: #24292E">.name);</span></span><span class="line"><span style="color: #24292E">    };</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">arrowFunc</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"><span style="color: #24292E">};</span></span><span class="line"></span><span class="line"><span style="color: #24292E">person.</span><span style="color: #6F42C1">greet</span><span style="color: #24292E">();  </span><span style="color: #6A737D">// 输出：Alice</span></span></code></pre></div></div></figure><p>在这个例子中，<code>arrowFunc</code> 是一个箭头函数，它继承了 <code>greet</code> 方法的 <code>this</code>，因此它指向 <code>person</code> 对象。</p><h3 id="call、apply-和-bind-改变-this"><a href="#call、apply-和-bind-改变-this" class="headerlink" title="call、apply 和 bind 改变 this"></a><code>call</code>、<code>apply</code> 和 <code>bind</code> 改变 <code>this</code></h3><p><code>call</code>、<code>apply</code> 和 <code>bind</code> 方法可以显式地改变 <code>this</code> 的指向。</p><ul><li><code>call</code> 和 <code>apply</code> 立即调用函数，但传递给 <code>this</code> 的对象不同。</li><li><code>bind</code> 返回一个新的函数，但不会立即执行，而是将 <code>this</code> 永久绑定到指定的对象。</li></ul><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">greet</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">this</span><span style="color: #24292E">.name);</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">person</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> { name: </span><span style="color: #032F62">&#39;Alice&#39;</span><span style="color: #24292E"> };</span></span><span class="line"></span><span class="line"><span style="color: #24292E">greet.</span><span style="color: #6F42C1">call</span><span style="color: #24292E">(person);  </span><span style="color: #6A737D">// 输出：Alice</span></span><span class="line"><span style="color: #24292E">greet.</span><span style="color: #6F42C1">apply</span><span style="color: #24292E">(person);  </span><span style="color: #6A737D">// 输出：Alice</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">boundGreet</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> greet.</span><span style="color: #6F42C1">bind</span><span style="color: #24292E">(person);</span></span><span class="line"><span style="color: #6F42C1">boundGreet</span><span style="color: #24292E">();  </span><span style="color: #6A737D">// 输出：Alice</span></span></code></pre></div></div></figure><h2 id="实际应用"><a href="#实际应用" class="headerlink" title="实际应用"></a>实际应用</h2><h3 id="事件处理中的-this"><a href="#事件处理中的-this" class="headerlink" title="事件处理中的 this"></a>事件处理中的 <code>this</code></h3><p>在事件处理器中，<code>this</code> 通常指向触发事件的元素。在传统的函数表达式中，<code>this</code> 指向事件的目标元素。在箭头函数中，<code>this</code> 会继承外部作用域的 <code>this</code>。</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">button</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> document.</span><span style="color: #6F42C1">querySelector</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;button&#39;</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 普通函数</span></span><span class="line"><span style="color: #24292E">button.</span><span style="color: #6F42C1">addEventListener</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;click&#39;</span><span style="color: #24292E">, </span><span style="color: #D73A49">function</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">this</span><span style="color: #24292E">);  </span><span style="color: #6A737D">// `this` 指向 button 元素</span></span><span class="line"><span style="color: #24292E">});</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 箭头函数</span></span><span class="line"><span style="color: #24292E">button.</span><span style="color: #6F42C1">addEventListener</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;click&#39;</span><span style="color: #24292E">, () </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #005CC5">this</span><span style="color: #24292E">);  </span><span style="color: #6A737D">// `this` 指向外部作用域的 `this`</span></span><span class="line"><span style="color: #24292E">});</span></span></code></pre></div></div></figure><h3 id="类中的-this"><a href="#类中的-this" class="headerlink" title="类中的 this"></a>类中的 <code>this</code></h3><p>在 JavaScript 类中，<code>this</code> 总是指向当前类的实例对象。它与构造函数的行为类似，用于引用实例的属性和方法。</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">class</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Person</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">constructor</span><span style="color: #24292E">(</span><span style="color: #E36209">name</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #005CC5">this</span><span style="color: #24292E">.name </span><span style="color: #D73A49">=</span><span style="color: #24292E"> name;</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">greet</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">    console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #032F62">`Hello, ${</span><span style="color: #005CC5">this</span><span style="color: #032F62">.</span><span style="color: #24292E">name</span><span style="color: #032F62">}`</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">alice</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Person</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;Alice&#39;</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">alice.</span><span style="color: #6F42C1">greet</span><span style="color: #24292E">();  </span><span style="color: #6A737D">// 输出：Hello, Alice</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>深入理解 JS —— 闭包</title>
    <link href="/archives/1009490165/"/>
    <url>/archives/1009490165/</url>
    
    <content type="html"><![CDATA[<p>闭包是 JavaScript 中的一个函数，它不仅可以访问函数内部的变量，还可以访问外部函数的变量，即使外部函数已经执行完毕。</p><p>在简单的词法作用域中，内部函数只能访问外部函数的参数和局部变量。而闭包则允许你“记住”外部函数的变量，即使外部函数已经执行结束。</p><h2 id="闭包的原理"><a href="#闭包的原理" class="headerlink" title="闭包的原理"></a>闭包的原理</h2><p>让我们从一个简单计数器开始：</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">createCounter</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">let</span><span style="color: #24292E"> count </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #D73A49">function</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #D73A49">++</span><span style="color: #24292E">count;</span></span><span class="line"><span style="color: #24292E">    };</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">counter</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">createCounter</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #6F42C1">counter</span><span style="color: #24292E">()); </span><span style="color: #6A737D">// 1</span></span><span class="line"><span style="color: #24292E">console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #6F42C1">counter</span><span style="color: #24292E">()); </span><span style="color: #6A737D">// 2</span></span></code></pre></div></div></figure><p>在这个例子中：</p><ul><li><code>createCounter</code> 函数定义了一个局部变量 <code>count</code>，并返回了一个函数。</li><li>当我们调用 <code>counter()</code> 时，被返回的函数依然可以访问 <code>createCounter</code> 中的 <code>count</code> 变量，并且每次调用 <code>counter</code> 时 <code>count</code> 的值都会增加，证明了 <code>count</code> 的值在闭包中被“记住”了。</li></ul><p>闭包的关键在于 JavaScript 的<strong>词法作用域</strong>。当我们定义一个函数时，JavaScript 引擎会为每个函数创建一个<strong>作用域链</strong>。这个作用域链保存了当前函数的变量，以及所有外部函数的变量。即使外部函数已经执行完毕，它的作用域依然会被保留在闭包中。</p><h2 id="作用域链的形成"><a href="#作用域链的形成" class="headerlink" title="作用域链的形成"></a>作用域链的形成</h2><p>每个函数执行时都会创建执行上下文，包含：</p><ul><li>变量环境（Variable Environment）</li><li>词法环境（Lexical Environment）</li><li>this绑定</li></ul><p>当访问变量时，JavaScript引擎会沿着作用域链逐级查找，直到全局作用域。闭包的特殊之处在于，即使外部函数执行完毕，其<strong>变量对象仍被内部函数引用</strong>，无法被垃圾回收。</p><h2 id="闭包的应用"><a href="#闭包的应用" class="headerlink" title="闭包的应用"></a>闭包的应用</h2><h3 id="数据封装"><a href="#数据封装" class="headerlink" title="数据封装"></a>数据封装</h3><p>实现私有变量是闭包最经典的应用。闭包可以帮助你实现数据的封装，使得外部无法直接访问内部的变量，确保数据的安全性和隐私性：</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">createCounter</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">let</span><span style="color: #24292E"> count </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">return</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">increment</span><span style="color: #24292E">: </span><span style="color: #D73A49">function</span><span style="color: #24292E"> () {</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #D73A49">++</span><span style="color: #24292E">count;</span></span><span class="line"><span style="color: #24292E">    },</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">decrement</span><span style="color: #24292E">: </span><span style="color: #D73A49">function</span><span style="color: #24292E"> () {</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #D73A49">--</span><span style="color: #24292E">count;</span></span><span class="line"><span style="color: #24292E">    },</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">getCount</span><span style="color: #24292E">: </span><span style="color: #D73A49">function</span><span style="color: #24292E"> () {</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #D73A49">return</span><span style="color: #24292E"> count;</span></span><span class="line"><span style="color: #24292E">    },</span></span><span class="line"><span style="color: #24292E">  };</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">counter</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">createCounter</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(counter.</span><span style="color: #6F42C1">increment</span><span style="color: #24292E">()); </span><span style="color: #6A737D">// 输出: 1</span></span><span class="line"><span style="color: #24292E">console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(counter.</span><span style="color: #6F42C1">increment</span><span style="color: #24292E">()); </span><span style="color: #6A737D">// 输出: 2</span></span><span class="line"><span style="color: #24292E">console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(counter.</span><span style="color: #6F42C1">getCount</span><span style="color: #24292E">()); </span><span style="color: #6A737D">// 输出: 2</span></span><span class="line"><span style="color: #24292E">console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(counter.</span><span style="color: #6F42C1">decrement</span><span style="color: #24292E">()); </span><span style="color: #6A737D">// 输出: 1</span></span></code></pre></div></div></figure><h3 id="函数柯里化"><a href="#函数柯里化" class="headerlink" title="函数柯里化"></a>函数柯里化</h3><p>闭包在函数式编程中常常用来实现函数柯里化。函数柯里化是将一个多参数函数转化为一系列接受单一参数的函数。</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">multiply</span><span style="color: #24292E">(</span><span style="color: #E36209">a</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #D73A49">function</span><span style="color: #24292E">(</span><span style="color: #E36209">b</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> a </span><span style="color: #D73A49">*</span><span style="color: #24292E"> b;</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">multiplyByTwo</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">multiply</span><span style="color: #24292E">(</span><span style="color: #005CC5">2</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #6F42C1">multiplyByTwo</span><span style="color: #24292E">(</span><span style="color: #005CC5">3</span><span style="color: #24292E">)); </span><span style="color: #6A737D">// 输出: 6</span></span></code></pre></div></div></figure><h3 id="延迟执行"><a href="#延迟执行" class="headerlink" title="延迟执行"></a>延迟执行</h3><p>闭包在 JavaScript 中常常被用来实现<strong>延迟执行</strong>，这在异步编程和定时器等场景中非常有用。延迟执行指的是某个函数并不是立即执行，而是在某个特定时间点或事件发生时才执行。</p><h4 id="错误示范"><a href="#错误示范" class="headerlink" title="错误示范"></a>错误示范</h4><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">var</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">5</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">setTimeout</span><span style="color: #24292E">(() </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(i), </span><span style="color: #005CC5">100</span><span style="color: #24292E">); </span><span style="color: #6A737D">// 输出5个5</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><p>在上面的代码中，由于 <code>setTimeout</code> 内部的回调函数是一个闭包，它捕获了外部的变量 <code>i</code>。但是，<code>i</code> 是通过 <code>var</code> 声明的，它是<strong>函数级作用域</strong>，并且会一直更新，直到循环结束。因此，<code>setTimeout</code> 的回调函数会在循环结束后执行，此时 <code>i</code> 的值已经是 <code>5</code>，所以它会打印 <code>5</code> 三次。</p><h4 id="闭包修正"><a href="#闭包修正" class="headerlink" title="闭包修正"></a>闭包修正</h4><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">let</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">5</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">  (</span><span style="color: #D73A49">function</span><span style="color: #24292E"> (</span><span style="color: #E36209">j</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">setTimeout</span><span style="color: #24292E">(() </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(j), </span><span style="color: #005CC5">100</span><span style="color: #24292E">); </span><span style="color: #6A737D">// 0,1,2,3,4</span></span><span class="line"><span style="color: #24292E">  })(i);</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><p>在这个版本中，<code>let</code> 使得每次循环迭代都为 <code>i</code> 创建了一个新的作用域，闭包会捕获到该作用域中的 <code>i</code> 值，因此每次 <code>setTimeout</code> 的回调函数都能正确输出 <code>i</code>。</p><h2 id="内存管理"><a href="#内存管理" class="headerlink" title="内存管理"></a>内存管理</h2><p>闭包会捕获外部函数的变量并保持这些变量的引用。这意味着，<strong>即使外部函数已经执行完毕，它的局部变量仍然会被闭包保留在内存中，</strong>直到闭包不再使用这些变量并被垃圾回收机制清理。</p><h3 id="闭包引发的内存泄漏"><a href="#闭包引发的内存泄漏" class="headerlink" title="闭包引发的内存泄漏"></a>闭包引发的内存泄漏</h3><p>内存泄漏通常发生在以下两种情况：</p><ul><li><strong>闭包不再使用，但仍然被引用</strong>：如果闭包持有的引用没有被清理，它将一直存在内存中。</li><li><strong>长时间持有对外部变量的引用</strong>：在某些情况下，闭包的生命周期可能比外部函数更长，导致外部函数中的变量无法被垃圾回收。</li></ul><h3 id="如何避免闭包引发的内存泄漏？"><a href="#如何避免闭包引发的内存泄漏？" class="headerlink" title="如何避免闭包引发的内存泄漏？"></a>如何避免闭包引发的内存泄漏？</h3><h4 id="手动清除不再需要的引用"><a href="#手动清除不再需要的引用" class="headerlink" title="手动清除不再需要的引用"></a>手动清除不再需要的引用</h4><p>如果一个闭包不再使用某些数据或对象，应该手动解除对这些数据的引用，以便垃圾回收能够清理它们。比如，在事件处理程序中，我们可以在适当的时候移除事件监听器：</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">attachEventHandler</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">let</span><span style="color: #24292E"> data </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Array</span><span style="color: #24292E">(</span><span style="color: #005CC5">1000000</span><span style="color: #24292E">).</span><span style="color: #6F42C1">fill</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;Some data&#39;</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #6F42C1">handler</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">function</span><span style="color: #24292E"> () {</span></span><span class="line"><span style="color: #24292E">    console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(data[</span><span style="color: #005CC5">0</span><span style="color: #24292E">]);</span></span><span class="line"><span style="color: #24292E">  };</span></span><span class="line"><span style="color: #24292E">  document.</span><span style="color: #6F42C1">getElementById</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;btn&#39;</span><span style="color: #24292E">).</span><span style="color: #6F42C1">addEventListener</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;click&#39;</span><span style="color: #24292E">, handler);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6A737D">// 在适当的时候移除事件监听器</span></span><span class="line"><span style="color: #24292E">  document.</span><span style="color: #6F42C1">getElementById</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;btn&#39;</span><span style="color: #24292E">).</span><span style="color: #6F42C1">removeEventListener</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;click&#39;</span><span style="color: #24292E">, handler);</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h4 id="使用-let-或-const-声明变量"><a href="#使用-let-或-const-声明变量" class="headerlink" title="使用 let 或 const 声明变量"></a>使用 <code>let</code> 或 <code>const</code> 声明变量</h4><p>使用 <code>let</code> 或 <code>const</code> 声明的变量具有<strong>块级作用域</strong>，可以确保在闭包外部的作用域结束后，变量会被清理。相比于 <code>var</code>，<code>let</code> 和 <code>const</code> 会减少闭包引用的范围，避免不必要的变量保持在内存中。</p><h4 id="避免不必要的长时间引用"><a href="#避免不必要的长时间引用" class="headerlink" title="避免不必要的长时间引用"></a>避免不必要的长时间引用</h4><p>确保闭包没有不必要地持有对大量数据或长时间不使用的数据的引用。如果不再需要某些数据，应该及时让其不再被闭包引用。</p><h3 id="怎么清除引用"><a href="#怎么清除引用" class="headerlink" title="怎么清除引用"></a>怎么清除引用</h3><p>以简单的计数器为例：</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">createCounter</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">let</span><span style="color: #24292E"> count </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #D73A49">function</span><span style="color: #24292E"> () {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #D73A49">++</span><span style="color: #24292E">count;</span></span><span class="line"><span style="color: #24292E">  };</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">counter</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">createCounter</span><span style="color: #24292E">();</span></span></code></pre></div></div></figure><h4 id="counter-变量被显式地设为-null-或-undefined："><a href="#counter-变量被显式地设为-null-或-undefined：" class="headerlink" title="counter 变量被显式地设为 null 或 undefined："></a><code>counter</code> 变量被显式地设为 <code>null</code> 或 <code>undefined</code>：</h4><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">counter </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">;  </span><span style="color: #6A737D">// 此时 counter 不再指向闭包函数</span></span></code></pre></div></div></figure><p>在这种情况下，<code>counter</code> 不再引用 <code>createCounter</code> 返回的闭包函数，因此闭包会被垃圾回收。闭包中的 <code>count</code> 也会被清理掉。</p><h4 id="counter-超出了作用域："><a href="#counter-超出了作用域：" class="headerlink" title="counter 超出了作用域："></a><code>counter</code> 超出了作用域：</h4><p>如果 <code>counter</code> 是在某个函数内声明的局部变量，当该函数执行结束，<code>counter</code> 变量将超出作用域，失去所有的引用，从而成为垃圾回收的候选对象。</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">startCounting</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">counter</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">createCounter</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">counter</span><span style="color: #24292E">(); </span><span style="color: #6A737D">// 输出: 1</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">counter</span><span style="color: #24292E">(); </span><span style="color: #6A737D">// 输出: 2</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 这里 counter 超出了作用域，开始成为垃圾回收的候选对象</span></span><span class="line"><span style="color: #6F42C1">startCounting</span><span style="color: #24292E">();</span></span></code></pre></div></div></figure><p>在这个例子中，<code>counter</code> 是 <code>startCounting</code> 函数内部的局部变量。当 <code>startCounting</code> 函数执行完毕时，<code>counter</code> 超出了作用域，它不再被引用，从而可以被垃圾回收机制清理。</p><h4 id="页面或脚本卸载时："><a href="#页面或脚本卸载时：" class="headerlink" title="页面或脚本卸载时："></a>页面或脚本卸载时：</h4><p>如果 <code>counter</code> 作为全局变量或者某个长时间存在的变量，直到页面或脚本完全卸载或重新加载时，它才会被清理。比如，在 SPA（单页应用）中，如果你不手动解除引用，<code>counter</code> 可能会在页面卸载后仍然占用内存。</p>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript 编码原则</title>
    <link href="/archives/3198399177/"/>
    <url>/archives/3198399177/</url>
    
    <content type="html"><![CDATA[<h2 id="各司其职"><a href="#各司其职" class="headerlink" title="各司其职"></a>各司其职</h2><p>在现代 Web 开发中，HTML、CSS 和 JavaScript 扮演着各自独特的角色。遵循各司其职的原则能够使得代码结构更加清晰，维护起来更加方便，并且能够更好地适应团队合作和项目扩展。</p><ol><li><strong>HTML（结构层）</strong>：负责定义网页的结构和内容。它使用标签来组织文本、图片、链接等元素，构建出网页的基本框架。</li><li><strong>CSS（表现层）</strong>：负责控制网页的外观和布局。通过CSS，开发者可以设置颜色、字体、间距等样式属性，使得网页看起来更加美观和一致。</li><li><strong>JavaScript（行为层）</strong>：负责实现网页的交互功能。JavaScript可以响应用户的操作，如点击按钮、提交表单等，动态地改变网页的内容和行为。</li></ol><h3 id="遵循职责分离的好处"><a href="#遵循职责分离的好处" class="headerlink" title="遵循职责分离的好处"></a>遵循职责分离的好处</h3><ul><li><strong>可维护性</strong>：每一层（HTML、CSS、JavaScript）都有明确的职责，开发者可以轻松地定位问题和修改代码。例如，如果需要修改页面的样式，只需要修改 CSS，而不需要担心影响到页面的交互逻辑。</li><li><strong>代码复用性</strong>：分离职责的代码更容易复用。比如，CSS 样式可以在多个页面中复用，JavaScript 的功能逻辑也可以在不同的项目中复用。</li><li><strong>可读性和可理解性</strong>：代码结构清晰，职责分离后，其他开发者能够更快速理解各部分代码的作用，减少了团队协作中的理解障碍。</li></ul><h3 id="错误样例：直接操作-DOM-样式"><a href="#错误样例：直接操作-DOM-样式" class="headerlink" title="错误样例：直接操作 DOM 样式"></a>错误样例：直接操作 DOM 样式</h3><p>在这个例子中，JavaScript 直接操作了 DOM 元素的样式，这违背了“各司其职”的原则。样式应该由 CSS 负责，JavaScript 应该只处理交互和行为。</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">btn</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> document.</span><span style="color: #6F42C1">querySelector</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;#modeButton&#39;</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">btn.</span><span style="color: #6F42C1">addEventListener</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;click&#39;</span><span style="color: #24292E">, </span><span style="color: #E36209">e</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">body</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> document.body;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (e.target.textContent </span><span style="color: #D73A49">===</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;Dark Mode&#39;</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">    body.style.backgroundColor </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;black&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    body.style.color </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;white&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    e.target.textContent </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;Light Mode&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  } </span><span style="color: #D73A49">else</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">    body.style.backgroundColor </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;white&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    body.style.color </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;black&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    e.target.textContent </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;Dark Mode&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"><span style="color: #24292E">});</span></span></code></pre></div></div></figure><p>这个例子中，JavaScript 直接操作了 DOM 元素的样式（<code>body.style.backgroundColor</code> 和 <code>body.style.color</code>），从而导致样式和行为的耦合。这样会让代码变得难以维护，尤其是当项目变得复杂时。</p><h3 id="正确样例：利用-CSS-和-JavaScript-实现分离"><a href="#正确样例：利用-CSS-和-JavaScript-实现分离" class="headerlink" title="正确样例：利用 CSS 和 JavaScript 实现分离"></a>正确样例：利用 CSS 和 JavaScript 实现分离</h3><p>在正确的做法中，我们通过 CSS 类的切换来改变页面样式，JavaScript 只负责管理交互逻辑（如按钮点击），而具体的样式控制交给 CSS 处理。这种做法符合职责分离的原则，也更容易维护和扩展。</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">btn</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> document.</span><span style="color: #6F42C1">querySelector</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;#modeButton&#39;</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">btn.</span><span style="color: #6F42C1">addEventListener</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;click&#39;</span><span style="color: #24292E">, </span><span style="color: #E36209">e</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  document.body.classList.</span><span style="color: #6F42C1">toggle</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;dark-mode&#39;</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">});</span></span></code></pre></div></div></figure><figure class="shiki css"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #22863A">body</span><span style="color: #6F42C1">.dark-mode</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #005CC5">background-color</span><span style="color: #24292E">: </span><span style="color: #005CC5">black</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #005CC5">color</span><span style="color: #24292E">: </span><span style="color: #005CC5">white</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><p>在这个示例中，当用户点击按钮时，JavaScript 会切换 <code>body</code> 元素的 <code>dark-mode</code> 类。CSS 中定义了 <code>.dark-mode</code> 类的样式，这样我们就能把样式逻辑从 JavaScript 中分离出来，使代码更加清晰和易于维护。</p><h2 id="组件封装"><a href="#组件封装" class="headerlink" title="组件封装"></a>组件封装</h2><p>在现代 Web 开发中，<strong>组件化</strong>已经成为一种常见的开发模式。组件不仅能够提高代码的可复用性、可维护性和可扩展性，还能够使得项目结构更加清晰，便于团队协作。</p><h3 id="组件封装的基本概念"><a href="#组件封装的基本概念" class="headerlink" title="组件封装的基本概念"></a>组件封装的基本概念</h3><p>在 Web 开发中，<strong>组件</strong>指的是一个具备独立功能、样式和结构的封装单元。每个组件都应该是<strong>自包含</strong>的，能够独立执行其预定的功能，而不依赖于外部的复杂逻辑。一个典型的组件包含以下三部分：</p><ul><li><strong>模板（HTML）</strong>：定义组件的结构和内容。</li><li><strong>样式（CSS）</strong>：定义组件的外观和布局。</li><li><strong>功能（JavaScript）</strong>：定义组件的行为和交互逻辑。</li></ul><h4 id="组件的四个关键特性"><a href="#组件的四个关键特性" class="headerlink" title="组件的四个关键特性"></a>组件的四个关键特性</h4><ol><li><strong>封装性</strong>：组件应独立于外部环境，内部实现和外部使用之间应保持松耦合。组件的内部实现不应暴露给外部，外部只能通过暴露的 API 来与组件交互。</li><li><strong>正确性</strong>：组件应该完成预期的功能，并且在不同的使用场景下都能够保持一致的行为。</li><li><strong>扩展性</strong>：组件应具有良好的扩展性，能够根据需求进行功能扩展或样式修改，而不影响其他功能部分。</li><li><strong>复用性</strong>：组件设计时应考虑到不同场景的复用性。一个好的组件应该能够在不同的项目或页面中被重复使用，减少重复开发的工作量。</li></ol><h3 id="行为与控制流：如何设计良好的组件-API"><a href="#行为与控制流：如何设计良好的组件-API" class="headerlink" title="行为与控制流：如何设计良好的组件 API"></a>行为与控制流：如何设计良好的组件 API</h3><h4 id="1-行为：API-设计"><a href="#1-行为：API-设计" class="headerlink" title="1. 行为：API 设计"></a>1. 行为：API 设计</h4><p>在 JavaScript 中，组件的行为通常通过 <strong>API</strong> 来定义。一个组件的 API 设计应遵循以下原则：</p><ul><li><strong>原子操作</strong>：API 应该尽量保持原子性，意味着每个 API 函数应只做一件事情，避免过度复杂的操作。</li><li><strong>指责单一</strong>：每个函数应该有明确的职责，避免一个函数同时承担多个责任，确保代码的清晰和易于维护。</li><li><strong>灵活性</strong>：API 设计应该尽量灵活，能够适应多种不同的使用场景，同时也应避免过度设计，导致 API 过于复杂。</li></ul><p>例如，假设你设计一个切换主题的按钮组件，简单的 API 设计可以是：</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">class</span><span style="color: #24292E"> </span><span style="color: #6F42C1">ThemeSwitcher</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">constructor</span><span style="color: #24292E">(</span><span style="color: #E36209">buttonElement</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #005CC5">this</span><span style="color: #24292E">.button </span><span style="color: #D73A49">=</span><span style="color: #24292E"> buttonElement;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #005CC5">this</span><span style="color: #24292E">.button.</span><span style="color: #6F42C1">addEventListener</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;click&#39;</span><span style="color: #24292E">, </span><span style="color: #005CC5">this</span><span style="color: #24292E">.toggleTheme.</span><span style="color: #6F42C1">bind</span><span style="color: #24292E">(</span><span style="color: #005CC5">this</span><span style="color: #24292E">));</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">toggleTheme</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">    document.body.classList.</span><span style="color: #6F42C1">toggle</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;dark-mode&#39;</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><p>这个 API 很简洁，只有一个 <code>toggleTheme</code> 方法，负责切换主题，它的责任非常单一，符合“指责单一”和“原子操作”的原则。</p><h4 id="2-行为：控制流"><a href="#2-行为：控制流" class="headerlink" title="2. 行为：控制流"></a>2. 行为：控制流</h4><p>在组件中，控制流的设计也至关重要。为了保持组件间的低耦合，<strong>自定义事件</strong>是一种非常有效的手段。通过自定义事件，组件之间可以通过发布-订阅的方式解耦，减少直接的依赖关系。</p><p>例如，在一个表单组件中，我们可能希望当表单提交时，触发一个事件，通知外部进行相应的操作：</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">class</span><span style="color: #24292E"> </span><span style="color: #6F42C1">FormComponent</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">constructor</span><span style="color: #24292E">(</span><span style="color: #E36209">formElement</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #005CC5">this</span><span style="color: #24292E">.form </span><span style="color: #D73A49">=</span><span style="color: #24292E"> formElement;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #005CC5">this</span><span style="color: #24292E">.form.</span><span style="color: #6F42C1">addEventListener</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;submit&#39;</span><span style="color: #24292E">, </span><span style="color: #005CC5">this</span><span style="color: #24292E">.handleSubmit.</span><span style="color: #6F42C1">bind</span><span style="color: #24292E">(</span><span style="color: #005CC5">this</span><span style="color: #24292E">));</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">handleSubmit</span><span style="color: #24292E">(</span><span style="color: #E36209">event</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">    event.</span><span style="color: #6F42C1">preventDefault</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">formData</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #6F42C1">FormData</span><span style="color: #24292E">(</span><span style="color: #005CC5">this</span><span style="color: #24292E">.form);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">submitEvent</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #6F42C1">CustomEvent</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;formSubmitted&#39;</span><span style="color: #24292E">, { detail: formData });</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #005CC5">this</span><span style="color: #24292E">.form.</span><span style="color: #6F42C1">dispatchEvent</span><span style="color: #24292E">(submitEvent);</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><p>通过 <code>CustomEvent</code>，我们不仅封装了表单提交的逻辑，还通过事件传递了表单数据，使得外部可以通过订阅 <code>formSubmitted</code> 事件来处理表单提交后的操作。</p><h3 id="组件设计的基本步骤"><a href="#组件设计的基本步骤" class="headerlink" title="组件设计的基本步骤"></a>组件设计的基本步骤</h3><p>为了设计一个高质量的组件，可以按照以下几个步骤进行：</p><ol><li><strong>结构设计</strong>：定义组件的 HTML 模板，确保组件的结构清晰且语义化。</li><li><strong>展现效果</strong>：通过 CSS 定义组件的样式，确保组件的视觉效果符合设计要求，支持响应式布局。</li><li><strong>行为设计</strong>：<ul><li><strong>设计 API</strong>：确保组件的功能可通过 API 调用实现。</li><li><strong>设计控制流</strong>：通过事件机制来解耦组件间的交互，减少直接依赖。</li></ul></li></ol><h3 id="重构：从简单组件到复杂框架"><a href="#重构：从简单组件到复杂框架" class="headerlink" title="重构：从简单组件到复杂框架"></a>重构：从简单组件到复杂框架</h3><h4 id="1-插件化"><a href="#1-插件化" class="headerlink" title="1. 插件化"></a>1. 插件化</h4><p>在大型项目中，单一的组件功能可能会越来越复杂。为了保持代码的可维护性和灵活性，可以考虑将复杂的功能拆分成多个插件。每个插件都可以独立工作，且可以通过<strong>依赖注入</strong>的方式与其他插件或组件进行交互。这样，组件就能根据需求进行动态扩展。</p><p>例如，假设你有一个日期选择组件，默认情况下它只显示当前日期，但你可以通过插件机制扩展它，添加时间选择、日期范围选择等功能：</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">class</span><span style="color: #24292E"> </span><span style="color: #6F42C1">DatePicker</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6A737D">// ...</span></span><span class="line"></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">registerPlugin</span><span style="color: #24292E">(</span><span style="color: #D73A49">...</span><span style="color: #E36209">plugin</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">    plugin.</span><span style="color: #6F42C1">forEach</span><span style="color: #24292E">(</span><span style="color: #E36209">plugin</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">      plugin.</span><span style="color: #6F42C1">init</span><span style="color: #24292E">(</span><span style="color: #005CC5">this</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    });</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">plugin</span><span style="color: #24292E">(</span><span style="color: #E36209">datePicker</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6A737D">// ...</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">datePicker</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #6F42C1">DatePicker</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">datePicker.</span><span style="color: #6F42C1">registerPlugin</span><span style="color: #24292E">(randomDatePlugin);</span></span></code></pre></div></div></figure><h4 id="2-模板化"><a href="#2-模板化" class="headerlink" title="2. 模板化"></a>2. 模板化</h4><p>为了提升组件的扩展性，我们可以通过 <strong>模板化</strong> 组件的 HTML 结构。通过模板化，组件的结构可以更加灵活，支持动态内容的渲染。这对于需要展示动态数据的组件尤其重要。</p><p>例如，使用 JavaScript 模板引擎（如 Handlebars 或者简单的模板字符串）来生成组件的 HTML：</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">class</span><span style="color: #24292E"> </span><span style="color: #6F42C1">ListComponent</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">constructor</span><span style="color: #24292E">(</span><span style="color: #E36209">data</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #005CC5">this</span><span style="color: #24292E">.data </span><span style="color: #D73A49">=</span><span style="color: #24292E"> data;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #005CC5">this</span><span style="color: #24292E">.template </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">`</span></span><span class="line"><span style="color: #032F62">      &lt;ul&gt;</span></span><span class="line"><span style="color: #032F62">        {{#each data}}</span></span><span class="line"><span style="color: #032F62">          &lt;li&gt;{{this}}&lt;/li&gt;</span></span><span class="line"><span style="color: #032F62">        {{/each}}</span></span><span class="line"><span style="color: #032F62">      &lt;/ul&gt;</span></span><span class="line"><span style="color: #032F62">    `</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">render</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">html</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> Handlebars.</span><span style="color: #6F42C1">compile</span><span style="color: #24292E">(</span><span style="color: #005CC5">this</span><span style="color: #24292E">.template)(</span><span style="color: #005CC5">this</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    document.</span><span style="color: #6F42C1">getElementById</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;listContainer&#39;</span><span style="color: #24292E">).innerHTML </span><span style="color: #D73A49">=</span><span style="color: #24292E"> html;</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h4 id="3-组件框架化"><a href="#3-组件框架化" class="headerlink" title="3. 组件框架化"></a>3. 组件框架化</h4><p>当项目变得足够复杂时，可以考虑将多个组件统一抽象成一个 <strong>组件框架</strong>。框架化的组件不仅可以提供一致的 API，还可以提供更高层次的功能，如状态管理、生命周期管理等。</p><p>例如，React 和 Vue 就是典型的组件框架，它们不仅提供了组件化的开发模式，还为组件之间的状态管理、事件传递等提供了更强大的支持。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>组件封装是现代 Web 开发中的一个核心原则。良好的组件应该具备<strong>封装性</strong>、<strong>正确性</strong>、<strong>扩展性</strong>和<strong>复用性</strong>，并且能够在复杂的应用场景中灵活应对。通过合理设计组件的<strong>结构</strong>、<strong>展现效果</strong>和<strong>行为</strong>，以及通过插件化、模板化和框架化的重构方式，能够逐步提升组件的质量和扩展性。</p><h4 id="组件设计的原则总结"><a href="#组件设计的原则总结" class="headerlink" title="组件设计的原则总结"></a>组件设计的原则总结</h4><ul><li><strong>封装性</strong>：组件内部实现与外部使用解耦。</li><li><strong>正确性</strong>：组件的功能应按预期工作。</li><li><strong>扩展性</strong>：组件应支持功能和样式的扩展。</li><li><strong>复用性</strong>：组件可以在不同项目中复用，减少重复开发。</li></ul><h4 id="实现组件的步骤"><a href="#实现组件的步骤" class="headerlink" title="实现组件的步骤"></a>实现组件的步骤</h4><ul><li><strong>结构设计</strong>：定义组件的 HTML 结构。</li><li><strong>展现效果</strong>：定义组件的样式。</li><li><strong>行为设计</strong>：设计组件的功能 API 和控制流。</li></ul><h4 id="三次重构"><a href="#三次重构" class="headerlink" title="三次重构"></a>三次重构</h4><ul><li><strong>插件化</strong>：将功能拆分为插件，降低耦合。</li><li><strong>模板化</strong>：将 HTML 模板化，提升扩展性。</li><li><strong>抽象化（组件框架）</strong>：将通用的组件模型抽象出来，提升复用性和可维护性。</li></ul><h2 id="过程抽象"><a href="#过程抽象" class="headerlink" title="过程抽象"></a>过程抽象</h2><p>函数式编程（Functional Programming，简称 FP）是一种编程范式，它将计算视为数学函数的求值过程，强调没有副作用、不可变性和高度的抽象能力。</p><p>在函数式编程中，<strong>过程抽象（Process Abstraction）</strong> 是一个核心概念，它将复杂的操作和过程封装为可重用的函数，使得程序更具模块化、可组合性和可维护性。</p><h3 id="什么是过程抽象？"><a href="#什么是过程抽象？" class="headerlink" title="什么是过程抽象？"></a>什么是过程抽象？</h3><p><strong>过程抽象</strong> 是将一系列操作和步骤抽象为一个函数或模块的过程，允许你通过该函数名来表示一组操作，而无需关心这些操作的具体实现细节。通过过程抽象，我们可以将复杂的行为封装起来，简化程序的结构，提高代码的可读性和可维护性。</p><p>在传统的命令式编程中，我们通常会在代码中写出多个具体的步骤来描述某个过程。但在函数式编程中，我们将这些步骤提炼成一个个纯粹的函数，它们只关心输入和输出，而不依赖于外部的状态或副作用。函数式编程强调“函数即过程”，通过函数来实现对过程的抽象。</p><h3 id="高阶函数"><a href="#高阶函数" class="headerlink" title="高阶函数"></a>高阶函数</h3><p>高阶函数（Higher-Order Function，HOF）是指 <strong>接受一个或多个函数作为参数</strong>，或者 <strong>返回一个函数</strong> 的函数。简而言之，高阶函数就是 <strong>操作其他函数的函数</strong>。它是函数式编程的核心概念之一，因为它提供了更高的抽象层次和更多的灵活性。</p><h4 id="高阶函数的定义"><a href="#高阶函数的定义" class="headerlink" title="高阶函数的定义"></a>高阶函数的定义</h4><ul><li><strong>接受函数作为参数</strong>：一个高阶函数可以将一个或多个函数作为参数传递给它。</li><li><strong>返回函数</strong>：一个高阶函数可以返回一个新的函数。</li></ul><h3 id="高阶函数的基本特点"><a href="#高阶函数的基本特点" class="headerlink" title="高阶函数的基本特点"></a>高阶函数的基本特点</h3><ul><li><strong>参数是函数</strong>：你可以将函数作为参数传递给另一个函数，允许你动态地改变函数的行为。</li><li><strong>返回值是函数</strong>：一个函数可以返回另一个函数，这样就能够创建动态的函数或者生成特定的行为。</li></ul><h3 id="高阶函数的示例"><a href="#高阶函数的示例" class="headerlink" title="高阶函数的示例"></a>高阶函数的示例</h3><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6A737D">/**</span></span><span class="line"><span style="color: #6A737D"> * 高阶函数 HOF0</span></span><span class="line"><span style="color: #6A737D"> *</span></span><span class="line"><span style="color: #6A737D"> * 这个函数接受一个函数作为参数，并返回一个新的函数。</span></span><span class="line"><span style="color: #6A737D"> * 新的函数会调用传入的函数，并将所有参数传递给它。</span></span><span class="line"><span style="color: #6A737D"> *</span></span><span class="line"><span style="color: #6A737D"> * </span><span style="color: #D73A49">@param</span><span style="color: #6A737D"> </span><span style="color: #6F42C1">{Function}</span><span style="color: #6A737D"> </span><span style="color: #24292E">fn</span><span style="color: #6A737D"> - 要被调用的函数</span></span><span class="line"><span style="color: #6A737D"> * </span><span style="color: #D73A49">@returns</span><span style="color: #6A737D"> </span><span style="color: #6F42C1">{Function}</span><span style="color: #6A737D"> 返回一个新的函数，该函数会调用传入的函数并传递所有参数</span></span><span class="line"><span style="color: #6A737D"> */</span></span><span class="line"><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">HOF0</span><span style="color: #24292E">(</span><span style="color: #E36209">fn</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #D73A49">function</span><span style="color: #24292E"> (</span><span style="color: #D73A49">...</span><span style="color: #E36209">args</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> fn.</span><span style="color: #6F42C1">apply</span><span style="color: #24292E">(</span><span style="color: #005CC5">this</span><span style="color: #24292E">, args);</span></span><span class="line"><span style="color: #24292E">  };</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><p>这是一个等价高阶函数，<code>HOF0</code> 的参数和返回的函数是一样的。</p><h3 id="常用的高阶函数"><a href="#常用的高阶函数" class="headerlink" title="常用的高阶函数"></a>常用的高阶函数</h3><h4 id="once-只执行一次"><a href="#once-只执行一次" class="headerlink" title="once - 只执行一次"></a><code>once</code> - 只执行一次</h4><p><code>once</code> 函数确保传入的函数只执行一次，后续的调用将不会触发执行。</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6A737D">/**</span></span><span class="line"><span style="color: #6A737D"> * 创建一个只能调用一次的函数。</span></span><span class="line"><span style="color: #6A737D"> *</span></span><span class="line"><span style="color: #6A737D"> * </span><span style="color: #D73A49">@param</span><span style="color: #6A737D"> </span><span style="color: #6F42C1">{Function}</span><span style="color: #6A737D"> </span><span style="color: #24292E">fn</span><span style="color: #6A737D"> - 需要包装的函数。</span></span><span class="line"><span style="color: #6A737D"> * </span><span style="color: #D73A49">@returns</span><span style="color: #6A737D"> </span><span style="color: #6F42C1">{Function}</span><span style="color: #6A737D"> 包装后的只能调用一次的函数。</span></span><span class="line"><span style="color: #6A737D"> */</span></span><span class="line"><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">once</span><span style="color: #24292E">(</span><span style="color: #E36209">fn</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #D73A49">function</span><span style="color: #24292E"> (</span><span style="color: #D73A49">...</span><span style="color: #E36209">args</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (fn) {</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">res</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> fn.</span><span style="color: #6F42C1">apply</span><span style="color: #24292E">(</span><span style="color: #005CC5">this</span><span style="color: #24292E">, args);</span></span><span class="line"><span style="color: #24292E">      fn </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #D73A49">return</span><span style="color: #24292E"> res;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">  };</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h4 id="throttle-限制函数执行频率"><a href="#throttle-限制函数执行频率" class="headerlink" title="throttle - 限制函数执行频率"></a><code>throttle</code> - 限制函数执行频率</h4><p><code>throttle</code> 确保一个函数在一定时间内只会执行一次，通常用于控制高频率事件（例如滚动、窗口调整等）的触发频率。</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6A737D">/**</span></span><span class="line"><span style="color: #6A737D"> * 创建一个节流函数，在指定的延迟时间内最多执行一次传入的函数。</span></span><span class="line"><span style="color: #6A737D"> *</span></span><span class="line"><span style="color: #6A737D"> * </span><span style="color: #D73A49">@param</span><span style="color: #6A737D"> </span><span style="color: #6F42C1">{Function}</span><span style="color: #6A737D"> </span><span style="color: #24292E">fn</span><span style="color: #6A737D"> - 需要节流的函数。</span></span><span class="line"><span style="color: #6A737D"> * </span><span style="color: #D73A49">@param</span><span style="color: #6A737D"> </span><span style="color: #6F42C1">{number}</span><span style="color: #6A737D"> </span><span style="color: #24292E">[delay</span><span style="color: #D73A49">=</span><span style="color: #24292E">100]</span><span style="color: #6A737D"> - 延迟时间，单位为毫秒，默认为100毫秒。</span></span><span class="line"><span style="color: #6A737D"> * </span><span style="color: #D73A49">@returns</span><span style="color: #6A737D"> </span><span style="color: #6F42C1">{Function}</span><span style="color: #6A737D"> 返回一个新的节流函数。</span></span><span class="line"><span style="color: #6A737D"> */</span></span><span class="line"><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">throttle</span><span style="color: #24292E">(</span><span style="color: #E36209">fn</span><span style="color: #24292E">, </span><span style="color: #E36209">delay</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">100</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">let</span><span style="color: #24292E"> timer;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #D73A49">function</span><span style="color: #24292E"> (</span><span style="color: #D73A49">...</span><span style="color: #E36209">args</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (timer </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">      fn.</span><span style="color: #6F42C1">apply</span><span style="color: #24292E">(</span><span style="color: #005CC5">this</span><span style="color: #24292E">, args);</span></span><span class="line"><span style="color: #24292E">      timer </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setTimeout</span><span style="color: #24292E">(() </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">        timer </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">      }, delay);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">  };</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h4 id="debounce-延迟执行"><a href="#debounce-延迟执行" class="headerlink" title="debounce - 延迟执行"></a><code>debounce</code> - 延迟执行</h4><p><code>debounce</code> 会在事件触发后的延迟时间内，确保函数只会执行一次。它通常用于用户输入、窗口调整等事件，防止在短时间内触发多次事件。</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6A737D">/**</span></span><span class="line"><span style="color: #6A737D"> * 创建一个防抖函数，在指定的延迟时间内，如果再次调用该函数，则重新计时。</span></span><span class="line"><span style="color: #6A737D"> *</span></span><span class="line"><span style="color: #6A737D"> * </span><span style="color: #D73A49">@param</span><span style="color: #6A737D"> </span><span style="color: #6F42C1">{Function}</span><span style="color: #6A737D"> </span><span style="color: #24292E">fn</span><span style="color: #6A737D"> - 需要防抖处理的函数。</span></span><span class="line"><span style="color: #6A737D"> * </span><span style="color: #D73A49">@param</span><span style="color: #6A737D"> </span><span style="color: #6F42C1">{number}</span><span style="color: #6A737D"> </span><span style="color: #24292E">[delay</span><span style="color: #D73A49">=</span><span style="color: #24292E">100]</span><span style="color: #6A737D"> - 延迟时间，单位为毫秒，默认为100毫秒。</span></span><span class="line"><span style="color: #6A737D"> * </span><span style="color: #D73A49">@returns</span><span style="color: #6A737D"> </span><span style="color: #6F42C1">{Function}</span><span style="color: #6A737D"> 返回一个防抖处理后的函数。</span></span><span class="line"><span style="color: #6A737D"> */</span></span><span class="line"><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">debounce</span><span style="color: #24292E">(</span><span style="color: #E36209">fn</span><span style="color: #24292E">, </span><span style="color: #E36209">delay</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">100</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">let</span><span style="color: #24292E"> timer;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #D73A49">function</span><span style="color: #24292E"> (</span><span style="color: #D73A49">...</span><span style="color: #E36209">args</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">clearTimeout</span><span style="color: #24292E">(timer);</span></span><span class="line"><span style="color: #24292E">    timer </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setTimeout</span><span style="color: #24292E">(() </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">      fn.</span><span style="color: #6F42C1">apply</span><span style="color: #24292E">(</span><span style="color: #005CC5">this</span><span style="color: #24292E">, args);</span></span><span class="line"><span style="color: #24292E">    }, delay);</span></span><span class="line"><span style="color: #24292E">  };</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h4 id="iterative-迭代执行"><a href="#iterative-迭代执行" class="headerlink" title="iterative - 迭代执行"></a><code>iterative</code> - 迭代执行</h4><p><code>iterative</code> 是一个高阶函数，用于在一定的条件下迭代地执行一个函数。每次调用都会执行并传递上一次的结果，直到满足停止条件。</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6A737D">/**</span></span><span class="line"><span style="color: #6A737D"> * 迭代执行给定函数，直到满足条件为止。</span></span><span class="line"><span style="color: #6A737D"> *</span></span><span class="line"><span style="color: #6A737D"> * </span><span style="color: #D73A49">@param</span><span style="color: #6A737D"> </span><span style="color: #6F42C1">{Function}</span><span style="color: #6A737D"> </span><span style="color: #24292E">fn</span><span style="color: #6A737D"> - 要执行的函数。</span></span><span class="line"><span style="color: #6A737D"> * </span><span style="color: #D73A49">@param</span><span style="color: #6A737D"> </span><span style="color: #6F42C1">{Function}</span><span style="color: #6A737D"> </span><span style="color: #24292E">condition</span><span style="color: #6A737D"> - 判断条件的函数，接收上一次执行的结果作为参数，返回布尔值。</span></span><span class="line"><span style="color: #6A737D"> * </span><span style="color: #D73A49">@returns</span><span style="color: #6A737D"> </span><span style="color: #6F42C1">{Function}</span><span style="color: #6A737D"> 返回一个新的函数，该函数接收任意数量的参数，并迭代执行给定函数直到条件为假。</span></span><span class="line"><span style="color: #6A737D"> */</span></span><span class="line"><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">iterative</span><span style="color: #24292E">(</span><span style="color: #E36209">fn</span><span style="color: #24292E">, </span><span style="color: #E36209">condition</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #D73A49">function</span><span style="color: #24292E"> (</span><span style="color: #D73A49">...</span><span style="color: #E36209">args</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">let</span><span style="color: #24292E"> result </span><span style="color: #D73A49">=</span><span style="color: #24292E"> fn.</span><span style="color: #6F42C1">apply</span><span style="color: #24292E">(</span><span style="color: #005CC5">this</span><span style="color: #24292E">, args);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #6F42C1">condition</span><span style="color: #24292E">(result)) {</span></span><span class="line"><span style="color: #24292E">      result </span><span style="color: #D73A49">=</span><span style="color: #24292E"> fn.</span><span style="color: #6F42C1">apply</span><span style="color: #24292E">(</span><span style="color: #005CC5">this</span><span style="color: #24292E">, [result]);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> result;</span></span><span class="line"><span style="color: #24292E">  };</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">fn</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">iterative</span><span style="color: #24292E">(</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #E36209">n</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">*</span><span style="color: #24292E"> n,</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #E36209">n</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">100</span></span><span class="line"><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #6F42C1">fn</span><span style="color: #24292E">(</span><span style="color: #005CC5">2</span><span style="color: #24292E">)); </span><span style="color: #6A737D">// 256</span></span><span class="line"><span style="color: #24292E">console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #6F42C1">fn</span><span style="color: #24292E">(</span><span style="color: #005CC5">3</span><span style="color: #24292E">)); </span><span style="color: #6A737D">// 6561</span></span></code></pre></div></div></figure><h3 id="为什么要使用高阶函数"><a href="#为什么要使用高阶函数" class="headerlink" title="为什么要使用高阶函数"></a>为什么要使用高阶函数</h3><p>使用高阶函数的优势主要体现在以下几个方面：</p><ul><li><strong>灵活性</strong>：通过将函数作为参数或返回值，可以构建更加灵活的逻辑。</li><li><strong>复用性</strong>：避免重复代码，提高代码的复用性。</li><li><strong>组合性</strong>：将多个简单的函数组合成更复杂的功能，增强代码的可组合性。</li><li><strong>解耦</strong>：使得代码更加模块化、易于维护。</li><li><strong>抽象能力</strong>：高阶函数能够抽象出复杂的逻辑，提升代码的可读性和可理解性。</li><li><strong>纯粹性</strong>：避免副作用，使代码更加可预测。</li><li><strong>可测试性</strong>：使得代码逻辑更加清晰，便于单元测试。</li><li><strong>简化异步操作</strong>：通过封装常见的异步操作，简化代码实现。</li></ul><p>总之，高阶函数使得我们的代码更加简洁、灵活、模块化，并且符合函数式编程的原则，提升了代码的可维护性、可扩展性和可复用性。</p>]]></content>
    
    
    <categories>
      
      <category>Web 开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web 开发</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>编程范式</title>
    <link href="/archives/2560697878/"/>
    <url>/archives/2560697878/</url>
    
    <content type="html"><![CDATA[<h2 id="什么是编程范式"><a class="markdownIt-Anchor" href="#什么是编程范式"></a> 什么是编程范式</h2><p>编程范式是程序设计的核心方法论，定义了代码的组织风格、结构特征及解决问题的模式。其多样性与编程语言的多样性类似，源于不同场景需要不同的工具——<strong>特定范式适配特定问题</strong>（如函数式适合数据处理，OOP适合模块化系统）。</p><h2 id="为什么要了解编程范式"><a class="markdownIt-Anchor" href="#为什么要了解编程范式"></a> 为什么要了解编程范式</h2><p>了解编程范式，是为了像“选对工具”一样写出更高效、更易维护的代码，并快速掌握新技术，而不是被单一思维限制。</p><ol><li><strong>代码质量</strong>：用对范式，避免冗余（如函数式替代循环）和混乱（如全局变量滥用）。</li><li><strong>解决问题</strong>：不同问题适配不同范式（如OOP建模业务，函数式处理数据流）。</li><li><strong>学习效率</strong>：90%的新语言/框架基于已有范式组合（如React=函数式+响应式）。</li><li><strong>职业发展</strong>：设计复杂系统时，能混合范式（如并发用函数式，模块化用OOP）。</li></ol><h2 id="常见的编程范式"><a class="markdownIt-Anchor" href="#常见的编程范式"></a> 常见的编程范式</h2><h3 id="命令式编程imperative-programming"><a class="markdownIt-Anchor" href="#命令式编程imperative-programming"></a> 命令式编程（Imperative Programming）</h3><p><strong>核心思想</strong>：通过明确的“步骤指令”告诉计算机**“如何做”（How to do）**，关注程序执行的具体过程和状态变化。<br /><strong>类比</strong>：像烹饪食谱，一步步描述“先切菜、再热油、最后翻炒”。</p><h4 id="核心特点"><a class="markdownIt-Anchor" href="#核心特点"></a> 核心特点</h4><ol><li><p><strong>基于状态（State）</strong><br />通过变量存储数据，并不断修改这些变量。</p><figure class="shiki c"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> sum </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span><span style="color: #6A737D"> // 状态：变量 sum</span></span><span class="line"><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">    sum </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> i;</span><span style="color: #6A737D"> // 不断修改状态</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure></li><li><p><strong>明确的流程控制</strong><br />使用条件（<code>if-else</code>）、循环（<code>for/while</code>）等控制代码执行顺序。</p><figure class="shiki python"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">numbers </span><span style="color: #D73A49">=</span><span style="color: #24292E"> [</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">2</span><span style="color: #24292E">, </span><span style="color: #005CC5">3</span><span style="color: #24292E">, </span><span style="color: #005CC5">4</span><span style="color: #24292E">]</span></span><span class="line"><span style="color: #24292E">even_numbers </span><span style="color: #D73A49">=</span><span style="color: #24292E"> []</span></span><span class="line"><span style="color: #D73A49">for</span><span style="color: #24292E"> num </span><span style="color: #D73A49">in</span><span style="color: #24292E"> numbers:  </span><span style="color: #6A737D"># 显式循环</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> num </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">:  </span><span style="color: #6A737D"># 显式条件判断</span></span><span class="line"><span style="color: #24292E">        even_numbers.append(num)</span></span></code></pre></div></div></figure></li><li><p><strong>副作用常见</strong><br />函数或代码块常修改外部变量或执行I/O操作。</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">let</span><span style="color: #24292E"> count </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">increment</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">  count</span><span style="color: #D73A49">++</span><span style="color: #24292E">; </span><span style="color: #6A737D">// 副作用：修改外部变量</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure></li></ol><h4 id="优缺点"><a class="markdownIt-Anchor" href="#优缺点"></a> 优缺点</h4><table><thead><tr><th style="text-align:center">优点</th><th style="text-align:center">缺点</th></tr></thead><tbody><tr><td style="text-align:center">直观，贴近计算机执行逻辑</td><td style="text-align:center">代码冗长，易产生复杂嵌套</td></tr><tr><td style="text-align:center">适合精细控制底层操作</td><td style="text-align:center">副作用多，调试难度高</td></tr><tr><td style="text-align:center">广泛支持（所有主流语言均兼容）</td><td style="text-align:center">难以并行化（依赖状态顺序修改）</td></tr></tbody></table><h3 id="过程式编程procedural-programming"><a class="markdownIt-Anchor" href="#过程式编程procedural-programming"></a> 过程式编程（Procedural Programming）</h3><p>过程式编程是命令式编程的派生，在其基础上添加了函数特性</p><p><strong>核心思想</strong>：通过<strong>函数（过程）将代码分解为一系列可复用的步骤，强调“按步骤执行”，是命令式编程</strong>的一种子范式。<br /><strong>类比</strong>：像组装家具的说明书，每一步（函数）明确操作（如“拧螺丝”、“装木板”），按顺序组合完成目标。</p><h4 id="核心特点-2"><a class="markdownIt-Anchor" href="#核心特点-2"></a> <strong>核心特点</strong></h4><ol><li><p><strong>函数为中心</strong><br />将程序拆分为多个函数，每个函数负责一个具体任务。</p><figure class="shiki c"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6A737D">// 示例：计算圆的面积和周长</span></span><span class="line"><span style="color: #D73A49">float</span><span style="color: #24292E"> </span><span style="color: #6F42C1">calculateArea</span><span style="color: #24292E">(</span><span style="color: #D73A49">float</span><span style="color: #24292E"> </span><span style="color: #E36209">radius</span><span style="color: #24292E">) {</span><span style="color: #6A737D"> // 函数1：计算面积</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">3.14</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> radius </span><span style="color: #D73A49">*</span><span style="color: #24292E"> radius;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"><span style="color: #D73A49">float</span><span style="color: #24292E"> </span><span style="color: #6F42C1">calculatePerimeter</span><span style="color: #24292E">(</span><span style="color: #D73A49">float</span><span style="color: #24292E"> </span><span style="color: #E36209">radius</span><span style="color: #24292E">) {</span><span style="color: #6A737D"> // 函数2：计算周长</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">3.14</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> radius;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">float</span><span style="color: #24292E"> r </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">5.0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">float</span><span style="color: #24292E"> area </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">calculateArea</span><span style="color: #24292E">(r);</span><span style="color: #6A737D"> // 调用函数</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">float</span><span style="color: #24292E"> perimeter </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">calculatePerimeter</span><span style="color: #24292E">(r);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">printf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Area: </span><span style="color: #005CC5">%f</span><span style="color: #032F62">, Perimeter: </span><span style="color: #005CC5">%f</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, area, perimeter);</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure></li><li><p><strong>数据与行为分离</strong><br />数据（变量）通常存储在全局或结构体中，函数独立操作这些数据。</p><figure class="shiki c"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">struct</span><span style="color: #24292E"> User {</span><span style="color: #6A737D">           // 数据：结构体</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">char</span><span style="color: #24292E"> </span><span style="color: #E36209">name</span><span style="color: #24292E">[</span><span style="color: #005CC5">50</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> age;</span></span><span class="line"><span style="color: #24292E">};</span></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">printUser</span><span style="color: #24292E">(</span><span style="color: #D73A49">struct</span><span style="color: #24292E"> User </span><span style="color: #E36209">u</span><span style="color: #24292E">) {</span><span style="color: #6A737D">  // 行为：函数操作数据</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">printf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Name: </span><span style="color: #005CC5">%s</span><span style="color: #032F62">, Age: </span><span style="color: #005CC5">%d</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, u.name, u.age);</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure></li><li><p><strong>自上而下的设计</strong><br />先定义主流程（如 <code>main</code> 函数），再逐步细化子过程（函数）。</p></li></ol><h4 id="优缺点-2"><a class="markdownIt-Anchor" href="#优缺点-2"></a> 优缺点</h4><table><thead><tr><th style="text-align:center">优点</th><th style="text-align:center">缺点</th></tr></thead><tbody><tr><td style="text-align:center">结构简单，适合小型项目</td><td style="text-align:center">数据与函数分离，易出现全局变量滥用</td></tr><tr><td style="text-align:center">执行效率高（贴近硬件）</td><td style="text-align:center">难以应对复杂业务逻辑</td></tr><tr><td style="text-align:center">易于理解（线性流程）</td><td style="text-align:center">代码复用性低于OOP</td></tr></tbody></table><h3 id="面向对象编程oop"><a class="markdownIt-Anchor" href="#面向对象编程oop"></a> 面向对象编程（OOP）</h3><p><strong>核心思想</strong>：将程序视为一组<strong>对象</strong>的交互，每个对象封装<strong>数据（属性）和行为（方法）</strong>，通过模拟现实世界的实体和关系解决问题。<br /><strong>类比</strong>：像组建一个公司，每个员工（对象）有明确的职责（方法）和资料（属性），通过协作完成目标。</p><h4 id="四大核心概念"><a class="markdownIt-Anchor" href="#四大核心概念"></a> <strong>四大核心概念</strong></h4><table><thead><tr><th style="text-align:center">概念</th><th style="text-align:center">描述</th><th style="text-align:center">示例（Java）</th></tr></thead><tbody><tr><td style="text-align:center"><strong>封装</strong></td><td style="text-align:center">隐藏对象内部细节，仅暴露必要接口</td><td style="text-align:center"><code>private</code> 属性 + <code>public getter/setter</code></td></tr><tr><td style="text-align:center"><strong>继承</strong></td><td style="text-align:center">子类复用父类的属性和方法，实现代码复用和层次化设计</td><td style="text-align:center"><code>class Dog extends Animal &#123; ... &#125;</code></td></tr><tr><td style="text-align:center"><strong>多态</strong></td><td style="text-align:center">同一方法在不同对象中有不同实现（覆盖/重载）</td><td style="text-align:center"><code>Animal a = new Dog(); a.sound();</code>（输出狗叫）</td></tr><tr><td style="text-align:center"><strong>抽象</strong></td><td style="text-align:center">定义接口或抽象类，隐藏具体实现细节</td><td style="text-align:center"><code>abstract class Shape &#123; abstract void draw(); &#125;</code></td></tr></tbody></table><h4 id="oop-核心要素"><a class="markdownIt-Anchor" href="#oop-核心要素"></a> OOP 核心要素</h4><h5 id="1-类class与对象object"><a class="markdownIt-Anchor" href="#1-类class与对象object"></a> 1. <strong>类（Class）与对象（Object）</strong></h5><ul><li><strong>类</strong>：对象的蓝图（模板），定义属性和方法。</li><li><strong>对象</strong>：类的实例（具体实体）。</li></ul><figure class="shiki java"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6A737D">// 类定义</span></span><span class="line"><span style="color: #D73A49">class</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Car</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6A737D">// 属性（数据）</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">private</span><span style="color: #24292E"> String brand;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">private</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> speed;</span></span><span class="line"><span style="color: #24292E">    </span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6A737D">// 方法（行为）</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">accelerate</span><span style="color: #24292E">() { </span></span><span class="line"><span style="color: #24292E">        speed </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">; </span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 创建对象</span></span><span class="line"><span style="color: #24292E">Car myCar </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Car</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">myCar.</span><span style="color: #6F42C1">accelerate</span><span style="color: #24292E">();</span></span></code></pre></div></div></figure><h5 id="2-封装encapsulation"><a class="markdownIt-Anchor" href="#2-封装encapsulation"></a> 2. <strong>封装（Encapsulation）</strong></h5><ul><li><strong>目的</strong>：保护数据完整性，降低耦合度。</li><li><strong>实现</strong>：通过访问修饰符（<code>private</code>, <code>public</code>, <code>protected</code>）控制访问权限。</li></ul><figure class="shiki java"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">class</span><span style="color: #24292E"> </span><span style="color: #6F42C1">BankAccount</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">private</span><span style="color: #24292E"> </span><span style="color: #D73A49">double</span><span style="color: #24292E"> balance;  </span><span style="color: #6A737D">// 私有属性</span></span><span class="line"><span style="color: #24292E">    </span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6A737D">// 公有方法操作私有属性</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">deposit</span><span style="color: #24292E">(</span><span style="color: #D73A49">double</span><span style="color: #24292E"> </span><span style="color: #E36209">amount</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (amount </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">) balance </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> amount;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">double</span><span style="color: #24292E"> </span><span style="color: #6F42C1">getBalance</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> balance;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h5 id="3-继承inheritance"><a class="markdownIt-Anchor" href="#3-继承inheritance"></a> 3. <strong>继承（Inheritance）</strong></h5><ul><li><strong>目的</strong>：复用代码，建立“is-a”关系（如“狗是动物”）。</li><li><strong>类型</strong>：单继承（Java）、多继承（C++通过接口实现）。</li></ul><figure class="shiki java"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">class</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Animal</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">eat</span><span style="color: #24292E">() { System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Eating...&quot;</span><span style="color: #24292E">); }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">class</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Dog</span><span style="color: #24292E"> </span><span style="color: #D73A49">extends</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Animal</span><span style="color: #24292E"> {  </span><span style="color: #6A737D">// 继承</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">bark</span><span style="color: #24292E">() { System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Barking!&quot;</span><span style="color: #24292E">); }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #24292E">Dog d </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Dog</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">d.</span><span style="color: #6F42C1">eat</span><span style="color: #24292E">();  </span><span style="color: #6A737D">// 复用父类方法</span></span><span class="line"><span style="color: #24292E">d.</span><span style="color: #6F42C1">bark</span><span style="color: #24292E">();</span></span></code></pre></div></div></figure><h5 id="4-多态polymorphism"><a class="markdownIt-Anchor" href="#4-多态polymorphism"></a> 4. 多态（Polymorphism）</h5><ul><li>形式：<ul><li><strong>编译时多态</strong>：方法重载（同名不同参）。</li><li><strong>运行时多态</strong>：方法覆盖（子类重写父类方法）。</li></ul></li></ul><figure class="shiki java"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6A737D">// 方法重载（编译时多态）</span></span><span class="line"><span style="color: #D73A49">class</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Calculator</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">a</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">b</span><span style="color: #24292E">) { </span><span style="color: #D73A49">return</span><span style="color: #24292E"> a </span><span style="color: #D73A49">+</span><span style="color: #24292E"> b; }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">double</span><span style="color: #24292E"> </span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #D73A49">double</span><span style="color: #24292E"> </span><span style="color: #E36209">a</span><span style="color: #24292E">, </span><span style="color: #D73A49">double</span><span style="color: #24292E"> </span><span style="color: #E36209">b</span><span style="color: #24292E">) { </span><span style="color: #D73A49">return</span><span style="color: #24292E"> a </span><span style="color: #D73A49">+</span><span style="color: #24292E"> b; }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 方法覆盖（运行时多态）</span></span><span class="line"><span style="color: #D73A49">class</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Animal</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">sound</span><span style="color: #24292E">() { System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Animal sound&quot;</span><span style="color: #24292E">); }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">class</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Dog</span><span style="color: #24292E"> </span><span style="color: #D73A49">extends</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Animal</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">    @</span><span style="color: #D73A49">Override</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">sound</span><span style="color: #24292E">() { System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Woof!&quot;</span><span style="color: #24292E">); }  </span><span style="color: #6A737D">// 覆盖父类方法</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #24292E">Animal a </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Dog</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">a.</span><span style="color: #6F42C1">sound</span><span style="color: #24292E">();  </span><span style="color: #6A737D">// 输出 &quot;Woof!&quot;（实际调用子类方法）</span></span></code></pre></div></div></figure><h4 id="oop-设计原则solid"><a class="markdownIt-Anchor" href="#oop-设计原则solid"></a> OOP 设计原则（SOLID）</h4><table><thead><tr><th style="text-align:center">原则</th><th style="text-align:center">描述</th><th style="text-align:center">示例</th></tr></thead><tbody><tr><td style="text-align:center"><strong>单一职责</strong></td><td style="text-align:center">一个类只负责一个功能</td><td style="text-align:center"><code>User</code> 类处理用户数据，<code>UserValidator</code> 类负责验证逻辑</td></tr><tr><td style="text-align:center"><strong>开闭原则</strong></td><td style="text-align:center">对扩展开放，对修改关闭</td><td style="text-align:center">通过继承新增功能，而非修改原有类</td></tr><tr><td style="text-align:center"><strong>里氏替换</strong></td><td style="text-align:center">子类必须能替换父类且不破坏程序逻辑</td><td style="text-align:center"><code>Square</code> 继承 <code>Rectangle</code> 时，需确保方法行为一致</td></tr><tr><td style="text-align:center"><strong>接口隔离</strong></td><td style="text-align:center">多个专用接口优于一个臃肿的总接口</td><td style="text-align:center">拆分 <code>Animal</code> 为 <code>Swimable</code>、<code>Flyable</code> 接口</td></tr><tr><td style="text-align:center"><strong>依赖倒置</strong></td><td style="text-align:center">依赖抽象（接口/抽象类）而非具体实现</td><td style="text-align:center">数据库操作依赖 <code>IDatabase</code> 接口，而非直接依赖 <code>MySQLDatabase</code> 类</td></tr></tbody></table><h4 id="优缺点-3"><a class="markdownIt-Anchor" href="#优缺点-3"></a> 优缺点</h4><table><thead><tr><th style="text-align:center">优点</th><th style="text-align:center">缺点</th></tr></thead><tbody><tr><td style="text-align:center"><strong>模块化</strong>：代码易维护和扩展</td><td style="text-align:center"><strong>复杂度高</strong>：小项目可能过度设计</td></tr><tr><td style="text-align:center"><strong>复用性</strong>：继承减少重复代码</td><td style="text-align:center"><strong>性能开销</strong>：对象创建和方法调用成本</td></tr><tr><td style="text-align:center"><strong>易协作</strong>：符合现实世界思维</td><td style="text-align:center"><strong>继承滥用</strong>：可能导致类层次过深</td></tr></tbody></table><h3 id="声明式编程declarative-programming"><a class="markdownIt-Anchor" href="#声明式编程declarative-programming"></a> 声明式编程（Declarative Programming）</h3><p><strong>核心思想</strong>：关注**“做什么”（What to do）**而非“如何做”，通过描述目标而非具体步骤解决问题。<br /><strong>类比</strong>：像点外卖——你只需说明“要一份宫保鸡丁”，无需关心厨师如何切菜、炒菜。</p><h4 id="核心特点-3"><a class="markdownIt-Anchor" href="#核心特点-3"></a> 核心特点</h4><ol><li><p><strong>抽象化步骤</strong><br />隐藏底层实现细节，开发者只需声明目标。</p><figure class="shiki sql"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6A737D">-- SQL（声明式）：获取年龄大于30的用户</span></span><span class="line"><span style="color: #D73A49">SELECT</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #D73A49">FROM</span><span style="color: #24292E"> users </span><span style="color: #D73A49">WHERE</span><span style="color: #24292E"> age </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">30</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">-- 对比命令式（伪代码）：</span></span><span class="line"><span style="color: #24292E">List</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">User</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> result </span><span style="color: #D73A49">=</span><span style="color: #24292E"> new ArrayList</span><span style="color: #D73A49">&lt;&gt;</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #D73A49">for</span><span style="color: #24292E"> (User user : users) {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #005CC5">user</span><span style="color: #24292E">.</span><span style="color: #005CC5">age</span><span style="color: #24292E"> </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">30</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #005CC5">result</span><span style="color: #24292E">.</span><span style="color: #005CC5">add</span><span style="color: #24292E">(user);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure></li><li><p><strong>无副作用（理想情况）</strong><br />纯声明式代码不修改外部状态，如函数式编程中的纯函数。</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6A737D">// 函数式声明：过滤并转换数据</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">result</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> data</span></span><span class="line"><span style="color: #24292E">  .</span><span style="color: #6F42C1">filter</span><span style="color: #24292E">(</span><span style="color: #E36209">item</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> item.value </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">100</span><span style="color: #24292E">)  </span><span style="color: #6A737D">// 声明过滤条件</span></span><span class="line"><span style="color: #24292E">  .</span><span style="color: #6F42C1">map</span><span style="color: #24292E">(</span><span style="color: #E36209">item</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> item.name);           </span><span style="color: #6A737D">// 声明转换规则</span></span></code></pre></div></div></figure></li><li><p><strong>领域特定语言（DSL）</strong><br />许多声明式语法是领域专用的，如：</p><ul><li><strong>SQL</strong>：数据库查询</li><li><strong>HTML</strong>：描述页面结构</li><li><strong>Kubernetes YAML</strong>：定义容器编排</li></ul></li></ol><h4 id="优缺点-4"><a class="markdownIt-Anchor" href="#优缺点-4"></a> 优缺点</h4><table><thead><tr><th style="text-align:center">优点</th><th style="text-align:center">缺点</th></tr></thead><tbody><tr><td style="text-align:center"><strong>代码简洁</strong>：更少代码行数</td><td style="text-align:center"><strong>灵活性受限</strong>：底层控制力弱</td></tr><tr><td style="text-align:center"><strong>高可读性</strong>：接近业务描述</td><td style="text-align:center"><strong>性能优化难</strong>：依赖底层实现</td></tr><tr><td style="text-align:center"><strong>易维护</strong>：逻辑与实现解耦</td><td style="text-align:center"><strong>学习曲线陡</strong>（如函数式）</td></tr></tbody></table><h3 id="函数式编程functional-programming-fp"><a class="markdownIt-Anchor" href="#函数式编程functional-programming-fp"></a> <strong>函数式编程（Functional Programming, FP）</strong></h3><p><strong>核心思想</strong>：用<strong>纯函数</strong>和<strong>不可变数据</strong>构建程序，通过函数的组合与变换解决问题，而非依赖状态和副作用。<br /><strong>类比</strong>：像数学中的函数计算，输入确定 → 输出必然确定，且不改变外部世界。</p><h4 id="核心原则"><a class="markdownIt-Anchor" href="#核心原则"></a> <strong>核心原则</strong></h4><ol><li><strong>纯函数（Pure Function）</strong></li></ol><ul><li><p><strong>定义</strong>：相同输入 → 永远相同输出，且无副作用。</p></li><li><p>示例：</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6A737D">// 纯函数</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #6F42C1">add</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (</span><span style="color: #E36209">a</span><span style="color: #24292E">, </span><span style="color: #E36209">b</span><span style="color: #24292E">) </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> a </span><span style="color: #D73A49">+</span><span style="color: #24292E"> b;</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 非纯函数（依赖外部变量）</span></span><span class="line"><span style="color: #D73A49">let</span><span style="color: #24292E"> taxRate </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0.1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #6F42C1">calculateTax</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #E36209">price</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> price </span><span style="color: #D73A49">*</span><span style="color: #24292E"> taxRate; </span><span style="color: #6A737D">// 输出依赖外部状态</span></span></code></pre></div></div></figure></li></ul><ol start="2"><li><strong>不可变数据（Immutability）</strong></li></ol><ul><li><p><strong>定义</strong>：数据一旦创建，不可修改，只能生成新数据。</p></li><li><p>示例：</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6A737D">// 错误：直接修改原数组（可变）</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">arr</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> [</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">2</span><span style="color: #24292E">, </span><span style="color: #005CC5">3</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #24292E">arr.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(</span><span style="color: #005CC5">4</span><span style="color: #24292E">); </span><span style="color: #6A737D">// arr 变为 [1,2,3,4]</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 正确：生成新数组（不可变）</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">newArr</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> [</span><span style="color: #D73A49">...</span><span style="color: #24292E">arr, </span><span style="color: #005CC5">4</span><span style="color: #24292E">]; </span><span style="color: #6A737D">// arr 仍为 [1,2,3]</span></span></code></pre></div></div></figure></li></ul><ol start="3"><li><strong>高阶函数（Higher-Order Function）</strong></li></ol><ul><li><p><strong>定义</strong>：函数可作为参数传递，或返回另一个函数。</p></li><li><p>示例：</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6A737D">// 高阶函数：map 接收函数作为参数</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">doubled</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> [</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">2</span><span style="color: #24292E">, </span><span style="color: #005CC5">3</span><span style="color: #24292E">].</span><span style="color: #6F42C1">map</span><span style="color: #24292E">(</span><span style="color: #E36209">x</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> x </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">); </span><span style="color: #6A737D">// [2,4,6]</span></span></code></pre></div></div></figure></li></ul><ol start="4"><li><strong>函数组合（Function Composition）</strong></li></ol><ul><li><p><strong>定义</strong>：将多个函数串联，形成新函数。</p></li><li><p>示例：</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #6F42C1">add1</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #6F42C1">multiply2</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> x </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #6F42C1">compose</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (</span><span style="color: #E36209">f</span><span style="color: #24292E">, </span><span style="color: #E36209">g</span><span style="color: #24292E">) </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">f</span><span style="color: #24292E">(</span><span style="color: #6F42C1">g</span><span style="color: #24292E">(x));</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">addThenMultiply</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">compose</span><span style="color: #24292E">(multiply2, add1);</span></span><span class="line"><span style="color: #6F42C1">addThenMultiply</span><span style="color: #24292E">(</span><span style="color: #005CC5">3</span><span style="color: #24292E">); </span><span style="color: #6A737D">// (3+1)*2 = 8</span></span></code></pre></div></div></figure></li></ul><h4 id="优缺点-5"><a class="markdownIt-Anchor" href="#优缺点-5"></a> 优缺点</h4><table><thead><tr><th style="text-align:center"><strong>优点</strong></th><th style="text-align:center"><strong>缺点</strong></th></tr></thead><tbody><tr><td style="text-align:center"><strong>可预测性高</strong>：纯函数确保相同输入必得相同输出，无隐藏副作用。</td><td style="text-align:center"><strong>学习曲线陡峭</strong>：闭包、柯里化、Monad 等抽象概念对新手不友好。</td></tr><tr><td style="text-align:center"><strong>易于调试和测试</strong>：无副作用，单元测试只需验证输入输出。</td><td style="text-align:center"><strong>性能开销</strong>：不可变数据频繁创建新对象，可能增加内存占用。</td></tr><tr><td style="text-align:center"><strong>并发安全性</strong>：无共享状态，天然避免多线程竞态条件。</td><td style="text-align:center"><strong>处理副作用困难</strong>：I/O、网络请求需引入 Monad 等复杂模式。</td></tr><tr><td style="text-align:center"><strong>代码简洁性</strong>：高阶函数（如 <code>map</code>/<code>filter</code>）替代复杂循环。</td><td style="text-align:center"><strong>代码可读性争议</strong>：过度函数组合可能导致链式调用过长，难以理解。</td></tr><tr><td style="text-align:center"><strong>模块化和复用性</strong>：函数像乐高积木，可灵活组合复用。</td><td style="text-align:center"><strong>与现有代码整合困难</strong>：混合范式易导致架构混乱（如 OOP + FP）。</td></tr><tr><td style="text-align:center"><strong>数据不可变性</strong>：减少意外修改风险，提升代码健壮性。</td><td style="text-align:center"><strong>适用场景受限</strong>：高性能计算、底层开发等场景不占优。</td></tr></tbody></table><h3 id="响应式编程reactive-programming"><a class="markdownIt-Anchor" href="#响应式编程reactive-programming"></a> <strong>响应式编程（Reactive Programming）</strong></h3><p><strong>核心思想</strong>：通过<strong>数据流（Stream）和变化传播</strong>自动响应事件或数据变更，以声明式方式处理异步逻辑。<br /><strong>类比</strong>：像多米诺骨牌——推倒第一块（事件触发）后，后续连锁反应自动发生（数据流传递）。</p><h4 id="核心特点-4"><a class="markdownIt-Anchor" href="#核心特点-4"></a> 核心特点</h4><ol><li><p><strong>数据流驱动</strong><br />将事件、变量、请求等抽象为随时间流动的数据流（Stream）。</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6A737D">// RxJS：创建点击事件流</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">click$</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">fromEvent</span><span style="color: #24292E">(button, </span><span style="color: #032F62">&#39;click&#39;</span><span style="color: #24292E">);</span></span></code></pre></div></div></figure></li><li><p><strong>观察者模式</strong><br />订阅数据流，在数据到达时触发回调。</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">click$.</span><span style="color: #6F42C1">subscribe</span><span style="color: #24292E">(</span><span style="color: #E36209">event</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;Button clicked!&#39;</span><span style="color: #24292E">));</span></span></code></pre></div></div></figure></li><li><p><strong>操作符链式处理</strong><br />使用操作符（如 <code>map</code>、<code>filter</code>、<code>debounceTime</code>）对流进行转换、合并或控制。</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6A737D">// 输入框防抖 + 请求过滤</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">input$</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">fromEvent</span><span style="color: #24292E">(input, </span><span style="color: #032F62">&#39;input&#39;</span><span style="color: #24292E">).</span><span style="color: #6F42C1">pipe</span><span style="color: #24292E">(</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">map</span><span style="color: #24292E">(</span><span style="color: #E36209">e</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> e.target.value),</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">debounceTime</span><span style="color: #24292E">(</span><span style="color: #005CC5">300</span><span style="color: #24292E">),</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">filter</span><span style="color: #24292E">(</span><span style="color: #E36209">text</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> text.</span><span style="color: #005CC5">length</span><span style="color: #24292E"> </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">);</span></span></code></pre></div></div></figure></li><li><p><strong>背压管理</strong><br />处理生产者与消费者速度不匹配的问题（如流量控制）。</p><figure class="shiki javascript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6A737D">// 每累积10次点击后批量处理</span></span><span class="line"><span style="color: #24292E">click$.</span><span style="color: #6F42C1">pipe</span><span style="color: #24292E">(</span><span style="color: #6F42C1">bufferCount</span><span style="color: #24292E">(</span><span style="color: #005CC5">10</span><span style="color: #24292E">)).</span><span style="color: #6F42C1">subscribe</span><span style="color: #24292E">(processBatch);</span></span></code></pre></div></div></figure></li></ol><h4 id="优缺点-6"><a class="markdownIt-Anchor" href="#优缺点-6"></a> <strong>优缺点</strong></h4><table><thead><tr><th style="text-align:center">优点</th><th style="text-align:center">缺点</th></tr></thead><tbody><tr><td style="text-align:center"><strong>简化复杂异步逻辑</strong>：链式操作符替代嵌套回调</td><td style="text-align:center"><strong>学习曲线陡峭</strong>：需理解流、操作符、订阅机制</td></tr><tr><td style="text-align:center"><strong>声明式代码</strong>：逻辑更清晰易维护</td><td style="text-align:center"><strong>调试困难</strong>：异步流执行路径复杂</td></tr><tr><td style="text-align:center"><strong>高效资源管理</strong>：自动取消无用订阅</td><td style="text-align:center"><strong>过度工程化</strong>：简单场景可能增加复杂度</td></tr><tr><td style="text-align:center"><strong>天然适合实时系统</strong>：如聊天、股票行情</td><td style="text-align:center"><strong>生态依赖</strong>：需配合RxJS等库使用</td></tr></tbody></table><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>编程范式是解决问题的不同视角和工具箱，没有绝对优劣之分，关键在于<strong>根据场景选择最佳组合</strong>。以下是综合对比与选择指南：</p><h3 id="范式对比矩阵"><a class="markdownIt-Anchor" href="#范式对比矩阵"></a> <strong>范式对比矩阵</strong></h3><table><thead><tr><th style="text-align:center"><strong>维度</strong></th><th style="text-align:center">命令式/过程式</th><th style="text-align:center">面向对象 (OOP)</th><th style="text-align:center">函数式 (FP)</th><th style="text-align:center">响应式 (RP)</th></tr></thead><tbody><tr><td style="text-align:center"><strong>核心思维</strong></td><td style="text-align:center">“怎么做”（步骤控制）</td><td style="text-align:center">“谁负责什么”（对象建模）</td><td style="text-align:center">“数据如何流动”（函数组合）</td><td style="text-align:center">“事件如何传播”（数据流）</td></tr><tr><td style="text-align:center"><strong>状态管理</strong></td><td style="text-align:center">可变状态（高风险）</td><td style="text-align:center">对象封装状态（中等风险）</td><td style="text-align:center">不可变数据（低风险）</td><td style="text-align:center">异步流（中等风险）</td></tr><tr><td style="text-align:center"><strong>并发处理</strong></td><td style="text-align:center">手动加锁（高复杂度）</td><td style="text-align:center">需谨慎设计（中复杂度）</td><td style="text-align:center">天然安全（低复杂度）</td><td style="text-align:center">非阻塞IO（中复杂度）</td></tr><tr><td style="text-align:center"><strong>典型场景</strong></td><td style="text-align:center">底层开发、简单脚本</td><td style="text-align:center">业务系统、GUI应用</td><td style="text-align:center">数据处理、高并发</td><td style="text-align:center">实时交互、复杂异步</td></tr><tr><td style="text-align:center"><strong>代码可维护性</strong></td><td style="text-align:center">★★☆☆☆</td><td style="text-align:center">★★★★☆</td><td style="text-align:center">★★★★☆</td><td style="text-align:center">★★★☆☆</td></tr><tr><td style="text-align:center"><strong>学习曲线</strong></td><td style="text-align:center">★★☆☆☆（易）</td><td style="text-align:center">★★★☆☆（中等）</td><td style="text-align:center">★★★★☆（难）</td><td style="text-align:center">★★★★☆（难）</td></tr></tbody></table><hr /><h3 id="选择范式的-3-个黄金原则"><a class="markdownIt-Anchor" href="#选择范式的-3-个黄金原则"></a> <strong>选择范式的 3 个黄金原则</strong></h3><ol><li><strong>问题匹配原则</strong><ul><li>处理数据流水线 → <strong>函数式</strong>（如 <code>map/filter/reduce</code>）</li><li>构建业务模型 → <strong>面向对象</strong>（如订单、用户类）</li><li>实时事件驱动 → <strong>响应式</strong>（如聊天室消息流）</li><li>底层性能优化 → <strong>命令式</strong>（如游戏引擎循环）</li></ul></li><li><strong>语言适配原则</strong><ul><li>JavaScript：混合范式（FP + OOP + RP）</li><li>Java / C#：强 OOP，适度引入 FP（Stream API）</li><li>Python：灵活混用（脚本式 + OOP + FP）</li><li>Haskell / Elixir：纯函数式优先</li></ul></li><li><strong>渐进式实践路径</strong><ul><li>新手：命令式 → 过程式 → OOP</li><li>进阶：FP基础（纯函数/不可变数据） → RP核心（Observable/操作符）</li><li>高手：混合范式设计（如 React函数组件 + Redux状态管理）</li></ul></li></ol>]]></content>
    
    
    <categories>
      
      <category>Web 开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web 开发</tag>
      
      <tag>编程范式</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>never 的使用场景</title>
    <link href="/archives/1056474876/"/>
    <url>/archives/1056474876/</url>
    
    <content type="html"><![CDATA[<blockquote><p><code>never</code> 类型表示永远不会存在的值或不可达的代码</p></blockquote><h2 id="用于表示永远不会返回的函数"><a class="markdownIt-Anchor" href="#用于表示永远不会返回的函数"></a> 用于表示永远不会返回的函数</h2><p>如果一个函数永远不会正常结束（例如，它抛出异常或进入无限循环），则可以将其返回类型声明为 <code>never</code>。</p><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">typescript复制代码function </span><span style="color: #6F42C1">throwError</span><span style="color: #24292E">(message: string): never {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">throw</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Error</span><span style="color: #24292E">(message);</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">infiniteLoop</span><span style="color: #24292E">()</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">never</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #005CC5">true</span><span style="color: #24292E">) {}</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><p>这里 <code>never</code> 表示这些函数不会返回值，因为它们不会执行到结束。</p><h2 id="用于类型约束"><a class="markdownIt-Anchor" href="#用于类型约束"></a> 用于类型约束</h2><p><code>never</code> 也可以用在一些高级类型操作中，用于创建更加严格的类型约束。</p><h3 id="示例-1类型不可能的情况"><a class="markdownIt-Anchor" href="#示例-1类型不可能的情况"></a> 示例 1：类型不可能的情况</h3><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">type</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Impossible</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">string</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> </span><span style="color: #005CC5">number</span><span style="color: #24292E">; </span><span style="color: #6A737D">// 永远不可能同时是 string 和 number</span></span></code></pre></div></div></figure><p>这里 <code>Impossible</code> 类型的值永远不存在，实际等价于 <code>never</code>。</p><h3 id="示例-2用作空联合"><a class="markdownIt-Anchor" href="#示例-2用作空联合"></a> 示例 2：用作空联合</h3><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">type</span><span style="color: #24292E"> </span><span style="color: #6F42C1">EmptyUnion</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">never</span><span style="color: #24292E"> </span><span style="color: #D73A49">|</span><span style="color: #24292E"> </span><span style="color: #005CC5">string</span><span style="color: #24292E">; </span><span style="color: #6A737D">// 等价于 string</span></span><span class="line"><span style="color: #D73A49">type</span><span style="color: #24292E"> </span><span style="color: #6F42C1">IntersectionWithNever</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">string</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> </span><span style="color: #005CC5">never</span><span style="color: #24292E">; </span><span style="color: #6A737D">// 等价于 never</span></span></code></pre></div></div></figure><h2 id="用于类型收窄"><a class="markdownIt-Anchor" href="#用于类型收窄"></a> 用于类型收窄</h2><p>在联合类型中，通过类型收窄（type narrowing）来确保代码处理了所有可能的情况。如果某些分支理论上不可达，可以用 <code>never</code> 表示。</p><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">assertNever</span><span style="color: #24292E">(</span><span style="color: #E36209">value</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">never</span><span style="color: #24292E">)</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">never</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">throw</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Error</span><span style="color: #24292E">(</span><span style="color: #032F62">`Unexpected value: ${</span><span style="color: #24292E">value</span><span style="color: #032F62">}`</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">type</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Animal</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Dog</span><span style="color: #24292E"> </span><span style="color: #D73A49">|</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Cat</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">interface</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Dog</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #E36209">kind</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;dog&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">bark</span><span style="color: #24292E">()</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">void</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">interface</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Cat</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #E36209">kind</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;cat&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">meow</span><span style="color: #24292E">()</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">void</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">handleAnimal</span><span style="color: #24292E">(</span><span style="color: #E36209">animal</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Animal</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">switch</span><span style="color: #24292E"> (animal.kind) {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">case</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;dog&#39;</span><span style="color: #24292E">:</span></span><span class="line"><span style="color: #24292E">      animal.</span><span style="color: #6F42C1">bark</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #D73A49">break</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">case</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;cat&#39;</span><span style="color: #24292E">:</span></span><span class="line"><span style="color: #24292E">      animal.</span><span style="color: #6F42C1">meow</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #D73A49">break</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">default</span><span style="color: #24292E">:</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #6F42C1">assertNever</span><span style="color: #24292E">(animal); </span><span style="color: #6A737D">// 确保处理了所有可能的情况</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>TypeScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>TypeScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据类型</title>
    <link href="/archives/3126418019/"/>
    <url>/archives/3126418019/</url>
    
    <content type="html"><![CDATA[<h2 id="基本类型"><a class="markdownIt-Anchor" href="#基本类型"></a> 基本类型</h2><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">描述</th><th style="text-align:left">示例代码</th></tr></thead><tbody><tr><td style="text-align:left"><code>number</code></td><td style="text-align:left">数字类型，包括整数和浮点数</td><td style="text-align:left"><code>let age: number = 25;</code></td></tr><tr><td style="text-align:left"><code>string</code></td><td style="text-align:left">字符串类型</td><td style="text-align:left"><code>let name: string = &quot;Tom&quot;;</code></td></tr><tr><td style="text-align:left"><code>boolean</code></td><td style="text-align:left">布尔类型，表示 <code>true</code> 或 <code>false</code></td><td style="text-align:left"><code>let isStudent: boolean = true;</code></td></tr><tr><td style="text-align:left"><code>null</code></td><td style="text-align:left">空值</td><td style="text-align:left"><code>let data: null = null;</code></td></tr><tr><td style="text-align:left"><code>undefined</code></td><td style="text-align:left">未定义的值</td><td style="text-align:left"><code>let value: undefined = undefined;</code></td></tr><tr><td style="text-align:left"><code>symbol</code></td><td style="text-align:left">唯一的符号值（ES6 引入）</td><td style="text-align:left"><code>const id: symbol = Symbol(&quot;id&quot;);</code></td></tr><tr><td style="text-align:left"><code>bigint</code></td><td style="text-align:left">大整数（ES2020 引入）</td><td style="text-align:left"><code>const bigNumber: bigint = 100n;</code></td></tr></tbody></table><h2 id="引用类型"><a class="markdownIt-Anchor" href="#引用类型"></a> 引用类型</h2><p>在 TypeScript 和 JavaScript 中，引用类型是指那些在内存中存储的是对实际数据的引用（或地址），而不是数据本身的类型。引用类型包括对象、数组、函数等。与基本类型（如 <code>number</code>、<code>string</code>、<code>boolean</code> 等）不同，引用类型的变量存储的是对内存中实际数据的引用，因此多个变量可以引用同一个对象，并且对对象的修改会影响所有引用该对象的变量。</p><p>以下是一些常见的引用类型：</p><h3 id="对象类型"><a class="markdownIt-Anchor" href="#对象类型"></a> 对象类型：</h3><ul><li><code>&#123;&#125;</code>：对象类型</li></ul><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">obj</span><span style="color: #D73A49">:</span><span style="color: #24292E"> { </span><span style="color: #E36209">name</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">string</span><span style="color: #24292E">; </span><span style="color: #E36209">age</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">number</span><span style="color: #24292E"> } </span><span style="color: #D73A49">=</span><span style="color: #24292E"> { name: </span><span style="color: #032F62">&#39;Alice&#39;</span><span style="color: #24292E">, age: </span><span style="color: #005CC5">30</span><span style="color: #24292E"> };</span></span></code></pre></div></div></figure><h3 id="数组类型"><a class="markdownIt-Anchor" href="#数组类型"></a> 数组类型：</h3><ul><li><code>number[]</code>：数字数组</li><li><code>Array&lt;number&gt;</code>：数字数组的另一种表示方式</li></ul><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">arr</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">number</span><span style="color: #24292E">[] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> [</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">2</span><span style="color: #24292E">, </span><span style="color: #005CC5">3</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">arr2</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Array</span><span style="color: #24292E">&lt;</span><span style="color: #005CC5">number</span><span style="color: #24292E">&gt; </span><span style="color: #D73A49">=</span><span style="color: #24292E"> [</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">2</span><span style="color: #24292E">, </span><span style="color: #005CC5">3</span><span style="color: #24292E">];</span></span></code></pre></div></div></figure><h3 id="元组类型"><a class="markdownIt-Anchor" href="#元组类型"></a> 元组类型：</h3><ul><li><code>[string, number]</code>：固定长度和类型的数组</li></ul><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">tuple</span><span style="color: #D73A49">:</span><span style="color: #24292E"> [</span><span style="color: #005CC5">string</span><span style="color: #24292E">, </span><span style="color: #005CC5">number</span><span style="color: #24292E">] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> [</span><span style="color: #032F62">&#39;Alice&#39;</span><span style="color: #24292E">, </span><span style="color: #005CC5">30</span><span style="color: #24292E">];</span></span></code></pre></div></div></figure><h3 id="函数类型"><a class="markdownIt-Anchor" href="#函数类型"></a> 函数类型：</h3><ul><li><code>(param: type) =&gt; returnType</code>：函数类型</li></ul><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #6F42C1">func</span><span style="color: #D73A49">:</span><span style="color: #24292E"> (</span><span style="color: #E36209">x</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">number</span><span style="color: #24292E">, </span><span style="color: #E36209">y</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">number</span><span style="color: #24292E">) </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">number</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (</span><span style="color: #E36209">x</span><span style="color: #24292E">, </span><span style="color: #E36209">y</span><span style="color: #24292E">) </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> y;</span></span></code></pre></div></div></figure><h3 id="接口类型"><a class="markdownIt-Anchor" href="#接口类型"></a> 接口类型：</h3><ul><li><code>interface</code>：定义对象的结构</li></ul><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">interface</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Person</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #E36209">name</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">string</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #E36209">age</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">number</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">person</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Person</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> { name: </span><span style="color: #032F62">&#39;Alice&#39;</span><span style="color: #24292E">, age: </span><span style="color: #005CC5">30</span><span style="color: #24292E"> };</span></span></code></pre></div></div></figure><h3 id="类类型"><a class="markdownIt-Anchor" href="#类类型"></a> 类类型：</h3><ul><li><code>class</code>：定义类</li></ul><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">class</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Person</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #E36209">name</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">string</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #E36209">age</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">number</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">constructor</span><span style="color: #24292E">(</span><span style="color: #E36209">name</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">string</span><span style="color: #24292E">, </span><span style="color: #E36209">age</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">number</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #005CC5">this</span><span style="color: #24292E">.name </span><span style="color: #D73A49">=</span><span style="color: #24292E"> name;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #005CC5">this</span><span style="color: #24292E">.age </span><span style="color: #D73A49">=</span><span style="color: #24292E"> age;</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">person</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Person</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;Alice&#39;</span><span style="color: #24292E">, </span><span style="color: #005CC5">30</span><span style="color: #24292E">);</span></span></code></pre></div></div></figure><h2 id="特殊类型"><a class="markdownIt-Anchor" href="#特殊类型"></a> 特殊类型</h2><p>在 TypeScript 中，有一些特殊类型，它们提供了额外的灵活性和功能。以下是一些常见的特殊类型：</p><h3 id="any-类型"><a class="markdownIt-Anchor" href="#any-类型"></a> <code>any</code> 类型：</h3><ul><li><code>any</code> 类型表示任意类型，可以赋值为任何类型的值。使用 <code>any</code> 类型会关闭类型检查。</li></ul><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">let</span><span style="color: #24292E"> value</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">any</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">42</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">value </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;Hello&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">value </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span></code></pre></div></div></figure><h3 id="unknown-类型"><a class="markdownIt-Anchor" href="#unknown-类型"></a> <code>unknown</code> 类型：</h3><ul><li><code>unknown</code> 类型表示未知类型，是 <code>any</code> 类型的安全版本。必须进行类型检查后才能对 <code>unknown</code> 类型的值进行操作。</li></ul><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">let</span><span style="color: #24292E"> value</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">unknown</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">42</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #D73A49">typeof</span><span style="color: #24292E"> value </span><span style="color: #D73A49">===</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;string&#39;</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(value.</span><span style="color: #6F42C1">toUpperCase</span><span style="color: #24292E">());</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h3 id="void-类型"><a class="markdownIt-Anchor" href="#void-类型"></a> <code>void</code> 类型：</h3><ul><li><code>void</code> 类型表示没有任何类型，通常用于函数没有返回值的情况。</li></ul><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">logMessage</span><span style="color: #24292E">(</span><span style="color: #E36209">message</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">string</span><span style="color: #24292E">)</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">void</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(message);</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h3 id="never-类型"><a class="markdownIt-Anchor" href="#never-类型"></a> <code>never</code> 类型：</h3><ul><li><code>never</code> 类型表示永不存在的值的类型，通常用于不会正常结束的函数（如抛出错误的函数）或永远不会有返回值的函数。</li></ul><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">error</span><span style="color: #24292E">(</span><span style="color: #E36209">message</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">string</span><span style="color: #24292E">)</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">never</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">throw</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Error</span><span style="color: #24292E">(message);</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h3 id="enum-类型"><a class="markdownIt-Anchor" href="#enum-类型"></a> <code>enum</code> 类型：</h3><ul><li><code>enum</code> 类型用于定义一组命名常量。枚举类型可以更好地组织和管理相关的常量值。</li></ul><p>数字枚举是默认的枚举类型，每个成员都有一个数值，默认从 <code>0</code> 开始递增。</p><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">enum</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Direction</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #005CC5">Up</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #005CC5">Down</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #005CC5">Left</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #005CC5">Right</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">let</span><span style="color: #24292E"> dir</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Direction</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> Direction.Up;</span></span><span class="line"><span style="color: #24292E">console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(dir); </span><span style="color: #6A737D">// 输出: 0</span></span></code></pre></div></div></figure><h2 id="其他类型"><a class="markdownIt-Anchor" href="#其他类型"></a> 其他类型</h2><h3 id="联合类型union-types"><a class="markdownIt-Anchor" href="#联合类型union-types"></a> 联合类型（Union Types）</h3><p>联合类型表示一个值可以是几种类型之一。使用竖线 (<code>|</code>) 分隔多个类型来定义联合类型。</p><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">let</span><span style="color: #24292E"> value</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">string</span><span style="color: #24292E"> </span><span style="color: #D73A49">|</span><span style="color: #24292E"> </span><span style="color: #005CC5">number</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">value </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;Hello&#39;</span><span style="color: #24292E">; </span><span style="color: #6A737D">// 合法</span></span><span class="line"><span style="color: #24292E">value </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">42</span><span style="color: #24292E">; </span><span style="color: #6A737D">// 合法</span></span></code></pre></div></div></figure><h3 id="交叉类型intersection-types"><a class="markdownIt-Anchor" href="#交叉类型intersection-types"></a> 交叉类型（Intersection Types）</h3><p>交叉类型表示一个值同时是几种类型的组合。使用与号 (<code>&amp;</code>) 分隔多个类型来定义交叉类型。</p><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">interface</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Person</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #E36209">name</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">string</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">interface</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Employee</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #E36209">employeeId</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">number</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">type</span><span style="color: #24292E"> </span><span style="color: #6F42C1">EmployeePerson</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Person</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Employee</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">let</span><span style="color: #24292E"> employee</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #6F42C1">EmployeePerson</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  name: </span><span style="color: #032F62">&#39;Alice&#39;</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">  employeeId: </span><span style="color: #005CC5">1234</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">};</span></span></code></pre></div></div></figure><h3 id="索引类型index-types"><a class="markdownIt-Anchor" href="#索引类型index-types"></a> 索引类型（Index Types）</h3><p>索引类型允许你通过索引操作符 <code>keyof</code> 和索引签名来操作类型。<code>keyof</code> 操作符用于获取某个类型的所有键，索引签名用于访问类型的属性。</p><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">interface</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Person</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #E36209">name</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">string</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #E36209">age</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">number</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">type</span><span style="color: #24292E"> </span><span style="color: #6F42C1">PersonKeys</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">keyof</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Person</span><span style="color: #24292E">; </span><span style="color: #6A737D">// &quot;name&quot; | &quot;age&quot;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">getProperty</span><span style="color: #24292E">&lt;</span><span style="color: #6F42C1">T</span><span style="color: #24292E">, </span><span style="color: #6F42C1">K</span><span style="color: #24292E"> </span><span style="color: #D73A49">extends</span><span style="color: #24292E"> </span><span style="color: #D73A49">keyof</span><span style="color: #24292E"> </span><span style="color: #6F42C1">T</span><span style="color: #24292E">&gt;(</span><span style="color: #E36209">obj</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #6F42C1">T</span><span style="color: #24292E">, </span><span style="color: #E36209">key</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #6F42C1">K</span><span style="color: #24292E">)</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #6F42C1">T</span><span style="color: #24292E">[</span><span style="color: #6F42C1">K</span><span style="color: #24292E">] {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">return</span><span style="color: #24292E"> obj[key];</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">person</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Person</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> { name: </span><span style="color: #032F62">&#39;Alice&#39;</span><span style="color: #24292E">, age: </span><span style="color: #005CC5">30</span><span style="color: #24292E"> };</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">name</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">getProperty</span><span style="color: #24292E">(person, </span><span style="color: #032F62">&#39;name&#39;</span><span style="color: #24292E">); </span><span style="color: #6A737D">// &quot;Alice&quot;</span></span></code></pre></div></div></figure><h3 id="映射类型mapped-types"><a class="markdownIt-Anchor" href="#映射类型mapped-types"></a> 映射类型（Mapped Types）</h3><p>映射类型允许你基于已有类型创建新的类型。使用 <code>in</code> 关键字和索引签名来定义映射类型。</p><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">type</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Person</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #E36209">name</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">string</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #E36209">age</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">number</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">};</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 将所有属性变为可选</span></span><span class="line"><span style="color: #D73A49">type</span><span style="color: #24292E"> </span><span style="color: #6F42C1">PartialPerson</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  [</span><span style="color: #6F42C1">P</span><span style="color: #24292E"> </span><span style="color: #D73A49">in</span><span style="color: #24292E"> </span><span style="color: #D73A49">keyof</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Person</span><span style="color: #24292E">]</span><span style="color: #D73A49">?:</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Person</span><span style="color: #24292E">[</span><span style="color: #6F42C1">P</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #24292E">};</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 将所有属性变为只读</span></span><span class="line"><span style="color: #D73A49">type</span><span style="color: #24292E"> </span><span style="color: #6F42C1">ReadonlyPerson</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  [</span><span style="color: #6F42C1">P</span><span style="color: #24292E"> </span><span style="color: #D73A49">in</span><span style="color: #24292E"> </span><span style="color: #D73A49">keyof</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Person</span><span style="color: #24292E">]</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Readonly</span><span style="color: #24292E">&lt;</span><span style="color: #6F42C1">Person</span><span style="color: #24292E">[</span><span style="color: #6F42C1">P</span><span style="color: #24292E">]&gt;;</span></span><span class="line"><span style="color: #24292E">};</span></span></code></pre></div></div></figure><h3 id="条件类型conditional-types"><a class="markdownIt-Anchor" href="#条件类型conditional-types"></a> 条件类型（Conditional Types）</h3><p>条件类型允许你根据条件来选择类型。使用 <code>extends</code> 关键字来定义条件类型。</p><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">type</span><span style="color: #24292E"> </span><span style="color: #6F42C1">IsString</span><span style="color: #24292E">&lt;</span><span style="color: #6F42C1">T</span><span style="color: #24292E">&gt; </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">T</span><span style="color: #24292E"> </span><span style="color: #D73A49">extends</span><span style="color: #24292E"> </span><span style="color: #005CC5">string</span><span style="color: #24292E"> </span><span style="color: #D73A49">?</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;yes&#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;no&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">type</span><span style="color: #24292E"> </span><span style="color: #6F42C1">A</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">IsString</span><span style="color: #24292E">&lt;</span><span style="color: #005CC5">string</span><span style="color: #24292E">&gt;; </span><span style="color: #6A737D">// &quot;yes&quot;</span></span><span class="line"><span style="color: #D73A49">type</span><span style="color: #24292E"> </span><span style="color: #6F42C1">B</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">IsString</span><span style="color: #24292E">&lt;</span><span style="color: #005CC5">number</span><span style="color: #24292E">&gt;; </span><span style="color: #6A737D">// &quot;no&quot;</span></span></code></pre></div></div></figure><h3 id="模版字符串类型template-literal-types"><a class="markdownIt-Anchor" href="#模版字符串类型template-literal-types"></a> 模版字符串类型（Template Literal Types）</h3><p>模版字符串类型允许你基于字符串字面量类型创建新的字符串类型。使用反引号（<code>`</code>）和 <code>$&#123;&#125;</code> 语法来定义模版字符串类型。</p><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">type</span><span style="color: #24292E"> </span><span style="color: #6F42C1">World</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;world&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">type</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Greeting</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">`hello ${</span><span style="color: #6F42C1">World</span><span style="color: #032F62">}`</span><span style="color: #24292E">; </span><span style="color: #6A737D">// &quot;hello world&quot;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">type</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Person</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;Alice&#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">|</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;Bob&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">type</span><span style="color: #24292E"> </span><span style="color: #6F42C1">GreetingMessage</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">`Hello, ${</span><span style="color: #6F42C1">Person</span><span style="color: #032F62">}!`</span><span style="color: #24292E">; </span><span style="color: #6A737D">// &quot;Hello, Alice!&quot; | &quot;Hello, Bob!&quot;</span></span></code></pre></div></div></figure><h3 id="字面量类型literal-types"><a class="markdownIt-Anchor" href="#字面量类型literal-types"></a> 字面量类型（Literal Types）</h3><p>字面量类型允许你指定具体的字符串、数字或布尔值作为类型。</p><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">type</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Direction</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;up&#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">|</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;down&#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">|</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;left&#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">|</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;right&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">let</span><span style="color: #24292E"> move</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Direction</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">move </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;up&#39;</span><span style="color: #24292E">; </span><span style="color: #6A737D">// OK</span></span><span class="line"><span style="color: #24292E">move </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;down&#39;</span><span style="color: #24292E">; </span><span style="color: #6A737D">// OK</span></span><span class="line"><span style="color: #24292E">move </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;go&#39;</span><span style="color: #24292E">; </span><span style="color: #6A737D">// Error</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>TypeScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>TypeScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>类型注解和类型推论</title>
    <link href="/archives/2586672183/"/>
    <url>/archives/2586672183/</url>
    
    <content type="html"><![CDATA[<h2 id="类型注解"><a class="markdownIt-Anchor" href="#类型注解"></a> 类型注解</h2><p>当使用 <code>const</code> 、 <code>var</code> 或 <code>let</code> 声明变量时，可以选择性地添加类型注释以明确指定变量的类型：</p><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">name</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">string</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;Tom&#39;</span><span style="color: #24292E">; </span><span style="color: #6A737D">// 显式注解 name 的类型为 string</span></span><span class="line"><span style="color: #D73A49">let</span><span style="color: #24292E"> age</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">number</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">25</span><span style="color: #24292E">; </span><span style="color: #6A737D">// 显式注解 age 的类型为 number</span></span><span class="line"><span style="color: #D73A49">let</span><span style="color: #24292E"> isStudent</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">boolean</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">; </span><span style="color: #6A737D">// 显式注解 isStudent 的类型为 boolean</span></span><span class="line"><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #E36209">a</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">number</span><span style="color: #24292E">, </span><span style="color: #E36209">b</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">number</span><span style="color: #24292E">)</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">number</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6A737D">// 显式注解 add 函数的参数和返回值类型</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">return</span><span style="color: #24292E"> a </span><span style="color: #D73A49">+</span><span style="color: #24292E"> b;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="类型推论"><a class="markdownIt-Anchor" href="#类型推论"></a> 类型推论</h2><p>类型推论是 TypeScript <strong>自动推断</strong>变量或表达式的类型的能力。如果你没有显式地指定类型，TypeScript 会根据变量的初始值或上下文自动推断出类型。</p><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">name</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;Tom&#39;</span><span style="color: #24292E">; </span><span style="color: #6A737D">// TypeScript 推断 name 的类型为 string</span></span><span class="line"><span style="color: #D73A49">let</span><span style="color: #24292E"> age </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">25</span><span style="color: #24292E">; </span><span style="color: #6A737D">// TypeScript 推断 age 的类型为 number</span></span><span class="line"><span style="color: #D73A49">let</span><span style="color: #24292E"> isStudent </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">; </span><span style="color: #6A737D">// TypeScript 推断 isStudent 的类型为 boolean</span></span><span class="line"><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #E36209">a</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">number</span><span style="color: #24292E">, </span><span style="color: #E36209">b</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">number</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6A737D">// TypeScript 推断返回值的类型为 number</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">return</span><span style="color: #24292E"> a </span><span style="color: #D73A49">+</span><span style="color: #24292E"> b;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="类型注解-vs-类型推论"><a class="markdownIt-Anchor" href="#类型注解-vs-类型推论"></a> 类型注解 vs 类型推论</h2><table><thead><tr><th style="text-align:left">特性</th><th style="text-align:left">类型注解（Type Annotation）</th><th style="text-align:left">类型推论（Type Inference）</th></tr></thead><tbody><tr><td style="text-align:left"><strong>定义方式</strong></td><td style="text-align:left">显式地为变量或表达式指定类型</td><td style="text-align:left">TypeScript 自动推断类型</td></tr><tr><td style="text-align:left"><strong>代码示例</strong></td><td style="text-align:left"><code>let age: number = 25;</code></td><td style="text-align:left"><code>let age = 25;</code></td></tr><tr><td style="text-align:left"><strong>适用场景</strong></td><td style="text-align:left">需要明确类型时（如函数参数、返回值）</td><td style="text-align:left">变量初始值明确时</td></tr><tr><td style="text-align:left"><strong>代码可读性</strong></td><td style="text-align:left">高，明确表达类型</td><td style="text-align:left">较低，类型是隐式的</td></tr><tr><td style="text-align:left"><strong>灵活性</strong></td><td style="text-align:left">严格，类型固定</td><td style="text-align:left">灵活，类型根据上下文动态推断</td></tr><tr><td style="text-align:left"><strong>开发效率</strong></td><td style="text-align:left">需要手动写类型，稍慢</td><td style="text-align:left">自动推断，更快</td></tr></tbody></table><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><ul><li><strong>类型注解</strong>：开发者手动指定类型，适合需要明确类型的场景，提高代码的可读性和可维护性。</li><li><strong>类型推论</strong>：TypeScript 自动推断类型，适合变量初始值明确的场景，简化代码。</li></ul><p>在实际开发中，通常会将两者结合使用：</p><ul><li>对于函数的参数和返回值，推荐使用类型注解，以确保类型安全。</li><li>对于变量初始化，如果类型明确，可以依赖类型推论，减少代码冗余。</li></ul>]]></content>
    
    
    <categories>
      
      <category>TypeScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>TypeScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GitHub Actions 实现夸克网盘定时签到</title>
    <link href="/archives/4220125092/"/>
    <url>/archives/4220125092/</url>
    
    <content type="html"><![CDATA[<h2 id="项目链接"><a class="markdownIt-Anchor" href="#项目链接"></a> 项目链接</h2><p>GitHub 仓库地址：<a href="https://github.com/xiaowhang/QuarkAutoSignIn">QuarkAutoSignIn - GitHub Repository</a></p><h2 id="什么是-github-actions"><a class="markdownIt-Anchor" href="#什么是-github-actions"></a> 什么是 GitHub Actions</h2><p>GitHub Actions 是 GitHub 提供的一种 <strong>持续集成和交付 (CI/CD) 平台</strong>，可以帮助开发者在代码库中自动化工作流程。它支持通过事件触发运行自定义脚本或操作，从而完成一系列任务，如构建、测试、部署、运行定时任务等。</p><h2 id="为什么用-github-actions"><a class="markdownIt-Anchor" href="#为什么用-github-actions"></a> 为什么用 GitHub Actions</h2><ol><li><strong>与 GitHub 无缝集成</strong>：直接在代码仓库内配置和运行，无需额外的工具。</li><li><strong>易用性</strong>：YAML 配置简单，内置丰富的官方和社区支持的 Actions。</li><li><strong>免费资源</strong><s>（最重要的一点）</s>：对于开源项目，GitHub 提供免费运行时，私有项目也有一定的免费配额。</li></ol><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>通过 Github Actions 定时运行 Python 脚本。</p><h2 id="使用-github-actions"><a class="markdownIt-Anchor" href="#使用-github-actions"></a> 使用 Github Actions</h2><p>完整 Github Actions 脚本：<a href="https://github.com/xiaowhang/QuarkAutoSignIn/blob/main/.github/workflows/main.yml">main.yml</a></p><p>在项目根目录下创建 <code>.github/workflows</code> 文件夹，新建一个工作流文件，如 <code>main.yml</code></p><h3 id="设置工作流名称"><a class="markdownIt-Anchor" href="#设置工作流名称"></a> 设置工作流名称</h3><figure class="shiki yaml"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #22863A">name</span><span style="color: #24292E">: </span><span style="color: #032F62">daily auto sign-in</span></span></code></pre></div></div></figure><p>这个名称会在 GitHub Actions 页面中显示，以帮助识别不同的工作流。</p><h3 id="指定触发-action-的事件"><a class="markdownIt-Anchor" href="#指定触发-action-的事件"></a> 指定触发 Action 的事件</h3><figure class="shiki yaml"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #005CC5">on</span><span style="color: #24292E">:</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #22863A">workflow_dispatch</span><span style="color: #24292E">: </span><span style="color: #6A737D"># 允许手动触发</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #22863A">schedule</span><span style="color: #24292E">:</span></span><span class="line"><span style="color: #24292E">    - </span><span style="color: #22863A">cron</span><span style="color: #24292E">: </span><span style="color: #032F62">&#39;0 2 * * *&#39;</span><span style="color: #24292E"> </span><span style="color: #6A737D"># 北京时间每天上午10点触发一次</span></span></code></pre></div></div></figure><ol><li><code>workflow_dispatch</code>：<ul><li><code>workflow_dispatch</code> 允许用户手动触发工作流。</li><li>可以在 GitHub 仓库的 <strong>Actions</strong> 页面中点击 <strong>Run workflow</strong> 按钮来手动启动该工作流</li></ul></li><li><code>schedule</code>：<ul><li><code>schedule</code> 允许用户基于 <strong>cron 表达式</strong> 设置定时任务，自动触发工作流。</li></ul></li></ol><h3 id="设置-action-要执行的命令"><a class="markdownIt-Anchor" href="#设置-action-要执行的命令"></a> 设置 Action 要执行的命令</h3><figure class="shiki yaml"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #22863A">jobs</span><span style="color: #24292E">:</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #22863A">sign_in</span><span style="color: #24292E">:</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #22863A">runs-on</span><span style="color: #24292E">: </span><span style="color: #032F62">ubuntu-latest</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #22863A">env</span><span style="color: #24292E">:</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #22863A">KPS</span><span style="color: #24292E">: </span><span style="color: #032F62">${{ secrets.KPS }}</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #22863A">SIGN</span><span style="color: #24292E">: </span><span style="color: #032F62">${{ secrets.SIGN }}</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #22863A">VCODE</span><span style="color: #24292E">: </span><span style="color: #032F62">${{ secrets.VCODE }}</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #22863A">SENDKEY</span><span style="color: #24292E">: </span><span style="color: #032F62">${{ secrets.SENDKEY }}</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #22863A">steps</span><span style="color: #24292E">:</span></span><span class="line"><span style="color: #24292E">      - </span><span style="color: #22863A">name</span><span style="color: #24292E">: </span><span style="color: #032F62">Checkout code</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #22863A">uses</span><span style="color: #24292E">: </span><span style="color: #032F62">actions/checkout@v3</span></span><span class="line"></span><span class="line"><span style="color: #24292E">      - </span><span style="color: #22863A">name</span><span style="color: #24292E">: </span><span style="color: #032F62">Set up Python</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #22863A">uses</span><span style="color: #24292E">: </span><span style="color: #032F62">actions/setup-python@v2</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #22863A">with</span><span style="color: #24292E">:</span></span><span class="line"><span style="color: #24292E">          </span><span style="color: #22863A">python-version</span><span style="color: #24292E">: </span><span style="color: #032F62">&#39;3.12&#39;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">      - </span><span style="color: #22863A">name</span><span style="color: #24292E">: </span><span style="color: #032F62">Cache Python dependencies</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #22863A">uses</span><span style="color: #24292E">: </span><span style="color: #032F62">actions/cache@v3</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #22863A">with</span><span style="color: #24292E">:</span></span><span class="line"><span style="color: #24292E">          </span><span style="color: #22863A">path</span><span style="color: #24292E">: </span><span style="color: #032F62">~/.cache/pip</span></span><span class="line"><span style="color: #24292E">          </span><span style="color: #22863A">key</span><span style="color: #24292E">: </span><span style="color: #032F62">${{ runner.os }}-pip-${{ hashFiles(&#39;**/requirements.txt&#39;) }}</span></span><span class="line"><span style="color: #24292E">          </span><span style="color: #22863A">restore-keys</span><span style="color: #24292E">: </span><span style="color: #D73A49">|</span></span><span class="line"><span style="color: #032F62">            ${{ runner.os }}-pip-</span></span><span class="line"></span><span class="line"><span style="color: #24292E">      - </span><span style="color: #22863A">name</span><span style="color: #24292E">: </span><span style="color: #032F62">Install dependencies if requirements.txt exists</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #22863A">run</span><span style="color: #24292E">: </span><span style="color: #D73A49">|</span></span><span class="line"><span style="color: #032F62">          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi</span></span><span class="line"></span><span class="line"><span style="color: #24292E">      - </span><span style="color: #22863A">name</span><span style="color: #24292E">: </span><span style="color: #032F62">Run main.py</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #22863A">run</span><span style="color: #24292E">: </span><span style="color: #032F62">python main.py</span></span></code></pre></div></div></figure><p>在 <code>jobs</code> 下，定义了一个名为 <code>sign_in</code> 的任务，它将自动运行一些命令：</p><ol><li><p><strong><code>runs-on</code>：</strong></p><ul><li>设置工作流运行的环境，这里选择使用 <code>ubuntu-latest</code>，即使用最新版本的 Ubuntu 运行工作流。</li></ul></li><li><p><strong>环境变量 (<code>env</code>)：</strong></p><ul><li><code>env</code> 用来定义环境变量，这些环境变量可以在后续的步骤中使用。如果没有需要传递的环境变量可以省略这部分。</li><li>在工作流中，我们通过 GitHub 的 Secrets 配置了一些敏感信息，如 <code>KPS</code>, <code>SIGN</code>, <code>VCODE</code> 和 <code>SENDKEY</code>。</li></ul></li><li><p><strong>步骤 (<code>steps</code>)：</strong></p><ul><li><p><strong>Checkout code</strong>：拉取最新的代码，确保工作流可以访问代码库中的 Python 脚本。</p><figure class="shiki yaml"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">- </span><span style="color: #22863A">name</span><span style="color: #24292E">: </span><span style="color: #032F62">Checkout code</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #22863A">uses</span><span style="color: #24292E">: </span><span style="color: #032F62">actions/checkout@v3</span><span style="color: #24292E"> </span><span style="color: #6A737D"># 使用官方的 checkout action 来拉取代码库</span></span></code></pre></div></div></figure></li><li><p><strong>Set up Python</strong>：设置所需的 Python 版本，这里选择了 <code>python-version: '3.12'</code>。</p><figure class="shiki yaml"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">- </span><span style="color: #22863A">name</span><span style="color: #24292E">: </span><span style="color: #032F62">Set up Python</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #22863A">uses</span><span style="color: #24292E">: </span><span style="color: #032F62">actions/setup-python@v2</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #22863A">with</span><span style="color: #24292E">:</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #22863A">python-version</span><span style="color: #24292E">: </span><span style="color: #032F62">&#39;3.12&#39;</span><span style="color: #24292E"> </span><span style="color: #6A737D"># 使用官方的 setup-python action 来安装指定版本的 Python</span></span></code></pre></div></div></figure></li><li><p><strong>Cache Python dependencies</strong>：缓存 Python 依赖项，保证每次工作流运行时只安装新依赖，而不是每次都重新安装。</p><figure class="shiki yaml"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">- </span><span style="color: #22863A">name</span><span style="color: #24292E">: </span><span style="color: #032F62">Cache Python dependencies</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #22863A">uses</span><span style="color: #24292E">: </span><span style="color: #032F62">actions/cache@v3</span><span style="color: #24292E"> </span><span style="color: #6A737D"># 使用官方的缓存 action 来缓存 pip 安装的依赖</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #22863A">with</span><span style="color: #24292E">:</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #22863A">path</span><span style="color: #24292E">: </span><span style="color: #032F62">~/.cache/pip</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #22863A">key</span><span style="color: #24292E">: </span><span style="color: #032F62">${{ runner.os }}-pip-${{ hashFiles(&#39;**/requirements.txt&#39;) }}</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #22863A">restore-keys</span><span style="color: #24292E">: </span><span style="color: #D73A49">|</span></span><span class="line"><span style="color: #032F62">      ${{ runner.os }}-pip-</span></span></code></pre></div></div></figure></li><li><p><strong>Install dependencies</strong>：如果 <code>requirements.txt</code> 存在，安装 Python 依赖库。</p><figure class="shiki yaml"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">- </span><span style="color: #22863A">name</span><span style="color: #24292E">: </span><span style="color: #032F62">Install dependencies if requirements.txt exists</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #22863A">run</span><span style="color: #24292E">: </span><span style="color: #D73A49">|</span></span><span class="line"><span style="color: #032F62">    if [ -f requirements.txt ]; then pip install -r requirements.txt; fi</span></span></code></pre></div></div></figure></li><li><p><strong>Run the Python script</strong>：最后，执行 <code>main.py</code> 脚本。</p><figure class="shiki yaml"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">- </span><span style="color: #22863A">name</span><span style="color: #24292E">: </span><span style="color: #032F62">Run main.py</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #22863A">run</span><span style="color: #24292E">: </span><span style="color: #032F62">python main.py</span></span></code></pre></div></div></figure></li></ul></li></ol><h3 id="提交工作流文件"><a class="markdownIt-Anchor" href="#提交工作流文件"></a> 提交工作流文件</h3><p>将 <code>.github/workflows/main.yml</code> 文件提交到 GitHub 仓库后，GitHub Actions 会根据触发事件（如定时任务或手动触发）自动执行该工作流。</p>]]></content>
    
    
    <categories>
      
      <category>Github</category>
      
      <category>Github Actions</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GitHub Actions</tag>
      
      <tag>Script</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>组件通信</title>
    <link href="/archives/1162395221/"/>
    <url>/archives/1162395221/</url>
    
    <content type="html"><![CDATA[<table><tr><th>组件关系</th><th>传递方式</th></tr ><tr><td rowspan="4">父传子</td><td><code>prop</code></td></tr><tr><td><code>v-model</code></td></tr><tr><td><code>$refs</code></td></tr><tr><td>默认插槽、具名插槽</td></tr><tr><td rowspan="5">子传父</td><td><code>prop</code></td></tr><tr><td>自定义事件</td></tr><tr><td><code>v-model</code></td></tr><tr><td><code>$parent</code></td></tr><tr><td>作用域插槽</td></tr><tr><td rowspan="2">祖传孙、孙传祖</td><td><code>$attrs</code></td></tr><tr><td><code>provide</code>、<code>inject</code></td></tr><tr><td rowspan="2">兄弟间、任意组件间</td><td><code>mitt</code></td></tr><tr><td><code>pinia</code></td></tr></table><h2 id="props">props</h2><h3 id="父子">父→子</h3><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;father&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;父组件&lt;/</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;计数：{{ count }}&lt;/</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #005CC5">Child</span><span style="color: #24292E"> :</span><span style="color: #6F42C1">count</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">count</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> /&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">script</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setup</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lang</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;ts&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> Child </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;./Child.vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> { ref } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">let</span><span style="color: #24292E"> count </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">ref</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">script</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;child&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;子组件&lt;/</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;父给的计数：{{ count }}&lt;/</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">script</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setup</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lang</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;ts&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6A737D">// 声明接收props</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">defineProps</span><span style="color: #24292E">([</span><span style="color: #032F62">&#39;count&#39;</span><span style="color: #24292E">]);</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">script</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><h3 id="子父">子→父</h3><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;father&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;父组件&lt;/</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;计数：{{ count }}&lt;/</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #005CC5">Child</span><span style="color: #24292E"> :</span><span style="color: #6F42C1">addCount</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">addCount</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> /&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">script</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setup</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lang</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;ts&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> Child </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;./Child.vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> { ref } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">let</span><span style="color: #24292E"> count </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">ref</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">addCount</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">    count.value</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">script</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;child&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;子组件&lt;/</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">button</span><span style="color: #24292E"> @</span><span style="color: #6F42C1">click</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">addCount</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">&gt;增加父组件计数&lt;/</span><span style="color: #22863A">button</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">script</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setup</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lang</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;ts&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6A737D">// 声明接收props</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">defineProps</span><span style="color: #24292E">([</span><span style="color: #032F62">&#39;addCount&#39;</span><span style="color: #24292E">]);</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">script</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><h2 id="自定义事件">自定义事件</h2><p>常用于：<strong>子→父</strong></p><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;father&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;父组件&lt;/</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;计数：{{ count }}&lt;/</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #005CC5">Child</span><span style="color: #24292E"> @</span><span style="color: #6F42C1">add-count</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">count</span><span style="color: #D73A49">++</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> /&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">script</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setup</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lang</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;ts&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> Child </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;./Child.vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> { ref } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">let</span><span style="color: #24292E"> count </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">ref</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">script</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;child&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;子组件&lt;/</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">button</span><span style="color: #24292E"> @</span><span style="color: #6F42C1">click</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">addCount</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">&gt;增加父组件计数&lt;/</span><span style="color: #22863A">button</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">script</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setup</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lang</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;ts&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">emits</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">defineEmits</span><span style="color: #24292E">([</span><span style="color: #032F62">&#39;add-count&#39;</span><span style="color: #24292E">]);</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">addCount</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">emits</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;add-count&#39;</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">script</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><h2 id="mitt.js">mitt.js</h2><p>与消息订阅与发布（<code>pubsub</code>）功能类似，可以实现任意组件间通信。</p><h3 id="安装">安装</h3><figure class="shiki shell"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6F42C1">npm</span><span style="color: #24292E"> </span><span style="color: #032F62">i</span><span style="color: #24292E"> </span><span style="color: #032F62">mitt</span></span></code></pre></div></div></figure><h3 id="创建">创建</h3><p>新建文件：<code>src\utils\emitter.ts</code></p><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6A737D">// 引入mitt</span></span><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> mitt </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;mitt&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 调用mitt得到emitter，emitter能：绑定事件、触发事件</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">emitter</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">mitt</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">/*</span></span><span class="line"><span style="color: #6A737D">// 绑定事件</span></span><span class="line"><span style="color: #6A737D">emitter.on(&#39;test&#39;, () =&gt; {</span></span><span class="line"><span style="color: #6A737D">  console.log(&#39;test被调用了&#39;);</span></span><span class="line"><span style="color: #6A737D">});</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 触发事件</span></span><span class="line"><span style="color: #6A737D">setInterval(() =&gt; {</span></span><span class="line"><span style="color: #6A737D">  emitter.emit(&#39;test&#39;);</span></span><span class="line"><span style="color: #6A737D">}, 1000);</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 清理事件</span></span><span class="line"><span style="color: #6A737D">setTimeout(() =&gt; {</span></span><span class="line"><span style="color: #6A737D">  emitter.off(&#39;test&#39;);</span></span><span class="line"><span style="color: #6A737D">  // emitter.all.clear(); // 清空所有事件</span></span><span class="line"><span style="color: #6A737D">}, 3000);</span></span><span class="line"><span style="color: #6A737D">*/</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 暴露emitter</span></span><span class="line"><span style="color: #D73A49">export</span><span style="color: #24292E"> </span><span style="color: #D73A49">default</span><span style="color: #24292E"> emitter;</span></span></code></pre></div></div></figure><h3 id="绑定事件">绑定事件</h3><p>接收数据的组件中：绑定事件、同时在销毁前解绑事件：</p><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> emitter </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;@/utils/emitter&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> { onUnmounted } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 绑定事件</span></span><span class="line"><span style="color: #24292E">emitter.</span><span style="color: #6F42C1">on</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;add-count&#39;</span><span style="color: #24292E">, </span><span style="color: #E36209">value</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  count.value </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> value </span><span style="color: #D73A49">as</span><span style="color: #24292E"> </span><span style="color: #005CC5">number</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;add-count事件被触发&#39;</span><span style="color: #24292E">, value);</span></span><span class="line"><span style="color: #24292E">});</span></span><span class="line"></span><span class="line"><span style="color: #6F42C1">onUnmounted</span><span style="color: #24292E">(() </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  emitter.</span><span style="color: #6F42C1">off</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;add-count&#39;</span><span style="color: #24292E">); </span><span style="color: #6A737D">// 解绑事件</span></span><span class="line"><span style="color: #24292E">});</span></span></code></pre></div></div></figure><h3 id="触发事件">触发事件</h3><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> emitter </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;@/utils/emitter&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #6F42C1">addCount</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> () </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  emitter.</span><span style="color: #6F42C1">emit</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;add-count&#39;</span><span style="color: #24292E">, </span><span style="color: #005CC5">3</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">};</span></span></code></pre></div></div></figure><h2 id="v-model">v-model</h2><p>实现<strong>父与子相互通信</strong></p><h3 id="v-model-本质">v-model 本质</h3><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6A737D">&lt;!-- 使用v-model指令 --&gt;</span></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">input</span><span style="color: #24292E"> </span><span style="color: #6F42C1">type</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;text&quot;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v-model</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">userName</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> /&gt;</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">&lt;!-- v-model的本质是下面这行代码 --&gt;</span></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">input</span><span style="color: #24292E"> </span><span style="color: #6F42C1">type</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;text&quot;</span><span style="color: #24292E"> :</span><span style="color: #6F42C1">value</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">userName</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> @</span><span style="color: #6F42C1">input</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">userName </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (&lt;</span><span style="color: #6F42C1">HTMLInputElement</span><span style="color: #24292E">&gt;$event.target).value</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> /&gt;</span></span></code></pre></div></div></figure><h3 id="组件标签中-v-model">组件标签中 v-model</h3><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6A737D">&lt;!-- 组件标签上使用v-model指令 --&gt;</span></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">MyInput</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v-model</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">username</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> /&gt;</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">&lt;!-- 组件标签上v-model的本质 --&gt;</span></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">MyInput</span><span style="color: #24292E"> :</span><span style="color: #6F42C1">modelValue</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">username</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> @</span><span style="color: #6F42C1">update</span><span style="color: #24292E">:</span><span style="color: #6F42C1">modelValue</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">username </span><span style="color: #D73A49">=</span><span style="color: #24292E"> $event</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> /&gt;</span></span></code></pre></div></div></figure><p><code>MyInput</code> 组件中：</p><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;box&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6A737D">&lt;!--将接收的value值赋给input元素的value属性，目的是：为了呈现数据 --&gt;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6A737D">&lt;!--给input元素绑定原生input事件，触发input事件时，进而触发update:model-value事件--&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">input</span><span style="color: #24292E"> </span><span style="color: #6F42C1">type</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;text&quot;</span><span style="color: #24292E"> :</span><span style="color: #6F42C1">value</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">modelValue</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> @</span><span style="color: #6F42C1">input</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #6F42C1">emit</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;update:model-value&#39;</span><span style="color: #24292E">, (&lt;</span><span style="color: #6F42C1">HTMLInputElement</span><span style="color: #24292E">&gt;$event.target).value)</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> /&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">script</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setup</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lang</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;ts&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6A737D">// 接收props</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">defineProps</span><span style="color: #24292E">([</span><span style="color: #032F62">&#39;modelValue&#39;</span><span style="color: #24292E">]);</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6A737D">// 声明事件</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">emit</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">defineEmits</span><span style="color: #24292E">([</span><span style="color: #032F62">&#39;update:model-value&#39;</span><span style="color: #24292E">]);</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">script</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><h3 id="更换-value">更换 value</h3><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6A737D">&lt;!-- 也可以更换value，例如改成user--&gt;</span></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">MyInput</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v-model</span><span style="color: #24292E">:</span><span style="color: #6F42C1">user</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">username</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> /&gt;</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">&lt;!-- 上面代码的本质如下 --&gt;</span></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">MyInput</span><span style="color: #24292E"> :</span><span style="color: #6F42C1">user</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">username</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> @</span><span style="color: #6F42C1">update</span><span style="color: #24292E">:</span><span style="color: #6F42C1">abc</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">username </span><span style="color: #D73A49">=</span><span style="color: #24292E"> $event</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> /&gt;</span></span></code></pre></div></div></figure><p><code>MyInput</code> 组件中：</p><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;box&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">input</span><span style="color: #24292E"> </span><span style="color: #6F42C1">type</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;text&quot;</span><span style="color: #24292E"> :</span><span style="color: #6F42C1">value</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">user</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> @</span><span style="color: #6F42C1">input</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #6F42C1">emit</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;update:user&#39;</span><span style="color: #24292E">, (&lt;</span><span style="color: #6F42C1">HTMLInputElement</span><span style="color: #24292E">&gt;$event.target).value)</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> /&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">script</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setup</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lang</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;ts&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6A737D">// 接收props</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">defineProps</span><span style="color: #24292E">([</span><span style="color: #032F62">&#39;user&#39;</span><span style="color: #24292E">]);</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6A737D">// 声明事件</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">emit</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">defineEmits</span><span style="color: #24292E">([</span><span style="color: #032F62">&#39;update:user&#39;</span><span style="color: #24292E">]);</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">script</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><h3 id="组件使用多个-v-model">组件使用多个 v-model</h3><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">MyInput</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v-model</span><span style="color: #24292E">:</span><span style="color: #6F42C1">user</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">username</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v-model</span><span style="color: #24292E">:</span><span style="color: #6F42C1">pw</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">password</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> /&gt;</span></span></code></pre></div></div></figure><h2 id="attrs">attrs</h2><p><code>$attrs</code>用于实现<strong>当前组件的父组件</strong>，向<strong>当前组件的子组件</strong>通信（<strong>祖→孙</strong>）。</p><p><code>$attrs</code> 是一个对象，含有没有被该组件声明为<code>props</code> 或 <code>emits</code> 的 attribute</p><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;father&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;父组件&lt;/</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;a：{{ a }}&lt;/</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;b：{{ b }}&lt;/</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #005CC5">Child</span><span style="color: #24292E"> :</span><span style="color: #6F42C1">a</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">a</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> :</span><span style="color: #6F42C1">b</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">b</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v-bind</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">{ </span><span style="color: #6F42C1">x</span><span style="color: #24292E">: </span><span style="color: #005CC5">100</span><span style="color: #24292E">, </span><span style="color: #6F42C1">y</span><span style="color: #24292E">: </span><span style="color: #005CC5">200</span><span style="color: #24292E"> }</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> :</span><span style="color: #6F42C1">updateA</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">updateA</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> /&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">script</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setup</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lang</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;ts&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> Child </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;./Child.vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> { ref } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">a</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">ref</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">b</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">ref</span><span style="color: #24292E">(</span><span style="color: #005CC5">2</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">updateA</span><span style="color: #24292E">(</span><span style="color: #E36209">value</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">number</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">    a.value </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> value;</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">script</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;child&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;子组件&lt;/</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #005CC5">GrandChild</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v-bind</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">$attrs</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> /&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">script</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setup</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lang</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;ts&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> GrandChild </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;./GrandChild.vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">script</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;grand-child&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;孙组件&lt;/</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;a：{{ a }}&lt;/</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;b：{{ b }}&lt;/</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;x：{{ x }}&lt;/</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;y：{{ y }}&lt;/</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">button</span><span style="color: #24292E"> @</span><span style="color: #6F42C1">click</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #6F42C1">updateA</span><span style="color: #24292E">(</span><span style="color: #005CC5">6</span><span style="color: #24292E">)</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">&gt;更新爷爷的a&lt;/</span><span style="color: #22863A">button</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">script</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setup</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lang</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;ts&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">defineProps</span><span style="color: #24292E">([</span><span style="color: #032F62">&#39;a&#39;</span><span style="color: #24292E">, </span><span style="color: #032F62">&#39;b&#39;</span><span style="color: #24292E">, </span><span style="color: #032F62">&#39;x&#39;</span><span style="color: #24292E">, </span><span style="color: #032F62">&#39;y&#39;</span><span style="color: #24292E">, </span><span style="color: #032F62">&#39;updateA&#39;</span><span style="color: #24292E">]);</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">script</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><h2 id="refsparent">$refs、\$parent</h2><ul><li><code>$refs</code> 用于 ：<strong>父→子</strong></li><li><code>$parent</code> 用于：<strong>子→父</strong></li></ul><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td><code>$refs</code></td><td>值为对象，包含所有被<code>ref</code>属性标识的<code>DOM</code>元素或组件实例。</td></tr><tr><td><code>$parent</code></td><td>值为对象，当前组件的父组件实例对象。</td></tr></tbody></table><h3 id="具体使用">具体使用</h3><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;father&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;父组件&lt;/</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;计数：{{ count }}&lt;/</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">button</span><span style="color: #24292E"> @</span><span style="color: #6F42C1">click</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">changeChild1</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">&gt;修改Child1的数据&lt;/</span><span style="color: #22863A">button</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">button</span><span style="color: #24292E"> @</span><span style="color: #6F42C1">click</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">changeChild2</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">&gt;修改Child2的数据&lt;/</span><span style="color: #22863A">button</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">button</span><span style="color: #24292E"> @</span><span style="color: #6F42C1">click</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #6F42C1">changeAllChild</span><span style="color: #24292E">($refs)</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">&gt;让所有孩子的数据改变&lt;/</span><span style="color: #22863A">button</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #005CC5">Child1</span><span style="color: #24292E"> </span><span style="color: #6F42C1">ref</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;c1&quot;</span><span style="color: #24292E"> /&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #005CC5">Child2</span><span style="color: #24292E"> </span><span style="color: #6F42C1">ref</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;c2&quot;</span><span style="color: #24292E"> /&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">script</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setup</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lang</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;ts&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> Child1 </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;./Child1.vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> Child2 </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;./Child2.vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> { ref, reactive } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">c1</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">ref</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">c2</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">ref</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">count</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">ref</span><span style="color: #24292E">(</span><span style="color: #005CC5">4</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">changeChild1</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">    c1.value.count </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">changeChild2</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">    c2.value.count </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">changeAllChild</span><span style="color: #24292E">(</span><span style="color: #E36209">refs</span><span style="color: #D73A49">:</span><span style="color: #24292E"> { [</span><span style="color: #E36209">key</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">string</span><span style="color: #24292E">]</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">any</span><span style="color: #24292E"> }) {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6A737D">// console.log(refs);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">key</span><span style="color: #24292E"> </span><span style="color: #D73A49">in</span><span style="color: #24292E"> refs) {</span></span><span class="line"><span style="color: #24292E">      refs[key].count </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6A737D">// 向外部提供数据</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">defineExpose</span><span style="color: #24292E">({ count });</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">script</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;child1&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;子组件1&lt;/</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;数据：{{ count }}&lt;/</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">button</span><span style="color: #24292E"> @</span><span style="color: #6F42C1">click</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #6F42C1">minusCount</span><span style="color: #24292E">($parent)</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">&gt;修改Father的数据&lt;/</span><span style="color: #22863A">button</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">script</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setup</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lang</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;ts&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> { ref } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">count</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">ref</span><span style="color: #24292E">(</span><span style="color: #005CC5">3</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">minusCount</span><span style="color: #24292E">(</span><span style="color: #E36209">parent</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">any</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">    parent.count </span><span style="color: #D73A49">-=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6A737D">// 把数据交给外部</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">defineExpose</span><span style="color: #24292E">({ count });</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">script</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;child2&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;子组件2&lt;/</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;数据：{{ count }}&lt;/</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">button</span><span style="color: #24292E"> @</span><span style="color: #6F42C1">click</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #6F42C1">minusCount</span><span style="color: #24292E">($parent)</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">&gt;修改Father的数据&lt;/</span><span style="color: #22863A">button</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">script</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setup</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lang</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;ts&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> { ref } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">count</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">ref</span><span style="color: #24292E">(</span><span style="color: #005CC5">3</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">minusCount</span><span style="color: #24292E">(</span><span style="color: #E36209">parent</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">any</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">    parent.count </span><span style="color: #D73A49">-=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6A737D">// 把数据交给外部</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">defineExpose</span><span style="color: #24292E">({ count });</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">script</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><h2 id="provideinject">provide、inject</h2><p>实现对<strong>后代组件</strong>通信</p><ul><li>在祖先组件中通过 <code>provide</code> 配置向后代组件提供数据</li><li>在后代组件中通过 <code>inject</code> 配置来声明接收数据</li></ul><h3 id="父组件提供数据">父组件提供数据</h3><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;father&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;父组件&lt;/</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;计数：{{ count }}&lt;/</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #005CC5">Child</span><span style="color: #24292E"> /&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">script</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setup</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lang</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;ts&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> Child </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;./Child.vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> { ref, reactive, provide } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">count</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">ref</span><span style="color: #24292E">(</span><span style="color: #005CC5">100</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">updateCount</span><span style="color: #24292E">(</span><span style="color: #E36209">value</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">number</span><span style="color: #24292E">) {</span></span><span class="line"><span style="color: #24292E">    count.value </span><span style="color: #D73A49">-=</span><span style="color: #24292E"> value;</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6A737D">// 向后代提供数据</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">provide</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;countContext&#39;</span><span style="color: #24292E">, { count, updateCount });</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">script</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><h3 id="后代组件注入数据">后代组件注入数据</h3><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;grand-child&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;我是孙组件&lt;/</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;计数：{{ count }}&lt;/</span><span style="color: #22863A">h4</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">button</span><span style="color: #24292E"> @</span><span style="color: #6F42C1">click</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #6F42C1">updateCount</span><span style="color: #24292E">(</span><span style="color: #005CC5">6</span><span style="color: #24292E">)</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">&gt;更新count&lt;/</span><span style="color: #22863A">button</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">script</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setup</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lang</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;ts&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> { inject } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> { </span><span style="color: #005CC5">count</span><span style="color: #24292E">, </span><span style="color: #005CC5">updateCount</span><span style="color: #24292E"> } </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">inject</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;countContext&#39;</span><span style="color: #24292E">, { count: </span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #6F42C1">updateCount</span><span style="color: #24292E">: (</span><span style="color: #E36209">param</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #005CC5">number</span><span style="color: #24292E">) </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {} });</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">script</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><h2 id="pinia">pinia</h2><p>参考 <code>pinia</code> 文章</p><h2 id="slot">slot</h2><h3 id="默认插槽">默认插槽</h3><p>父组件：</p><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;father&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;父组件&lt;/</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;content&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">      &lt;</span><span style="color: #005CC5">Category</span><span style="color: #24292E"> </span><span style="color: #6F42C1">title</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;title&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">        &lt;</span><span style="color: #22863A">ul</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">          &lt;</span><span style="color: #22863A">li</span><span style="color: #24292E"> </span><span style="color: #D73A49">v-for</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">item </span><span style="color: #D73A49">in</span><span style="color: #24292E"> data</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> :</span><span style="color: #6F42C1">key</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">item.id</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">&gt;{{ item.name }}&lt;/</span><span style="color: #22863A">li</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">        &lt;/</span><span style="color: #22863A">ul</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">      &lt;/</span><span style="color: #005CC5">Category</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">      &lt;</span><span style="color: #005CC5">Category</span><span style="color: #24292E"> </span><span style="color: #6F42C1">title</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;other&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">        &lt;</span><span style="color: #22863A">a</span><span style="color: #24292E"> </span><span style="color: #6F42C1">href</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;&quot;</span><span style="color: #24292E">&gt;更多&lt;/</span><span style="color: #22863A">a</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">      &lt;/</span><span style="color: #005CC5">Category</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><p>子组件：</p><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;category&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h2</span><span style="color: #24292E">&gt;{{ title }}&lt;/</span><span style="color: #22863A">h2</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">slot</span><span style="color: #24292E">&gt;默认内容&lt;/</span><span style="color: #22863A">slot</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><h3 id="具名插槽">具名插槽</h3><p>父组件：</p><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;father&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;父组件&lt;/</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;content&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">      &lt;</span><span style="color: #005CC5">Category</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">        &lt;</span><span style="color: #22863A">template</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v-slot</span><span style="color: #24292E">:</span><span style="color: #6F42C1">slot2</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">          &lt;</span><span style="color: #22863A">ul</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">            &lt;</span><span style="color: #22863A">li</span><span style="color: #24292E"> </span><span style="color: #D73A49">v-for</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">item </span><span style="color: #D73A49">in</span><span style="color: #24292E"> data</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> :</span><span style="color: #6F42C1">key</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">item.id</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">&gt;{{ item.name }}&lt;/</span><span style="color: #22863A">li</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">          &lt;/</span><span style="color: #22863A">ul</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">        &lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">&lt;!-- # 也可以代替 v-slot: --&gt;</span></span><span class="line"><span style="color: #24292E">        &lt;</span><span style="color: #22863A">template</span><span style="color: #24292E"> #</span><span style="color: #6F42C1">slot1</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">          &lt;</span><span style="color: #22863A">h2</span><span style="color: #24292E">&gt;更多&lt;/</span><span style="color: #22863A">h2</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">        &lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">      &lt;/</span><span style="color: #005CC5">Category</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><p>子组件：</p><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;category&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">slot</span><span style="color: #24292E"> </span><span style="color: #6F42C1">name</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;slot1&quot;</span><span style="color: #24292E">&gt;默认内容1&lt;/</span><span style="color: #22863A">slot</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">slot</span><span style="color: #24292E"> </span><span style="color: #6F42C1">name</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;slot2&quot;</span><span style="color: #24292E">&gt;默认内容2&lt;/</span><span style="color: #22863A">slot</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><h2 id="作用域插槽">作用域插槽</h2><ul><li>数据在组件的自身，但根据数据生成的结构需要组件的使用者来决定。</li></ul><p>父组件：</p><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;father&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;父组件&lt;/</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;content&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">      &lt;</span><span style="color: #005CC5">Game</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">        &lt;</span><span style="color: #22863A">template</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v-slot</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">params</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">          &lt;</span><span style="color: #22863A">ol</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">            &lt;</span><span style="color: #22863A">li</span><span style="color: #24292E"> </span><span style="color: #D73A49">v-for</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">item </span><span style="color: #D73A49">in</span><span style="color: #24292E"> params.data</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> :</span><span style="color: #6F42C1">key</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">item.id</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">              {{ item.name }}</span></span><span class="line"><span style="color: #24292E">            &lt;/</span><span style="color: #22863A">li</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">          &lt;/</span><span style="color: #22863A">ol</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">        &lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">      &lt;/</span><span style="color: #005CC5">Game</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">      &lt;</span><span style="color: #005CC5">Game</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">&lt;!-- 也可以写成 &lt;template #default=&quot;data&quot;&gt;&lt;/template&gt; --&gt;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">&lt;!-- default 换成别的名称就是具名作用域插槽 --&gt;</span></span><span class="line"><span style="color: #24292E">        &lt;</span><span style="color: #22863A">template</span><span style="color: #24292E"> #</span><span style="color: #6F42C1">default</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">{ data }</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">          &lt;</span><span style="color: #22863A">h3</span><span style="color: #24292E"> </span><span style="color: #D73A49">v-for</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">item </span><span style="color: #D73A49">in</span><span style="color: #24292E"> data</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> :</span><span style="color: #6F42C1">key</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">item.id</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">&gt;{{ item.name }}&lt;/</span><span style="color: #22863A">h3</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">        &lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">      &lt;/</span><span style="color: #005CC5">Game</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><p>子组件：</p><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;Category&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">slot</span><span style="color: #24292E"> :</span><span style="color: #6F42C1">data</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">data</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">x</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;1&quot;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">y</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;2&quot;</span><span style="color: #24292E">&gt;&lt;/</span><span style="color: #22863A">slot</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">script</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setup</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lang</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;ts&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> { reactive } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">let</span><span style="color: #24292E"> data </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">reactive</span><span style="color: #24292E">([</span></span><span class="line"><span style="color: #24292E">    { id: </span><span style="color: #032F62">&#39;asgytdfats01&#39;</span><span style="color: #24292E">, name: </span><span style="color: #032F62">&#39;张三&#39;</span><span style="color: #24292E"> },</span></span><span class="line"><span style="color: #24292E">    { id: </span><span style="color: #032F62">&#39;asgytdfats02&#39;</span><span style="color: #24292E">, name: </span><span style="color: #032F62">&#39;李四&#39;</span><span style="color: #24292E"> },</span></span><span class="line"><span style="color: #24292E">    { id: </span><span style="color: #032F62">&#39;asgytdfats03&#39;</span><span style="color: #24292E">, name: </span><span style="color: #032F62">&#39;王五&#39;</span><span style="color: #24292E"> },</span></span><span class="line"><span style="color: #24292E">  ]);</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">script</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
      <category>组件通信</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Pinia</title>
    <link href="/archives/1960634197/"/>
    <url>/archives/1960634197/</url>
    
    <content type="html"><![CDATA[<h2 id="安装">安装</h2><figure class="shiki shell"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6F42C1">npm</span><span style="color: #24292E"> </span><span style="color: #032F62">install</span><span style="color: #24292E"> </span><span style="color: #032F62">pinia</span></span></code></pre></div></div></figure><h2 id="创建-pinia-实例">创建 Pinia 实例</h2><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> { createApp } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> { createPinia } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;pinia&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> App </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;./App.vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #6F42C1">createApp</span><span style="color: #24292E">(App).</span><span style="color: #6F42C1">use</span><span style="color: #24292E">(</span><span style="color: #6F42C1">createPinia</span><span style="color: #24292E">()).</span><span style="color: #6F42C1">mount</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;#app&#39;</span><span style="color: #24292E">);</span></span></code></pre></div></div></figure><h2 id="定义-store">定义 Store</h2><h3 id="选项式">选项式</h3><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> { defineStore } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;pinia&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">export</span><span style="color: #24292E"> </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">useCounterStore</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">defineStore</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;counter&#39;</span><span style="color: #24292E">, {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">state</span><span style="color: #24292E">: () </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> ({ count: </span><span style="color: #005CC5">0</span><span style="color: #24292E">, name: </span><span style="color: #032F62">&#39;xiaowhang&#39;</span><span style="color: #24292E"> }),</span></span><span class="line"><span style="color: #24292E">  getters: {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">doubleCount</span><span style="color: #24292E">: </span><span style="color: #E36209">state</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> state.count </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">  },</span></span><span class="line"><span style="color: #24292E">  actions: {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">increment</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #005CC5">this</span><span style="color: #24292E">.count</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    },</span></span><span class="line"><span style="color: #24292E">  },</span></span><span class="line"><span style="color: #24292E">});</span></span></code></pre></div></div></figure><blockquote><p>可以认为 <code>state</code> 是 store 的数据(<code>data</code>)，<code>getters</code> 是 store 的计算属性(<code>computed</code>)，而 <code>actions</code> 则是方法(<code>methods</code>)。</p></blockquote><h3 id="组合式">组合式</h3><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> { defineStore } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;pinia&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> { ref, computed } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">export</span><span style="color: #24292E"> </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">useCounterStore</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">defineStore</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;counter&#39;</span><span style="color: #24292E">, () </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">count</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">ref</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">name</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;xiaowhang&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">doubleCount</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">computed</span><span style="color: #24292E">(() </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> count.value </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">function</span><span style="color: #24292E"> </span><span style="color: #6F42C1">increment</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">    count.value</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">return</span><span style="color: #24292E"> { count, doubleCount, increment };</span></span><span class="line"><span style="color: #24292E">});</span></span></code></pre></div></div></figure><p>在组合式 Store 中：</p><ul><li><code>ref()</code> 就是 <code>state</code> 属性</li><li><code>computed()</code> 就是 <code>getters</code></li><li><code>function()</code> 就是 <code>actions</code></li></ul><h2 id="state">State</h2><blockquote><p><code>state</code> 是 store 的数据 (<code>data</code>)</p></blockquote><h3 id="定义-state">定义 State</h3><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> { defineStore } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;pinia&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">export</span><span style="color: #24292E"> </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">useCounterStore</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">defineStore</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;counter&#39;</span><span style="color: #24292E">, {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">state</span><span style="color: #24292E">: () </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> ({ count: </span><span style="color: #005CC5">0</span><span style="color: #24292E">, name: </span><span style="color: #032F62">&#39;xiaowhang&#39;</span><span style="color: #24292E"> }),</span></span><span class="line"><span style="color: #24292E">});</span></span></code></pre></div></div></figure><h3 id="在组件中使用">在组件中使用</h3><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">h2</span><span style="color: #24292E">&gt;当前计数为：{{ countStore.count }}&lt;/</span><span style="color: #22863A">h2</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">script</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setup</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lang</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;ts&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6A737D">// 引入对应的useXxxxxStore</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> { useCounterStore } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;@/store/counter&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6A737D">// 调用useXxxxxStore得到对应的store</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">countStore</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">useCounterStore</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">script</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><h3 id="修改-state">修改 State</h3><h4 id="直接修改">直接修改</h4><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">countStore</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">useCounterStore</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">countStore.count</span><span style="color: #D73A49">++</span></span></code></pre></div></div></figure><h4 id="patch-补丁">Patch 补丁</h4><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">store.</span><span style="color: #6F42C1">$patch</span><span style="color: #24292E">({</span></span><span class="line"><span style="color: #24292E">  count: store.count </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">  age: </span><span style="color: #005CC5">120</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">  name: </span><span style="color: #032F62">&#39;DIO&#39;</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">})</span></span></code></pre></div></div></figure><h2 id="action">Action</h2><blockquote><p><code>Action</code> 相当于组件中的 <code>method</code>。它们可以通过<code>defineStore()</code> 中的 <code>actions</code>属性来定义，<strong>并且它们也是定义业务逻辑的完美选择。</strong></p></blockquote><h3 id="定义-action">定义 Action</h3><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> { defineStore } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;pinia&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">export</span><span style="color: #24292E"> </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">useCounterStore</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">defineStore</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;counter&#39;</span><span style="color: #24292E">, {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">state</span><span style="color: #24292E">: () </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> ({ count: </span><span style="color: #005CC5">0</span><span style="color: #24292E"> }),</span></span><span class="line"><span style="color: #24292E">  actions: {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">increment</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #005CC5">this</span><span style="color: #24292E">.count</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    },</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">randomizeCounter</span><span style="color: #24292E">() {</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #005CC5">this</span><span style="color: #24292E">.count </span><span style="color: #D73A49">=</span><span style="color: #24292E"> Math.</span><span style="color: #6F42C1">round</span><span style="color: #24292E">(</span><span style="color: #005CC5">100</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> Math.</span><span style="color: #6F42C1">random</span><span style="color: #24292E">());</span></span><span class="line"><span style="color: #24292E">    },</span></span><span class="line"><span style="color: #24292E">  },</span></span><span class="line"><span style="color: #24292E">});</span></span></code></pre></div></div></figure><h3 id="调用-action">调用 Action</h3><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">h2</span><span style="color: #24292E">&gt;当前计数为：{{ countStore.count }}&lt;/</span><span style="color: #22863A">h2</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">button</span><span style="color: #24292E"> @</span><span style="color: #6F42C1">click</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">countStore.</span><span style="color: #6F42C1">increment</span><span style="color: #24292E">()</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">&gt;计数增加&lt;/</span><span style="color: #22863A">button</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">script</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setup</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lang</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;ts&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> { useCounterStore } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;@/store/counter&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">countStore</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">useCounterStore</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">script</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><h2 id="getter">Getter</h2><blockquote><p><code>Getter</code> 完全等同于 store 的 <code>state</code>的计算值。可以通过 <code>defineStore()</code> 中的 <code>getters</code>属性来定义它们。<strong>推荐</strong>使用箭头函数，并且它将接收<code>state</code> 作为第一个参数</p></blockquote><h3 id="定义-getter">定义 Getter</h3><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> { defineStore } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;pinia&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">export</span><span style="color: #24292E"> </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">useCounterStore</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">defineStore</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;counter&#39;</span><span style="color: #24292E">, {</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">state</span><span style="color: #24292E">: () </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> ({ count: </span><span style="color: #005CC5">1</span><span style="color: #24292E"> }),</span></span><span class="line"><span style="color: #24292E">  getters: {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">doubleCount</span><span style="color: #24292E">: </span><span style="color: #E36209">state</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> state.count </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">  },</span></span><span class="line"><span style="color: #24292E">});</span></span></code></pre></div></div></figure><h3 id="在组件中使用-1">在组件中使用</h3><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">h2</span><span style="color: #24292E">&gt;当前计数为：{{ countStore.count }}&lt;/</span><span style="color: #22863A">h2</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">h2</span><span style="color: #24292E">&gt;翻倍后为： {{ countStore.doubleCount }}&lt;/</span><span style="color: #22863A">h2</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">script</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setup</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lang</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;ts&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> { useCounterStore } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;@/store/counter&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">countStore</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">useCounterStore</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">script</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><h2 id="storetorefs">storeToRefs</h2><p>借助 <code>storeToRefs</code> 将 <code>store</code> 中的数据转为<code>ref</code> 对象，方便在模板中使用（保留响应式）。</p><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">h2</span><span style="color: #24292E">&gt;当前计数为：{{ count }}&lt;/</span><span style="color: #22863A">h2</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">h2</span><span style="color: #24292E">&gt;翻倍后为： {{ doubleCount }}&lt;/</span><span style="color: #22863A">h2</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">script</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setup</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lang</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;ts&quot;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">name</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;Count&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> { useCounterStore } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;@/store/counter&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> { storeToRefs } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;pinia&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">countStore</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">useCounterStore</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> { </span><span style="color: #005CC5">count</span><span style="color: #24292E">, </span><span style="color: #005CC5">doubleCount</span><span style="color: #24292E"> } </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">storeToRefs</span><span style="color: #24292E">(countStore);</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">script</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><h2 id="订阅-state">订阅 state</h2><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">h2</span><span style="color: #24292E">&gt;当前计数为：{{ count }}&lt;/</span><span style="color: #22863A">h2</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">h2</span><span style="color: #24292E">&gt;翻倍后为： {{ doubleCount }}&lt;/</span><span style="color: #22863A">h2</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">script</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setup</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lang</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;ts&quot;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">name</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;Count&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> { useCounterStore } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;@/store/counter&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> { storeToRefs } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;pinia&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">countStore</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">useCounterStore</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> { </span><span style="color: #005CC5">count</span><span style="color: #24292E">, </span><span style="color: #005CC5">doubleCount</span><span style="color: #24292E"> } </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">storeToRefs</span><span style="color: #24292E">(countStore);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">  countStore.</span><span style="color: #6F42C1">$subscribe</span><span style="color: #24292E">((</span><span style="color: #E36209">mutation</span><span style="color: #24292E">, </span><span style="color: #E36209">state</span><span style="color: #24292E">) </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">    console.</span><span style="color: #6F42C1">log</span><span style="color: #24292E">(mutation, state);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6A737D">// 每当状态发生变化时，将整个 state 持久化到本地存储。</span></span><span class="line"><span style="color: #24292E">    localStorage.</span><span style="color: #6F42C1">setItem</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;cart&#39;</span><span style="color: #24292E">, </span><span style="color: #005CC5">JSON</span><span style="color: #24292E">.</span><span style="color: #6F42C1">stringify</span><span style="color: #24292E">(state));</span></span><span class="line"><span style="color: #24292E">  });</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">script</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
      <category>状态管理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue Router</title>
    <link href="/archives/1237244176/"/>
    <url>/archives/1237244176/</url>
    
    <content type="html"><![CDATA[<h2 id="安装">安装</h2><figure class="shiki shell"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6F42C1">npm</span><span style="color: #24292E"> </span><span style="color: #032F62">install</span><span style="color: #24292E"> </span><span style="color: #032F62">vue-router</span></span></code></pre></div></div></figure><h2 id="基本使用">基本使用</h2><h3 id="创建路由实例">创建路由实例</h3><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> { createRouter, createWebHistory } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;vue-router&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> HomeView </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;@/views/HomeView.vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> AboutView </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;@/views/AboutView.vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 配置路由</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">routes</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> [</span></span><span class="line"><span style="color: #24292E">  { path: </span><span style="color: #032F62">&#39;/&#39;</span><span style="color: #24292E">, component: HomeView },</span></span><span class="line"><span style="color: #24292E">  { path: </span><span style="color: #032F62">&#39;/about&#39;</span><span style="color: #24292E">, component: AboutView },</span></span><span class="line"><span style="color: #24292E">];</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 创建路由实例</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">router</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">createRouter</span><span style="color: #24292E">({</span></span><span class="line"><span style="color: #24292E">  history: </span><span style="color: #6F42C1">createWebHistory</span><span style="color: #24292E">(), </span><span style="color: #6A737D">// HTML5模式</span></span><span class="line"><span style="color: #24292E">  routes, </span><span style="color: #6A737D">// 路由配置</span></span><span class="line"><span style="color: #24292E">});</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">export</span><span style="color: #24292E"> </span><span style="color: #D73A49">default</span><span style="color: #24292E"> router;</span></span></code></pre></div></div></figure><h3 id="注册路由插件">注册路由插件</h3><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> { createApp } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> App </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;./App.vue&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> router </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;./router&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #6F42C1">createApp</span><span style="color: #24292E">(App).</span><span style="color: #6F42C1">use</span><span style="color: #24292E">(router).</span><span style="color: #6F42C1">mount</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;#app&#39;</span><span style="color: #24292E">); </span><span style="color: #6A737D">// use() 需要在 mount() 之前调用</span></span></code></pre></div></div></figure><p>插件的功能有：</p><ul><li>全局注册 <code>RouterView</code> 和 <code>RouterLink</code>组件。</li><li>添加全局 <code>$router</code> 和 <code>$route</code> 属性。</li><li>启用 <code>useRouter()</code> 和 <code>useRoute()</code>组合式函数。</li><li>触发路由器解析初始路由。</li></ul><h3 id="使用路由">使用路由</h3><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">p</span><span style="color: #24292E">&gt;&lt;</span><span style="color: #22863A">strong</span><span style="color: #24292E">&gt;当前路由路径为&lt;/</span><span style="color: #22863A">strong</span><span style="color: #24292E">&gt; {{ $route.fullPath }}&lt;/</span><span style="color: #22863A">p</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6A737D">&lt;!-- 导航区 --&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">nav</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">router-link</span><span style="color: #24292E"> </span><span style="color: #6F42C1">to</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;/&quot;</span><span style="color: #24292E">&gt;Go to Home&lt;/</span><span style="color: #22863A">router-link</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">router-link</span><span style="color: #24292E"> </span><span style="color: #6F42C1">to</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;/about&quot;</span><span style="color: #24292E">&gt;Go to About&lt;/</span><span style="color: #22863A">router-link</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;/</span><span style="color: #22863A">nav</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6A737D">&lt;!-- 主体区 --&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">main</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">    &lt;</span><span style="color: #22863A">router-view</span><span style="color: #24292E"> /&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;/</span><span style="color: #22863A">main</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><p>使用 <code>router-link</code> 组件创建链接，使得 Vue Router能够在不重新加载页面的情况下改变 URL，处理 URL的生成、编码和其他功能。</p><p><code>RouterView</code> 组件可以使 Vue Router知道你想要在哪里渲染当前 URL路径对应的<strong>路由组件</strong>。它需要在某处被导入，否则 Vue Router就不会渲染任何东西。</p><h3 id="注意">注意</h3><blockquote><ol type="1"><li>路由组件通常存放在 <code>pages</code> 或 <code>views</code>文件夹，一般组件通常存放在 <code>components</code> 文件夹。</li><li>通过点击导航，视觉效果上“消失”了的路由组件，默认是被<strong>卸载</strong>掉的，需要的时候再去<strong>挂载</strong>。</li></ol></blockquote><h2 id="不同的历史模式">不同的历史模式</h2><p>在创建路由器实例时，<code>history</code>配置允许我们在不同的历史模式中进行选择。</p><h3 id="hash-模式">Hash 模式</h3><ul><li>优点：兼容性更好，因为不需要服务器端处理路径。</li><li>缺点：URL 带有 <code>#</code> 不太美观，且在 SEO优化方面相对较差。如：<code>https://example.com/#/user/id</code></li></ul><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> { createRouter, createWebHashHistory } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;vue-router&#39;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">router</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">createRouter</span><span style="color: #24292E">({</span></span><span class="line"><span style="color: #24292E">  history: </span><span style="color: #6F42C1">createWebHashHistory</span><span style="color: #24292E">(),</span></span><span class="line"><span style="color: #24292E">  routes: [</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6A737D">//...</span></span><span class="line"><span style="color: #24292E">  ],</span></span><span class="line"><span style="color: #24292E">})</span></span></code></pre></div></div></figure><h3 id="html5-模式">HTML5 模式</h3><ul><li>优点：URL 更加美观，不带有 <code>#</code>，更接近传统的网站URL。如：<code>https://example.com/user/id</code></li><li>缺点：后期项目上线，需要服务端配合处理路径问题，否则刷新会有<code>404</code>错误。</li></ul><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> { createRouter, createWebHistory } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;vue-router&#39;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">router</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">createRouter</span><span style="color: #24292E">({</span></span><span class="line"><span style="color: #24292E">  history: </span><span style="color: #6F42C1">createWebHistory</span><span style="color: #24292E">(),</span></span><span class="line"><span style="color: #24292E">  routes: [</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6A737D">//...</span></span><span class="line"><span style="color: #24292E">  ],</span></span><span class="line"><span style="color: #24292E">})</span></span></code></pre></div></div></figure><h2 id="to的两种写法">to的两种写法</h2><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6A737D">&lt;!-- 第一种：to的字符串写法 --&gt;</span></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">router-link</span><span style="color: #24292E"> </span><span style="color: #6F42C1">active-class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;active&quot;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">to</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;/home&quot;</span><span style="color: #24292E">&gt;主页&lt;/</span><span style="color: #22863A">router-link</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">&lt;!-- 第二种：to的对象写法 --&gt;</span></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">router-link</span><span style="color: #24292E"> </span><span style="color: #6F42C1">active-class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;active&quot;</span><span style="color: #24292E"> :</span><span style="color: #6F42C1">to</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">{</span><span style="color: #6F42C1">path</span><span style="color: #24292E">:</span><span style="color: #032F62">&#39;/home&#39;</span><span style="color: #24292E">}</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">&gt;Home&lt;/</span><span style="color: #22863A">router-link</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><h2 id="嵌套路由">嵌套路由</h2><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">export</span><span style="color: #24292E"> </span><span style="color: #D73A49">default</span><span style="color: #24292E"> </span><span style="color: #6F42C1">createRouter</span><span style="color: #24292E">({</span></span><span class="line"><span style="color: #24292E">  history: </span><span style="color: #6F42C1">createWebHistory</span><span style="color: #24292E">(),</span></span><span class="line"><span style="color: #24292E">  routes: [</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">      path: </span><span style="color: #032F62">&#39;/users/:username&#39;</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">      component: User,</span></span><span class="line"><span style="color: #24292E">      children: [</span></span><span class="line"><span style="color: #24292E">        { path: </span><span style="color: #032F62">&#39;&#39;</span><span style="color: #24292E">, component: UserHome }, </span><span style="color: #6A737D">// User 组件的默认子路由</span></span><span class="line"><span style="color: #24292E">        { path: </span><span style="color: #032F62">&#39;profile&#39;</span><span style="color: #24292E">, component: UserProfile },</span></span><span class="line"><span style="color: #24292E">        { path: </span><span style="color: #032F62">&#39;posts&#39;</span><span style="color: #24292E">, component: UserPosts },</span></span><span class="line"><span style="color: #24292E">      ],</span></span><span class="line"><span style="color: #24292E">    },</span></span><span class="line"><span style="color: #24292E">  ],</span></span><span class="line"><span style="color: #24292E">});</span></span></code></pre></div></div></figure><blockquote><p><strong>注意，以 <code>/</code>开头的嵌套路径将被视为根路径。嵌套的子路由不能 <code>/</code>开头</strong></p></blockquote><h2 id="命名路由">命名路由</h2><p>当创建一个路由时，可以选择给路由一个 <code>name</code>：</p><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">routes</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> [</span></span><span class="line"><span style="color: #24292E">  {</span></span><span class="line"><span style="color: #24292E">    path: </span><span style="color: #032F62">&#39;/user/:username&#39;</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">    name: </span><span style="color: #032F62">&#39;profile&#39;</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">    component: User</span></span><span class="line"><span style="color: #24292E">  }</span></span><span class="line"><span style="color: #24292E">]</span></span></code></pre></div></div></figure><p>然后可以使用 <code>name</code> 而不是 <code>path</code> 来传递<code>to</code> 属性给 <code>&lt;router-link&gt;</code>：</p><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">router-link</span><span style="color: #24292E"> :</span><span style="color: #6F42C1">to</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">{ </span><span style="color: #6F42C1">name</span><span style="color: #24292E">: </span><span style="color: #032F62">&#39;profile&#39;</span><span style="color: #24292E">, </span><span style="color: #6F42C1">params</span><span style="color: #24292E">: { </span><span style="color: #6F42C1">username</span><span style="color: #24292E">: </span><span style="color: #032F62">&#39;xiaowhang&#39;</span><span style="color: #24292E"> } }</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  User profile</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">router-link</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><h3 id="优点">优点</h3><ul><li>没有硬编码的 URL。</li><li><code>params</code> 的自动编码/解码。</li><li>防止你在 URL 中出现打字错误。</li><li>绕过路径排序，例如展示一个匹配相同路径但排序较低的路由。</li></ul><h3 id="注意-1">注意</h3><blockquote><p>所有路由的命名<strong>都必须是唯一的</strong>。如果为多条路由添加相同的命名，路由器只会保留最后那一条。</p></blockquote><h2 id="路由组件传参">路由组件传参</h2><h3 id="query参数">query参数</h3><p>传递参数：</p><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6A737D">&lt;!-- 跳转并携带query参数（to的字符串写法） --&gt;</span></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">router-link</span><span style="color: #24292E"> </span><span style="color: #6F42C1">to</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;/users?id=xiaowhang&amp;b=2&quot;</span><span style="color: #24292E">&gt;跳转&lt;/</span><span style="color: #22863A">router-link</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">&lt;!-- 跳转并携带query参数（to的对象写法） --&gt;</span></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">router-link</span></span><span class="line"><span style="color: #24292E">  :</span><span style="color: #6F42C1">to</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6A737D">// name:&#39;user&#39;, // 用name也可以跳转</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">path</span><span style="color: #24292E">: </span><span style="color: #032F62">&#39;/users&#39;</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">query</span><span style="color: #24292E">: { </span><span style="color: #6F42C1">id</span><span style="color: #24292E">: </span><span style="color: #032F62">&#39;xiaowhang&#39;</span><span style="color: #24292E">, </span><span style="color: #6F42C1">b</span><span style="color: #24292E">: </span><span style="color: #005CC5">2</span><span style="color: #24292E"> },</span></span><span class="line"><span style="color: #24292E">  }</span><span style="color: #032F62">&quot;</span></span><span class="line"><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  跳转</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">router-link</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><p>接收参数：</p><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;{{ $route.query }}&lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">&lt;!-- 或者 --&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;{{ route.query }}&lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">script</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setup</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> { useRoute } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;vue-router&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">route</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">useRoute</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">script</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><h3 id="params参数">params参数</h3><p>传递参数：</p><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6A737D">&lt;!--</span></span><span class="line"><span style="color: #6A737D">    routes: [{</span></span><span class="line"><span style="color: #6A737D">      path: &#39;/users/:username/:b&#39;,</span></span><span class="line"><span style="color: #6A737D">      component: User,</span></span><span class="line"><span style="color: #6A737D">      },</span></span><span class="line"><span style="color: #6A737D">    ],</span></span><span class="line"><span style="color: #6A737D">--&gt;</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">&lt;!-- 跳转并携带params参数（to的字符串写法） --&gt;</span></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">router-link</span><span style="color: #24292E"> </span><span style="color: #6F42C1">to</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;/users/xiaowhang/2&quot;</span><span style="color: #24292E">&gt;跳转&lt;/</span><span style="color: #22863A">router-link</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">&lt;!-- 跳转并携带params参数（to的对象写法） --&gt;</span></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">router-link</span></span><span class="line"><span style="color: #24292E">  :</span><span style="color: #6F42C1">to</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">name</span><span style="color: #24292E">:</span><span style="color: #032F62">&#39;user&#39;</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">params</span><span style="color: #24292E">: { </span><span style="color: #6F42C1">id</span><span style="color: #24292E">: </span><span style="color: #032F62">&#39;xiaowhang&#39;</span><span style="color: #24292E">, </span><span style="color: #6F42C1">b</span><span style="color: #24292E">: </span><span style="color: #005CC5">2</span><span style="color: #24292E"> },</span></span><span class="line"><span style="color: #24292E">  }</span><span style="color: #032F62">&quot;</span></span><span class="line"><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  跳转</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">router-link</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><p>接收参数：</p><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;{{ $route.params }}&lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">&lt;!-- 或者 --&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;{{ route.params }}&lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">script</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setup</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">import</span><span style="color: #24292E"> { useRoute } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;vue-router&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">route</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">useRoute</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">script</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><h4 id="注意-2">注意</h4><blockquote><ol type="1"><li>传递 <code>params</code>参数时，若使用<code>to</code>的对象写法，必须使用<code>name</code>配置项，不能用<code>path</code>。</li><li>传递 <code>params</code> 参数时，需要提前在规则中占位。</li></ol></blockquote><h3 id="将-props-传递给路由组件">将 props 传递给路由组件</h3><p>作用：让路由组件更方便的收到参数（可以将路由参数作为<code>props</code>传给组件）</p><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">name</span><span style="color: #24292E">: </span><span style="color: #032F62">&#39;user&#39;</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">path</span><span style="color: #24292E">: </span><span style="color: #032F62">&#39;/users/:id/:b&#39;</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">component</span><span style="color: #24292E">: User,</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6A737D">// 布尔模式，作用：把收到了每一组params参数，作为props传给Detail组件</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">props</span><span style="color: #24292E">: </span><span style="color: #005CC5">true</span><span style="color: #24292E">,</span></span><span class="line"></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6A737D">// 对象模式，作用：把对象中的每一组key-value作为props传给Detail组件</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6A737D">// props: { id: xiaowhang, b: 2, c: 3 },</span></span><span class="line"></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6A737D">// 函数模式，作用：把返回的对象中每一组key-value作为props传给Detail组件</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6A737D">// props: route =&gt; route.query,</span></span><span class="line"><span style="color: #24292E">},</span></span></code></pre></div></div></figure><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;{{ id }}&lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;{{ b }}&lt;/</span><span style="color: #22863A">div</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">script</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setup</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  </span><span style="color: #6F42C1">defineProps</span><span style="color: #24292E">([</span><span style="color: #032F62">&#39;id&#39;</span><span style="color: #24292E">, </span><span style="color: #032F62">&#39;b&#39;</span><span style="color: #24292E">]);</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">script</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><h3 id="replace属性">replace属性</h3><ol type="1"><li><p>作用：控制路由跳转时操作浏览器历史记录的模式。</p></li><li><p>浏览器的历史记录有两种写入方式：分别为 <code>push</code> 和<code>replace</code>：</p><ul><li><code>push</code> 是追加历史记录（默认值）。</li><li><code>replace</code> 是替换当前记录。</li></ul></li><li><p>开启<code>replace</code>模式：</p><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">router-link</span><span style="color: #24292E"> :</span><span style="color: #6F42C1">to</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;</span><span style="color: #D73A49">...</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">replace</span><span style="color: #24292E">&gt;News&lt;/</span><span style="color: #22863A">router-link</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure></li></ol><h2 id="编程式导航">编程式导航</h2><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> { useRoute, useRouter } </span><span style="color: #D73A49">from</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;vue-router&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">route</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">useRoute</span><span style="color: #24292E">(); </span><span style="color: #6A737D">// 获取当前路由信息</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">router</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">useRouter</span><span style="color: #24292E">(); </span><span style="color: #6A737D">// 获取路由实例</span></span></code></pre></div></div></figure><h3 id="导航到不同的位置">导航到不同的位置</h3><table><thead><tr><th>声明式</th><th>编程式</th></tr></thead><tbody><tr><td><code>&lt;router-link :to="..."&gt;...&lt;/router-link&gt;</code></td><td><code>router.push(...)</code></td></tr></tbody></table><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6A737D">// 字符串路径</span></span><span class="line"><span style="color: #24292E">router.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;/users/xiaowhang&#39;</span><span style="color: #24292E">)</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 带有路径的对象</span></span><span class="line"><span style="color: #24292E">router.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({ path: </span><span style="color: #032F62">&#39;/users/xiaowhang&#39;</span><span style="color: #24292E"> })</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 命名的路由，并加上参数，让路由建立 url</span></span><span class="line"><span style="color: #24292E">router.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({ name: </span><span style="color: #032F62">&#39;user&#39;</span><span style="color: #24292E">, params: { username: </span><span style="color: #032F62">&#39;xiaowhang&#39;</span><span style="color: #24292E"> } })</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 带查询参数，结果是 /register?plan=private</span></span><span class="line"><span style="color: #24292E">router.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({ path: </span><span style="color: #032F62">&#39;/register&#39;</span><span style="color: #24292E">, query: { plan: </span><span style="color: #032F62">&#39;private&#39;</span><span style="color: #24292E"> } })</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 带 hash，结果是 /about#team</span></span><span class="line"><span style="color: #24292E">router.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({ path: </span><span style="color: #032F62">&#39;/about&#39;</span><span style="color: #24292E">, hash: </span><span style="color: #032F62">&#39;#team&#39;</span><span style="color: #24292E"> })</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">username</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;xiaowhang&#39;</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 我们可以手动建立 url，但我们必须自己处理编码</span></span><span class="line"><span style="color: #24292E">router.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(</span><span style="color: #032F62">`/user/${</span><span style="color: #24292E">username</span><span style="color: #032F62">}`</span><span style="color: #24292E">) </span><span style="color: #6A737D">// -&gt; /user/xiaowhang</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 同样</span></span><span class="line"><span style="color: #24292E">router.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({ path: </span><span style="color: #032F62">`/user/${</span><span style="color: #24292E">username</span><span style="color: #032F62">}`</span><span style="color: #24292E"> }) </span><span style="color: #6A737D">// -&gt; /user/xiaowhang</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 如果可能的话，使用 `name` 和 `params` 从自动 URL 编码中获益</span></span><span class="line"><span style="color: #24292E">router.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({ name: </span><span style="color: #032F62">&#39;user&#39;</span><span style="color: #24292E">, params: { username } }) </span><span style="color: #6A737D">// -&gt; /user/xiaowhang</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// `params` 不能与 `path` 一起使用</span></span><span class="line"><span style="color: #24292E">router.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({ path: </span><span style="color: #032F62">&#39;/user&#39;</span><span style="color: #24292E">, params: { username } }) </span><span style="color: #6A737D">// -&gt; /user</span></span></code></pre></div></div></figure><h3 id="替换当前位置">替换当前位置</h3><table><thead><tr><th>声明式</th><th>编程式</th></tr></thead><tbody><tr><td><code>&lt;router-link :to="..." replace&gt;...&lt;/router-link&gt;</code></td><td><code>router.replace(...)</code></td></tr></tbody></table><p>也可以直接在传递给 <code>router.push</code> 的 <code>to</code>参数中增加一个属性 <code>replace: true</code> ：</p><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">router.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({ path: </span><span style="color: #032F62">&#39;/home&#39;</span><span style="color: #24292E">, replace: </span><span style="color: #005CC5">true</span><span style="color: #24292E"> })</span></span><span class="line"><span style="color: #6A737D">// 相当于</span></span><span class="line"><span style="color: #24292E">router.</span><span style="color: #6F42C1">replace</span><span style="color: #24292E">({ path: </span><span style="color: #032F62">&#39;/home&#39;</span><span style="color: #24292E"> })</span></span></code></pre></div></div></figure><h3 id="横跨历史">横跨历史</h3><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #6A737D">// 向前移动一条记录，与 router.forward() 相同</span></span><span class="line"><span style="color: #24292E">router.</span><span style="color: #6F42C1">go</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 返回一条记录，与 router.back() 相同</span></span><span class="line"><span style="color: #24292E">router.</span><span style="color: #6F42C1">go</span><span style="color: #24292E">(</span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 前进 3 条记录</span></span><span class="line"><span style="color: #24292E">router.</span><span style="color: #6F42C1">go</span><span style="color: #24292E">(</span><span style="color: #005CC5">3</span><span style="color: #24292E">)</span></span><span class="line"></span><span class="line"><span style="color: #6A737D">// 如果没有那么多记录，静默失败</span></span><span class="line"><span style="color: #24292E">router.</span><span style="color: #6F42C1">go</span><span style="color: #24292E">(</span><span style="color: #D73A49">-</span><span style="color: #005CC5">100</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">router.</span><span style="color: #6F42C1">go</span><span style="color: #24292E">(</span><span style="color: #005CC5">100</span><span style="color: #24292E">)</span></span></code></pre></div></div></figure><h2 id="重定向">重定向</h2><p>作用：将特定的路径，重新定向到已有路由。</p><p>从 <code>/</code> 重定向到 <code>/home</code> ：</p><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">routes</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> [{ path: </span><span style="color: #032F62">&#39;/&#39;</span><span style="color: #24292E">, redirect: </span><span style="color: #032F62">&#39;/home&#39;</span><span style="color: #24292E"> }]</span></span></code></pre></div></div></figure><p>重定向的目标也可以是一个命名的路由：</p><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">routes</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> [{ path: </span><span style="color: #032F62">&#39;/&#39;</span><span style="color: #24292E">, redirect: { name: </span><span style="color: #032F62">&#39;homepage&#39;</span><span style="color: #24292E"> } }]</span></span></code></pre></div></div></figure><p>也可以是一个方法，动态返回重定向目标：</p><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">routes</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> [</span></span><span class="line"><span style="color: #24292E">  {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6A737D">// /search/screens -&gt; /search?q=screens</span></span><span class="line"><span style="color: #24292E">    path: </span><span style="color: #032F62">&#39;/search/:searchText&#39;</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">redirect</span><span style="color: #24292E">: </span><span style="color: #E36209">to</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #6A737D">// 方法接收目标路由作为参数</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #6A737D">// return 重定向的字符串路径/路径对象</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #D73A49">return</span><span style="color: #24292E"> { path: </span><span style="color: #032F62">&#39;/search&#39;</span><span style="color: #24292E">, query: { q: to.params.searchText } }</span></span><span class="line"><span style="color: #24292E">    },</span></span><span class="line"><span style="color: #24292E">  },</span></span><span class="line"><span style="color: #24292E">  {</span></span><span class="line"><span style="color: #24292E">    path: </span><span style="color: #032F62">&#39;/search&#39;</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6A737D">// ...</span></span><span class="line"><span style="color: #24292E">  },</span></span><span class="line"><span style="color: #24292E">]</span></span></code></pre></div></div></figure><h3 id="相对重定向">相对重定向</h3><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #005CC5">routes</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> [</span></span><span class="line"><span style="color: #24292E">  {</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6A737D">// 将总是把/users/123/posts重定向到/users/123/profile。</span></span><span class="line"><span style="color: #24292E">    path: </span><span style="color: #032F62">&#39;/users/:id/posts&#39;</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">redirect</span><span style="color: #24292E">: </span><span style="color: #E36209">to</span><span style="color: #24292E"> </span><span style="color: #D73A49">=&gt;</span><span style="color: #24292E"> {</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #6A737D">// 该函数接收目标路由作为参数</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #6A737D">// 相对位置不以`/`开头</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #6A737D">// 或 { path: &#39;profile&#39;}</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;profile&#39;</span></span><span class="line"><span style="color: #24292E">    },</span></span><span class="line"><span style="color: #24292E">  },</span></span><span class="line"><span style="color: #24292E">]</span></span></code></pre></div></div></figure><h2 id="命名视图">命名视图</h2><p>有时候想同时 (同级)展示多个视图，而不是嵌套展示，例如创建一个布局，有 <code>sidebar</code>(侧导航) 和 <code>main</code> (主内容) 两个视图。</p><figure class="shiki vue"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">&lt;</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">router-view</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;view sidebar&quot;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">name</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;Sidebar&quot;</span><span style="color: #24292E"> /&gt;</span></span><span class="line"><span style="color: #24292E">  &lt;</span><span style="color: #22863A">router-view</span><span style="color: #24292E"> </span><span style="color: #6F42C1">class</span><span style="color: #24292E">=</span><span style="color: #032F62">&quot;view main-content&quot;</span><span style="color: #24292E"> /&gt;</span></span><span class="line"><span style="color: #24292E">&lt;/</span><span style="color: #22863A">template</span><span style="color: #24292E">&gt;</span></span></code></pre></div></div></figure><p>一个视图使用一个组件渲染，因此对于同个路由，多个视图就需要多个组件。确保正确使用<code>components</code> 配置 (带上 <strong>s</strong>)：</p><figure class="shiki typescript"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">export</span><span style="color: #24292E"> </span><span style="color: #D73A49">default</span><span style="color: #24292E"> </span><span style="color: #6F42C1">createRouter</span><span style="color: #24292E">({</span></span><span class="line"><span style="color: #24292E">  history: </span><span style="color: #6F42C1">createWebHistory</span><span style="color: #24292E">(),</span></span><span class="line"><span style="color: #24292E">  routes: [</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">      path: </span><span style="color: #032F62">&#39;/&#39;</span><span style="color: #24292E">,</span></span><span class="line"><span style="color: #24292E">      components: {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">// 它们与 `&lt;router-view&gt;` 上的 `name` 属性匹配</span></span><span class="line"><span style="color: #24292E">        default: Home,</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">// Sidebar: Sidebar 的缩写</span></span><span class="line"><span style="color: #24292E">        Sidebar,</span></span><span class="line"><span style="color: #24292E">      },</span></span><span class="line"><span style="color: #24292E">    },</span></span><span class="line"><span style="color: #24292E">  ],</span></span><span class="line"><span style="color: #24292E">});</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
      <category>路由</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SZTU Monthly 2024 Mar.</title>
    <link href="/archives/950106332/"/>
    <url>/archives/950106332/</url>
    
    <content type="html"><![CDATA[<blockquote><p><ahref="http://acm.sztu.edu.cn/csgoj/contest/problemset?cid=1052">比赛链接</a></p></blockquote><h2 id="写在前面">写在前面</h2><h3 id="题目难度">题目难度：</h3><p>这次比赛的题目都为蓝桥杯往年省赛的原题，难度中等以及中等偏下，不做具体细分。</p><p>题目难度都不大，但是由于蓝桥杯的赛制，应该尽量保证一次 <spanclass="math inline">\(AC\)</span></p><h2 id="a-移动距离">A 移动距离</h2><p>求出两点的坐标再求距离即可</p><p>需要注意的是在奇数行需要翻转</p><h3 id="ac-code">AC Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> w, m, n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> w </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    m</span><span style="color: #D73A49">--</span><span style="color: #24292E">, n</span><span style="color: #D73A49">--</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x </span><span style="color: #D73A49">=</span><span style="color: #24292E"> m </span><span style="color: #D73A49">%</span><span style="color: #24292E"> w, xx </span><span style="color: #D73A49">=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">%</span><span style="color: #24292E"> w, y </span><span style="color: #D73A49">=</span><span style="color: #24292E"> m </span><span style="color: #D73A49">/</span><span style="color: #24292E"> w, yy </span><span style="color: #D73A49">=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">/</span><span style="color: #24292E"> w;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (y </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        x </span><span style="color: #D73A49">=</span><span style="color: #24292E"> w </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (yy </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        xx </span><span style="color: #D73A49">=</span><span style="color: #24292E"> w </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #24292E"> xx;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(x </span><span style="color: #D73A49">-</span><span style="color: #24292E"> xx) </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(y </span><span style="color: #D73A49">-</span><span style="color: #24292E"> yy);</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="b-等差数列">B 等差数列</h2><p>可以将数列排序成单调不减数列有：</p><p>任意两项之差都为公差 <span class="math inline">\(d\)</span>的倍数，故公差 <span class="math inline">\(d\)</span>​为所有相邻两项差的最大公约数</p><h3 id="ac-code-1">AC Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">gcd</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">a</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">b</span><span style="color: #24292E">) { </span><span style="color: #D73A49">return</span><span style="color: #24292E"> b </span><span style="color: #D73A49">?</span><span style="color: #24292E"> </span><span style="color: #6F42C1">gcd</span><span style="color: #24292E">(b, a </span><span style="color: #D73A49">%</span><span style="color: #24292E"> b) </span><span style="color: #D73A49">:</span><span style="color: #24292E"> a; }</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v</span><span style="color: #24292E">(n);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(v.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), v.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">());</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> d </span><span style="color: #D73A49">=</span><span style="color: #24292E"> v[</span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> v[</span><span style="color: #005CC5">0</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        d </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">gcd</span><span style="color: #24292E">(d, v[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> v[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">]);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (d </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> (v.</span><span style="color: #6F42C1">back</span><span style="color: #24292E">() </span><span style="color: #D73A49">-</span><span style="color: #24292E"> v.</span><span style="color: #6F42C1">front</span><span style="color: #24292E">()) </span><span style="color: #D73A49">/</span><span style="color: #24292E"> d </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="c-解码">C 解码</h2><p>检查每个字母后面有没有数字，有就按题目要求输出</p><h3 id="ac-code-2">AC Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    string s;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> s;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">(); i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #6F42C1">isdigit</span><span style="color: #24292E">(s[i]))</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> num </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">() </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">isdigit</span><span style="color: #24292E">(s[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">]))</span></span><span class="line"><span style="color: #24292E">                num </span><span style="color: #D73A49">=</span><span style="color: #24292E"> s[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;0&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> k </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; k </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> num; k</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> s[i];</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (num </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> s[i];</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="d-饮料换购">D 饮料换购</h2><p>经典问题，按题目模拟即可</p><h3 id="ac-code-3">AC Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">3</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">3</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">3</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        n </span><span style="color: #D73A49">=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">3</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> n </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">3</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">+</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="e-全球变暖">E 全球变暖</h2><p><span class="math inline">\(BFS\)</span>每块岛屿，判断岛上是否存在一格满足上下左右都是<code>#</code>，存在则岛屿不会淹没。</p><h3 id="ac-code-4">AC Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">3</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> dx[] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">};</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> dy[] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">};</span></span><span class="line"><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">string</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> mp;</span></span><span class="line"><span style="color: #D73A49">bool</span><span style="color: #24292E"> vis[N][N];</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">bool</span><span style="color: #24292E"> </span><span style="color: #6F42C1">bfs</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">y</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">bool</span><span style="color: #24292E"> flag </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    queue</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">pair</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"><span style="color: #24292E">    vis[x][y] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({x, y});</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">q.</span><span style="color: #6F42C1">empty</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">auto</span><span style="color: #24292E"> [x, y] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> q.</span><span style="color: #6F42C1">front</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">        q.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">4</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> nx </span><span style="color: #D73A49">=</span><span style="color: #24292E"> x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> dx[i];</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ny </span><span style="color: #D73A49">=</span><span style="color: #24292E"> y </span><span style="color: #D73A49">+</span><span style="color: #24292E"> dy[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (nx </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> nx </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">||</span><span style="color: #24292E"> ny </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> ny </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">||</span><span style="color: #24292E"> mp[nx][ny] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;.&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mp[nx][ny] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;#&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                cnt</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (vis[nx][ny])</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">            vis[nx][ny] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({nx, ny});</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (cnt </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">4</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            flag </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> flag;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    mp.</span><span style="color: #6F42C1">resize</span><span style="color: #24292E">(n);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> mp[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> id </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">, ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mp[i][j] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;#&#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> </span><span style="color: #D73A49">!</span><span style="color: #24292E">vis[i][j])</span></span><span class="line"><span style="color: #24292E">                ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">bfs</span><span style="color: #24292E">(i, j);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="f-时间显示">F 时间显示</h2><p>直接取余到时分秒即可</p><h3 id="ac-code-5">AC Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    ll n;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">scanf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%lld</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">n);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    n </span><span style="color: #D73A49">%=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">LL</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">24</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">60</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">60</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">1000</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> h </span><span style="color: #D73A49">=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">/</span><span style="color: #24292E"> (</span><span style="color: #005CC5">60</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">60</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">1000</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    n </span><span style="color: #D73A49">%=</span><span style="color: #24292E"> </span><span style="color: #005CC5">60</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">60</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">1000</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> m </span><span style="color: #D73A49">=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">/</span><span style="color: #24292E"> (</span><span style="color: #005CC5">60</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">1000</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    n </span><span style="color: #D73A49">%=</span><span style="color: #24292E"> </span><span style="color: #005CC5">60</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">1000</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> s </span><span style="color: #D73A49">=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">1000</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">printf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%02d</span><span style="color: #032F62">:</span><span style="color: #005CC5">%02d</span><span style="color: #032F62">:</span><span style="color: #005CC5">%02d</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, h, m, s);</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #6A737D">    // cin.tie(0)-&gt;ios::sync_with_stdio(false);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="g-修剪灌木">G 修剪灌木</h2><p>走到一端再走回来就是爱丽丝离开当前灌木最长的时间</p><h3 id="ac-code-6">AC Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> i, i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">) </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="h-乘法表">H 乘法表</h2><p>处理进制，用数组存表即可</p><h3 id="ac-code-7">AC Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> p;</span></span><span class="line"><span style="color: #D73A49">char</span><span style="color: #24292E"> mp[</span><span style="color: #005CC5">36</span><span style="color: #24292E">];</span></span><span class="line"></span><span class="line"><span style="color: #6F42C1">string</span><span style="color: #24292E"> </span><span style="color: #6F42C1">to_p</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    string res;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (x)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        res </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> mp[x </span><span style="color: #D73A49">%</span><span style="color: #24292E"> p];</span></span><span class="line"><span style="color: #24292E">        x </span><span style="color: #D73A49">/=</span><span style="color: #24292E"> p;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">reverse</span><span style="color: #24292E">(res.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), res.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">());</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> res;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> p;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        mp[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;0&#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> i;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">36</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        mp[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;A&#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> p; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> i; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">to_p</span><span style="color: #24292E">(i) </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;*&#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">to_p</span><span style="color: #24292E">(j) </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;=&#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">to_p</span><span style="color: #24292E">(i </span><span style="color: #D73A49">*</span><span style="color: #24292E"> j) </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>题解</category>
      
      <category>SZTU_ACM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>SZTU_ACM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023年中国高校计算机大赛-团队程序设计天梯赛（GPLT）上海理工大学校内选拔赛</title>
    <link href="/archives/3300329301/"/>
    <url>/archives/3300329301/</url>
    
    <content type="html"><![CDATA[<h2 id="a.-a-xor-b-problem">A. A Xor B Problem</h2><h3 id="思路">思路</h3><p>记录每个数出现的次数，结果为每个数出现的次数的平方和</p><h3 id="code">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">cnt</span><span style="color: #24292E">(N);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">        cnt[x]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    ll ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> N; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">LL</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> cnt[i] </span><span style="color: #D73A49">*</span><span style="color: #24292E"> cnt[i];</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="b.-吃苹果">B. 吃苹果</h2><h3 id="思路-1">思路</h3><p>将每天按晚上吃和白天吃的愉悦值之差进行排序，选前 <spanclass="math inline">\(k\)</span> 个晚上吃，其他的白天吃</p><h3 id="code-1">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, k;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> k;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">pair</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i].first </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i].second;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(a.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), a.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">(), [](</span><span style="color: #6F42C1">pair</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt; </span><span style="color: #D73A49">&amp;</span><span style="color: #E36209">x</span><span style="color: #24292E">, </span><span style="color: #6F42C1">pair</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt; </span><span style="color: #D73A49">&amp;</span><span style="color: #E36209">y</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">         { </span><span style="color: #D73A49">return</span><span style="color: #24292E"> x.second </span><span style="color: #D73A49">-</span><span style="color: #24292E"> x.first </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> y.second </span><span style="color: #D73A49">-</span><span style="color: #24292E"> y.first; });</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    ll ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> k)</span></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> a[i].second;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> a[i].first;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="c.-n皇后问题">C. n皇后问题</h2><h3 id="思路-2">思路</h3><p>每个皇后的攻击范围为</p><ul><li>行号相同</li><li>列号相同</li><li>行号和列号的差相同</li><li>行号和列号的和相同</li></ul><p>查询之前是否出现过即可</p><p>使用数组记录需考虑下标为负的情况</p><h3 id="code-2">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, t;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    unordered_set</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> row, col, diag1, diag2;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> t; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x, y;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> y;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (row.</span><span style="color: #6F42C1">count</span><span style="color: #24292E">(x) </span><span style="color: #D73A49">||</span><span style="color: #24292E"> col.</span><span style="color: #6F42C1">count</span><span style="color: #24292E">(y) </span><span style="color: #D73A49">||</span><span style="color: #24292E"> diag1.</span><span style="color: #6F42C1">count</span><span style="color: #24292E">(x </span><span style="color: #D73A49">-</span><span style="color: #24292E"> y) </span><span style="color: #D73A49">||</span><span style="color: #24292E"> diag2.</span><span style="color: #6F42C1">count</span><span style="color: #24292E">(x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> y))</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;No&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        row.</span><span style="color: #6F42C1">insert</span><span style="color: #24292E">(x);</span></span><span class="line"><span style="color: #24292E">        col.</span><span style="color: #6F42C1">insert</span><span style="color: #24292E">(y);</span></span><span class="line"><span style="color: #24292E">        diag1.</span><span style="color: #6F42C1">insert</span><span style="color: #24292E">(x </span><span style="color: #D73A49">-</span><span style="color: #24292E"> y);</span></span><span class="line"><span style="color: #24292E">        diag2.</span><span style="color: #6F42C1">insert</span><span style="color: #24292E">(x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> y);</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;Yes&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="d.-分苹果">D. 分苹果</h2><h3 id="思路-3">思路</h3><p>高中线性规划问题，已知苹果不会在线的上，所以将苹果的坐标 <spanclass="math inline">\((x,y)\)</span> 代入直线方程 <spanclass="math inline">\(ax+by+c = 0\)</span> 中</p><p><span class="math inline">\(ax+by+c&gt;0\)</span> 和 <spanclass="math inline">\(ax+by+c&lt;0\)</span> 表示苹果在线的两侧</p><p>通过 <code>01串</code> 表示苹果在哪一块区域</p><h3 id="code-3">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">tuple</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v</span><span style="color: #24292E">(</span><span style="color: #005CC5">2</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> a, b, c;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> b </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> c;</span></span><span class="line"><span style="color: #24292E">        v[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {a, b, c};</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">ans</span><span style="color: #24292E">(</span><span style="color: #005CC5">4</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        ll x, y;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> y;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> flag </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">auto</span><span style="color: #24292E"> [a, b, c] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> v[j];</span></span><span class="line"><span style="color: #24292E">            ll d </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a </span><span style="color: #D73A49">*</span><span style="color: #24292E"> x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> b </span><span style="color: #D73A49">*</span><span style="color: #24292E"> y </span><span style="color: #D73A49">+</span><span style="color: #24292E"> c;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (d </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                flag </span><span style="color: #D73A49">|=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> j;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        ans[flag]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(ans.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), ans.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">());</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">4</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans[i] </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="e.-完型填空">E. 完型填空</h2><h3 id="思路-4">思路</h3><p>动态规划问题</p><p><code>dp[i][j][k][l]</code> 表示选择了 <spanclass="math inline">\(A,B,C,D\)</span> 四个选项分别选择了 <spanclass="math inline">\(i,j,k,l\)</span> 次的最大期望</p><h3 id="code-4">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> dp[</span><span style="color: #005CC5">26</span><span style="color: #24292E">][</span><span style="color: #005CC5">26</span><span style="color: #24292E">][</span><span style="color: #005CC5">26</span><span style="color: #24292E">][</span><span style="color: #005CC5">26</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">array</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #005CC5">4</span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v[i][</span><span style="color: #005CC5">0</span><span style="color: #24292E">] </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v[i][</span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v[i][</span><span style="color: #005CC5">2</span><span style="color: #24292E">] </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v[i][</span><span style="color: #005CC5">3</span><span style="color: #24292E">];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">4</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">4</span><span style="color: #24292E">; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> k </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; k </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">4</span><span style="color: #24292E">; k</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> l </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; l </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">4</span><span style="color: #24292E">; l</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                {</span></span><span class="line"><span style="color: #24292E">                    </span><span style="color: #D73A49">auto</span><span style="color: #24292E"> [a, b, c, d] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> v[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> j </span><span style="color: #D73A49">+</span><span style="color: #24292E"> k </span><span style="color: #D73A49">+</span><span style="color: #24292E"> l];</span></span><span class="line"><span style="color: #24292E">                    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (i </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                        dp[i][j][k][l] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(dp[i][j][k][l], dp[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">][j][k][l] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> a);</span></span><span class="line"><span style="color: #24292E">                    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (j </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                        dp[i][j][k][l] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(dp[i][j][k][l], dp[i][j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">][k][l] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> b);</span></span><span class="line"><span style="color: #24292E">                    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (k </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                        dp[i][j][k][l] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(dp[i][j][k][l], dp[i][j][k </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">][l] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> c);</span></span><span class="line"><span style="color: #24292E">                    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                        dp[i][j][k][l] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(dp[i][j][k][l], dp[i][j][k][l </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> d);</span></span><span class="line"><span style="color: #24292E">                }</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> dp[n </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">4</span><span style="color: #24292E">][n </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">4</span><span style="color: #24292E">][n </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">4</span><span style="color: #24292E">][n </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">4</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="f.-坐火车">F. 坐火车</h2><h3 id="思路-5">思路</h3><p>通过 <span class="math inline">\(BFS\)</span> 计算出从 <spanclass="math inline">\(1\)</span> 到任何城市所需经历的最少城市数量</p><p>再使用 <span class="math inline">\(dijkstra\)</span>在经历最少城市数量的前提下寻找最短路，即对于 <spanclass="math inline">\(u \to v\)</span>，需要满足 <spanclass="math inline">\(d[v] = d[u] + 1\)</span>，其中 <spanclass="math inline">\(d[i]\)</span> 表示从 <spanclass="math inline">\(1\)</span> 到 <spanclass="math inline">\(i\)</span> 需要经历的最少城市数量</p><h3 id="code-5">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">pair</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, ll</span><span style="color: #D73A49">&gt;&gt;&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">g</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> u, v, w;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> u </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> w;</span></span><span class="line"><span style="color: #24292E">        g[u].</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">({v, w});</span></span><span class="line"><span style="color: #24292E">        g[v].</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">({u, w});</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">d</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    function</span><span style="color: #D73A49">&lt;void</span><span style="color: #24292E">()</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> bfs </span><span style="color: #D73A49">=</span><span style="color: #24292E"> [</span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">]()</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        queue</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"><span style="color: #24292E">        q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">bool</span><span style="color: #24292E">&gt; </span><span style="color: #6F42C1">vis</span><span style="color: #24292E">(</span><span style="color: #6F42C1">n</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">        vis[</span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        d[</span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">q.</span><span style="color: #6F42C1">empty</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> u </span><span style="color: #D73A49">=</span><span style="color: #24292E"> q.</span><span style="color: #6F42C1">front</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">            q.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> [v, w] : g[u])</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (vis[v])</span></span><span class="line"><span style="color: #24292E">                    </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">                vis[v] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">                d[v] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> d[u] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">                q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(v);</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    };</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">bfs</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">ll</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">dis</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #D73A49">0x</span><span style="color: #005CC5">3f3f3f3f3f3f3f3f</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    function</span><span style="color: #D73A49">&lt;void</span><span style="color: #24292E">()</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> dijkstra </span><span style="color: #D73A49">=</span><span style="color: #24292E"> [</span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">]()</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        priority_queue</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"><span style="color: #24292E">        q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(n);</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">bool</span><span style="color: #24292E">&gt; </span><span style="color: #6F42C1">vis</span><span style="color: #24292E">(</span><span style="color: #6F42C1">n</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">        dis[n] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">q.</span><span style="color: #6F42C1">empty</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> u </span><span style="color: #D73A49">=</span><span style="color: #24292E"> q.</span><span style="color: #6F42C1">top</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">            q.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (vis[u])</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            vis[u] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> [v, w] : g[u])</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (d[v] </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> d[u] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                    </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (dis[v] </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> dis[u] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> w)</span></span><span class="line"><span style="color: #24292E">                {</span></span><span class="line"><span style="color: #24292E">                    dis[v] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> dis[u] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> w;</span></span><span class="line"><span style="color: #24292E">                    q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(v);</span></span><span class="line"><span style="color: #24292E">                }</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    };</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">dijkstra</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> d[n] </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> dis[</span><span style="color: #005CC5">1</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="g.-a-xor-b-problem-again">G. A Xor B Problem again</h2><h3 id="思路-6">思路</h3><p>如果两个数 <span class="math inline">\(a,\ b\)</span> 满足 <spanclass="math inline">\(a\oplus b = a +b\)</span>，则这两个数在二进制表示下没有位同时为 <spanclass="math inline">\(1\)</span></p><p>对于一个数 <span class="math inline">\(10110_{(2)}\)</span>可知满足条件的数有 <span class="math inline">\(01001_{(2)},\01000_{(2)},\ 00001_{(2)}\)</span>，而后面两个数都是前一个数的子集</p><p>故我们只需找出 <span class="math inline">\(11111_{(2)} \oplus10110_{(2)}\)</span> 的子集的大小即可</p><h3 id="code-6">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">dp</span><span style="color: #24292E">(</span><span style="color: #005CC5">200000</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"><span style="color: #24292E">        dp[a[i]]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">17</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> (</span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">17</span><span style="color: #24292E">); j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (j </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> (</span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> i))</span></span><span class="line"><span style="color: #24292E">                dp[j] </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> dp[j </span><span style="color: #D73A49">^</span><span style="color: #24292E"> (</span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> i)];</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    ll ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> dp[((</span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">17</span><span style="color: #24292E">) </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">) </span><span style="color: #D73A49">^</span><span style="color: #24292E"> a[i]];</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="h.-摘苹果">H. 摘苹果</h2><h3 id="思路-7">思路</h3><p>线段树</p><ul><li><span class="math inline">\(num\)</span> 表示当前节点有多少苹果</li><li><span class="math inline">\(cnt\)</span>表示当前节点有多少课树的苹果数量小于 <spanclass="math inline">\(100\)</span></li><li><span class="math inline">\(flag\)</span>表示当前节点下没有可以采摘的苹果数</li></ul><h3 id="code-7">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">struct</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    ll num, cnt;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">bool</span><span style="color: #24292E"> flag;</span></span><span class="line"><span style="color: #24292E">} seg[N </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">4</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt; </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(</span><span style="color: #6F42C1">N</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">update</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">id</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    seg[id].num </span><span style="color: #D73A49">=</span><span style="color: #24292E"> seg[id </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">].num </span><span style="color: #D73A49">+</span><span style="color: #24292E"> seg[id </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">].num;</span></span><span class="line"><span style="color: #24292E">    seg[id].cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> seg[id </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">].cnt </span><span style="color: #D73A49">+</span><span style="color: #24292E"> seg[id </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">].cnt;</span></span><span class="line"><span style="color: #24292E">    seg[id].flag </span><span style="color: #D73A49">=</span><span style="color: #24292E"> seg[id </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">].flag </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> seg[id </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">].flag;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">build</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">id</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">l</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">r</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">==</span><span style="color: #24292E"> r)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        seg[id].num </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a[l];</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (seg[id].num </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">100</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            seg[id].cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (seg[id].num </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            seg[id].flag </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mid </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">+</span><span style="color: #24292E"> r) </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">build</span><span style="color: #24292E">(id </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">, l, mid);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">build</span><span style="color: #24292E">(id </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, mid </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, r);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">update</span><span style="color: #24292E">(id);</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">modify</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">id</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">l</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">r</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">ql</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">qr</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (seg[id].flag)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">==</span><span style="color: #24292E"> r)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        seg[id].num </span><span style="color: #D73A49">=</span><span style="color: #24292E"> seg[id].num </span><span style="color: #D73A49">-</span><span style="color: #24292E"> (seg[id].num </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">) </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">3</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (seg[id].num </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">100</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            seg[id].cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (seg[id].num </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            seg[id].flag </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mid </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">+</span><span style="color: #24292E"> r) </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (qr </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> mid)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">modify</span><span style="color: #24292E">(id </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">, l, mid, ql, qr);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (ql </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> mid)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">modify</span><span style="color: #24292E">(id </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, mid </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, r, ql, qr);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">modify</span><span style="color: #24292E">(id </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">, l, mid, ql, mid);</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">modify</span><span style="color: #24292E">(id </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, mid </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, r, mid </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, qr);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">update</span><span style="color: #24292E">(id);</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">querycnt</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">id</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">l</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">r</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">ql</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">qr</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">==</span><span style="color: #24292E"> ql </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> r </span><span style="color: #D73A49">==</span><span style="color: #24292E"> qr)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> seg[id].cnt;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mid </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">+</span><span style="color: #24292E"> r) </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (qr </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> mid)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #6F42C1">querycnt</span><span style="color: #24292E">(id </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">, l, mid, ql, qr);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (ql </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> mid)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #6F42C1">querycnt</span><span style="color: #24292E">(id </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, mid </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, r, ql, qr);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #6F42C1">querycnt</span><span style="color: #24292E">(id </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">, l, mid, ql, mid) </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #6F42C1">querycnt</span><span style="color: #24292E">(id </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, mid </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, r, mid </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, qr);</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #6F42C1">ll</span><span style="color: #24292E"> </span><span style="color: #6F42C1">querynum</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">id</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">l</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">r</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">ql</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">qr</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">==</span><span style="color: #24292E"> ql </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> r </span><span style="color: #D73A49">==</span><span style="color: #24292E"> qr)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> seg[id].num;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mid </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">+</span><span style="color: #24292E"> r) </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (qr </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> mid)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #6F42C1">querynum</span><span style="color: #24292E">(id </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">, l, mid, ql, qr);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (ql </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> mid)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #6F42C1">querynum</span><span style="color: #24292E">(id </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, mid </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, r, ql, qr);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #6F42C1">querynum</span><span style="color: #24292E">(id </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">, l, mid, ql, mid) </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #6F42C1">querynum</span><span style="color: #24292E">(id </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, mid </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, r, mid </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, qr);</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">build</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">1</span><span style="color: #24292E">, n);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (m</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> op, l, r;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> op </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> l </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> r;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (op </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #6F42C1">modify</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">1</span><span style="color: #24292E">, n, l, r);</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (op </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">querycnt</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">1</span><span style="color: #24292E">, n, l, r) </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (op </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">3</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">querynum</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">1</span><span style="color: #24292E">, n, l, r) </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>题解</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Educational Codeforces Round 163 (Rated for Div. 2)</title>
    <link href="/archives/1513395789/"/>
    <url>/archives/1513395789/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="https://codeforces.com/contest/1948">Educational CodeforcesRound 163 (Rated for Div. 2)</a></li></ul><h2 id="a">A</h2><h3 id="思路">思路</h3><p>只有两个相同的字符在一起，才算特殊字符，而三个相同的在一起，中间的不算特殊字符</p><p>故特殊字符是两两同时出现的。</p><p>当 <span class="math inline">\(n\)</span> 为奇数时不存在。</p><p>当 <span class="math inline">\(n\)</span>为偶数时每次出现两个相同的且与上一次不同的字符即可</p><h3 id="code">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;NO&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;YES&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (i </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;AA&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;BB&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="b">B</h2><h3 id="思路-1">思路</h3><p>从后往前判断，因为将一个数拆分只会变小，如果已经比后面的小，拆分的操作不会对后面有影响</p><p>如果需要拆分需判断拆分后是否合理</p><p>一直记录当前的大小即可</p><h3 id="code-1">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> now </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a[n];</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a[i] </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> now)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a[i] </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E"> </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> a[i] </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> a[i] </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E"> </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> now)</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;NO&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">                now </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a[i] </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">            now </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a[i];</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;YES&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="c">C</h2><h3 id="思路-2">思路</h3><p><span class="math inline">\(BFS\)</span></p><p>特殊的是每次移动可以看作移动两次，一次是朝四个方向的，一次是按指示方向的</p><p>移动两次后再进队</p><h3 id="code-2">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;char&gt;&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(</span><span style="color: #005CC5">3</span><span style="color: #24292E">, </span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">char</span><span style="color: #24292E">&gt;(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">));</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i][j];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;bool&gt;&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">vis</span><span style="color: #24292E">(</span><span style="color: #005CC5">3</span><span style="color: #24292E">, </span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">bool</span><span style="color: #24292E">&gt;(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">false</span><span style="color: #24292E">));</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> dx </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">};</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> dy </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">};</span></span><span class="line"><span style="color: #24292E">    queue</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">pair</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"><span style="color: #24292E">    q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">1</span><span style="color: #24292E">});</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">q.</span><span style="color: #6F42C1">empty</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">auto</span><span style="color: #24292E"> [x, y] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> q.</span><span style="color: #6F42C1">front</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">        q.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> y </span><span style="color: #D73A49">==</span><span style="color: #24292E"> n)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;YES&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">4</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> nx </span><span style="color: #D73A49">=</span><span style="color: #24292E"> x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> dx[i];</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ny </span><span style="color: #D73A49">=</span><span style="color: #24292E"> y </span><span style="color: #D73A49">+</span><span style="color: #24292E"> dy[i];</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (nx </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> nx </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> ny </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> ny </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">||</span><span style="color: #24292E"> vis[nx][ny])</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            vis[nx][ny] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (nx </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> ny </span><span style="color: #D73A49">==</span><span style="color: #24292E"> n)</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;YES&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a[nx][ny] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;&lt;&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                ny</span><span style="color: #D73A49">--</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">                ny</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (nx </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> nx </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> ny </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> ny </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">||</span><span style="color: #24292E"> vis[nx][ny])</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            vis[nx][ny] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">            q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({nx, ny});</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;NO&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="d">D</h2><h3 id="思路-3">思路</h3><p>枚举每个长度，判断该长度能不能出现重复的字符串</p><h3 id="code-3">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    string s;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> s;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> len </span><span style="color: #D73A49">=</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">() </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">; len </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; len</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> len </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">(); i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (s[i] </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> s[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> len] </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> s[i] </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;?&#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> s[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> len] </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;?&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">            cnt</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (cnt </span><span style="color: #D73A49">==</span><span style="color: #24292E"> len)</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> len </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="e">E</h2><h3 id="思路-4">思路</h3><p>因为 <span class="math inline">\(a[i] - a[j] \ge 1\)</span>故一组的长度最大为 <span class="math inline">\(k\)</span>，而这组的两端的数需要差值为 <span class="math inline">\(1\)</span>且和别的数的差值尽可能小故选择中间的两个数。</p><h3 id="code-4">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, k;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> k;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">), </span><span style="color: #6F42C1">b</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        a[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> i;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> k </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> k)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cnt</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">reverse</span><span style="color: #24292E">(a.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">() </span><span style="color: #D73A49">+</span><span style="color: #24292E"> i, a.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">() </span><span style="color: #D73A49">+</span><span style="color: #24292E"> i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> k </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">reverse</span><span style="color: #24292E">(a.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">() </span><span style="color: #D73A49">+</span><span style="color: #24292E"> i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> k </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">, a.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">() </span><span style="color: #D73A49">+</span><span style="color: #24292E"> i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> k);</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> i; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> k; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            b[j] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> cnt;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">%</span><span style="color: #24292E"> k)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cnt</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">%</span><span style="color: #24292E"> k </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> k </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #6F42C1">reverse</span><span style="color: #24292E">(a.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">() </span><span style="color: #D73A49">+</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">%</span><span style="color: #24292E"> k) </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, a.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">());</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #6F42C1">reverse</span><span style="color: #24292E">(a.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">() </span><span style="color: #D73A49">+</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">%</span><span style="color: #24292E"> k) </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, a.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">() </span><span style="color: #D73A49">+</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">%</span><span style="color: #24292E"> k) </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> k </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #6F42C1">reverse</span><span style="color: #24292E">(a.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">() </span><span style="color: #D73A49">+</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">%</span><span style="color: #24292E"> k) </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> k </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">, a.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">());</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">%</span><span style="color: #24292E"> k) </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            b[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> cnt;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> a[i] </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> b[i] </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="f">F</h2><h3 id="思路-5">思路</h3><p>待补</p><h3 id="code-5">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>题解</category>
      
      <category>Codeforces</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>Codeforces</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Codeforces Round 933 (Div. 3)</title>
    <link href="/archives/744274538/"/>
    <url>/archives/744274538/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="https://codeforces.com/contest/1941">Codeforces Round 933(Div. 3)</a></li></ul><h2 id="a">A</h2><h3 id="思路">思路</h3><p>数据量较小，遍历所有可能累加即可</p><h3 id="code">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m, k;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> k;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n), </span><span style="color: #6F42C1">b</span><span style="color: #24292E">(m);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> b[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a[i] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> b[j] </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> k)</span></span><span class="line"><span style="color: #24292E">                ans</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="b">B</h2><h3 id="思路-1">思路</h3><p>对于 <span class="math inline">\(a_{i-1}\ (2\le i\le n-1)\)</span>，想让 <span class="math inline">\(a_{i-1}\)</span> 变为 <spanclass="math inline">\(0\)</span> 只能对 <spanclass="math inline">\(a_{i}\)</span>操作，遍历所有的可能操作的索引，进行最优操作即使 <spanclass="math inline">\(a_{i-1}\)</span> 变为 <spanclass="math inline">\(0\)</span></p><h3 id="code-1">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        a[i] </span><span style="color: #D73A49">-=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> a[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #24292E">        a[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">-=</span><span style="color: #24292E"> a[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #24292E">        a[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">-=</span><span style="color: #24292E"> a[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a[i] </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> a[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;NO</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> (a[n] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> a[n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E"> </span><span style="color: #D73A49">?</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;YES</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;NO</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="c">C</h2><h3 id="思路-2">思路</h3><p>对于 <span class="math inline">\(map\)</span> 和 <spanclass="math inline">\(pie\)</span> 只需删除中间的 <spanclass="math inline">\(a\)</span> 和 <spanclass="math inline">\(i\)</span> 即可变为漂亮的。</p><p>对于 <span class="math inline">\(mapie\)</span> 需要删除中间 <spanclass="math inline">\(p\)</span> 即可变为漂亮的</p><p>所以我们只需找出 <span class="math inline">\(map\)</span> 和 <spanclass="math inline">\(pie\)</span> 的数量即可，特别的是如果一个 <spanclass="math inline">\(p\)</span> 同时被 <spanclass="math inline">\(map\)</span> 和 <spanclass="math inline">\(pie\)</span> 使用，优先给 <spanclass="math inline">\(map\)</span></p><p>故答案为 <spanclass="math inline">\(\mathrm{cnt}(map)+\mathrm{cnt}(pie)\)</span></p><h3 id="code-2">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    string s;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> s;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">substr</span><span style="color: #24292E">(i, </span><span style="color: #005CC5">3</span><span style="color: #24292E">) </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;map&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">substr</span><span style="color: #24292E">(i, </span><span style="color: #005CC5">3</span><span style="color: #24292E">) </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;pie&quot;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            ans</span><span style="color: #D73A49">++</span><span style="color: #24292E">, i </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="d">D</h2><h3 id="思路-3">思路</h3><p>模拟题意，进行 <spanclass="math inline">\(BFS\)</span>，特别的是本题需要去重，故使用 <spanclass="math inline">\(set\)</span>，否则如果每次都给两个方向传球会 <spanclass="math inline">\(TLE\)</span></p><p>还需注意编号是从 <span class="math inline">\(1\)</span>开始的，要对取模后的 <span class="math inline">\(0\)</span>进行处理。</p><h3 id="code-3">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m, x;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    set</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> now, tmp;</span></span><span class="line"><span style="color: #24292E">    now.</span><span style="color: #6F42C1">insert</span><span style="color: #24292E">(x);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (m</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> d;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">char</span><span style="color: #24292E"> flag;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> d </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> flag;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        tmp.</span><span style="color: #6F42C1">clear</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> it : now)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (flag </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;0&#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> flag </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;?&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                tmp.</span><span style="color: #6F42C1">insert</span><span style="color: #24292E">((it </span><span style="color: #D73A49">+</span><span style="color: #24292E"> n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> d) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> n);</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (flag </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;1&#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> flag </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;?&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                tmp.</span><span style="color: #6F42C1">insert</span><span style="color: #24292E">((it </span><span style="color: #D73A49">+</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> d) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> n);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        now </span><span style="color: #D73A49">=</span><span style="color: #24292E"> tmp;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #D73A49">*</span><span style="color: #24292E">now.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">() </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        now.</span><span style="color: #6F42C1">erase</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">        now.</span><span style="color: #6F42C1">insert</span><span style="color: #24292E">(n);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> now.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">() </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> it : now)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> it </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="e">E</h2><h3 id="思路-4">思路</h3><p>动态规划，对每一行进行操作</p><p><span class="math inline">\(dp[i]\)</span> 表示当桥的长度为 <spanclass="math inline">\(i\)</span> 时的花费。</p><p>状态转移方程为：<span class="math inline">\(dp[i] = \min(dp[i-d-1],\dots, dp[i-1])+(a[i]+1)\)</span>，即从能搭过来的花费最小的支架搭到<span class="math inline">\(i\)</span></p><p>需要连续建造 <span class="math inline">\(k\)</span>座桥，故用前缀和优化</p><h3 id="code-4">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m, k, d;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> k </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> d;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;int&gt;&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt;(m </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">));</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i][j];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">ll</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">res</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">ll</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">dp</span><span style="color: #24292E">(m </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">        dp[</span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        multiset</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">ll</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> st </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {dp[</span><span style="color: #005CC5">1</span><span style="color: #24292E">]};</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> d </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                st.</span><span style="color: #6F42C1">erase</span><span style="color: #24292E">(st.</span><span style="color: #6F42C1">find</span><span style="color: #24292E">(dp[j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> d </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">]));</span></span><span class="line"><span style="color: #24292E">            dp[j] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E">st.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">() </span><span style="color: #D73A49">+</span><span style="color: #24292E"> a[i][j] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            st.</span><span style="color: #6F42C1">insert</span><span style="color: #24292E">(dp[j]);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        res[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> dp[m];</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">partial_sum</span><span style="color: #24292E">(res.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), res.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">(), res.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">());</span></span><span class="line"><span style="color: #24292E">    ll ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">0x</span><span style="color: #005CC5">3f3f3f3f3f3f3f3f</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> k; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(ans, res[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> res[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> k]);</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="f">F</h2><h3 id="思路-5">思路</h3><p>二分答案 <span class="math inline">\(d\)</span></p><p>对于每个相邻的问题，判断间隔是否大于 <spanclass="math inline">\(d\)</span>，如果大于 <spanclass="math inline">\(d\)</span> 则需要元素，记录有多少间隔过大。</p><p>如果只有一个间隔过大，我们要先判断间隔可能插入的元素大小，通过二分查找判断是否存在此元素</p><h3 id="code-5">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m, k;</span></span><span class="line"><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> a, d, f;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">bool</span><span style="color: #24292E"> </span><span style="color: #6F42C1">check</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">   vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">pair</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;&gt;</span><span style="color: #24292E"> v;</span></span><span class="line"><span style="color: #24292E">   </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">   {</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> a[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> x)</span></span><span class="line"><span style="color: #24292E">      {</span></span><span class="line"><span style="color: #24292E">         v.</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">({a[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">], a[i]});</span></span><span class="line"><span style="color: #24292E">         </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (v.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">() </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">      }</span></span><span class="line"><span style="color: #24292E">   }</span></span><span class="line"><span style="color: #24292E">   </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (v.</span><span style="color: #6F42C1">empty</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">   </span><span style="color: #D73A49">int</span><span style="color: #24292E"> l </span><span style="color: #D73A49">=</span><span style="color: #24292E"> v[</span><span style="color: #005CC5">0</span><span style="color: #24292E">].second </span><span style="color: #D73A49">-</span><span style="color: #24292E"> x, r </span><span style="color: #D73A49">=</span><span style="color: #24292E"> v[</span><span style="color: #005CC5">0</span><span style="color: #24292E">].first </span><span style="color: #D73A49">+</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">   </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (r </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> l)</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">   </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> i : d)</span></span><span class="line"><span style="color: #24292E">   {</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (i </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> r)</span></span><span class="line"><span style="color: #24292E">         </span><span style="color: #D73A49">break</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #D73A49">auto</span><span style="color: #24292E"> p </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lower_bound</span><span style="color: #24292E">(f.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), f.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">(), l </span><span style="color: #D73A49">-</span><span style="color: #24292E"> i);</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (p </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> f.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">() </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E">p </span><span style="color: #D73A49">+</span><span style="color: #24292E"> i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> r)</span></span><span class="line"><span style="color: #24292E">         </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">   }</span></span><span class="line"><span style="color: #24292E">   </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">   cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> k;</span></span><span class="line"><span style="color: #24292E">   a.</span><span style="color: #6F42C1">resize</span><span style="color: #24292E">(n);</span></span><span class="line"><span style="color: #24292E">   d.</span><span style="color: #6F42C1">resize</span><span style="color: #24292E">(m);</span></span><span class="line"><span style="color: #24292E">   f.</span><span style="color: #6F42C1">resize</span><span style="color: #24292E">(k);</span></span><span class="line"><span style="color: #24292E">   </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">it : a)</span></span><span class="line"><span style="color: #24292E">      cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> it;</span></span><span class="line"><span style="color: #24292E">   </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">it : d)</span></span><span class="line"><span style="color: #24292E">      cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> it;</span></span><span class="line"><span style="color: #24292E">   </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">it : f)</span></span><span class="line"><span style="color: #24292E">      cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> it;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">   </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(d.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), d.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">());</span></span><span class="line"><span style="color: #24292E">   </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(f.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), f.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">());</span></span><span class="line"></span><span class="line"><span style="color: #24292E">   </span><span style="color: #D73A49">int</span><span style="color: #24292E"> l </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">, r </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">0x</span><span style="color: #005CC5">7fffffff</span><span style="color: #24292E">, ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">   </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> r)</span></span><span class="line"><span style="color: #24292E">   {</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mid </span><span style="color: #D73A49">=</span><span style="color: #24292E"> r </span><span style="color: #D73A49">-</span><span style="color: #24292E"> (r </span><span style="color: #D73A49">-</span><span style="color: #24292E"> l) </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #6F42C1">check</span><span style="color: #24292E">(mid))</span></span><span class="line"><span style="color: #24292E">         ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> mid, r </span><span style="color: #D73A49">=</span><span style="color: #24292E"> mid </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">         l </span><span style="color: #D73A49">=</span><span style="color: #24292E"> mid </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">   }</span></span><span class="line"><span style="color: #24292E">   cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">   cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">   </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">   cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">   </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">      </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">   </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="g">G</h2><h3 id="思路-6">思路</h3><p>双端队列 <span class="math inline">\(dq\)</span> 中的 <spanclass="math inline">\(d,u,a\)</span> 分别表示到 <spanclass="math inline">\(u\)</span> 上一个颜色是 <spanclass="math inline">\(a\)</span> 的距离是 <spanclass="math inline">\(d\)</span> ，当 <spanclass="math inline">\(a=0\)</span> 时 <spanclass="math inline">\(d\)</span> 表示从起点到 <spanclass="math inline">\(u\)</span> 的距离</p><p>如果 <span class="math inline">\(a\)</span>有值说明有颜色，则到达同色的节点花费为 <spanclass="math inline">\(0\)</span></p><p>如果 <spanclass="math inline">\(a=0\)</span>，就通往别的颜色的节点，花费为 <spanclass="math inline">\(1\)</span>​</p><p>为了让花费低的优先搜索，将花费为 <spanclass="math inline">\(0\)</span> 的情况放在队首，将花费为 <spanclass="math inline">\(1\)</span> 的情况放在队尾</p><h3 id="code-6">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">map</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, vector</span><span style="color: #D73A49">&lt;int&gt;&gt;&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">g</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> u, v, c;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> u </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> c;</span></span><span class="line"><span style="color: #24292E">        g[u][c].</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">(v);</span></span><span class="line"><span style="color: #24292E">        g[v][c].</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">(u);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    map</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">pair</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;</span><span style="color: #24292E"> dis;</span></span><span class="line"><span style="color: #24292E">    deque</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">tuple</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;&gt;</span><span style="color: #24292E"> dq;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> b, e;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> b </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> e;</span></span><span class="line"><span style="color: #24292E">    dq.</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">({</span><span style="color: #005CC5">0</span><span style="color: #24292E">, b, </span><span style="color: #005CC5">0</span><span style="color: #24292E">});</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">dq.</span><span style="color: #6F42C1">empty</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">auto</span><span style="color: #24292E"> [d, u, a] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> dq.</span><span style="color: #6F42C1">front</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">        dq.</span><span style="color: #6F42C1">pop_front</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (dis.</span><span style="color: #6F42C1">count</span><span style="color: #24292E">({u, a}))</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        dis[{u, a}] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> d;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            dq.</span><span style="color: #6F42C1">push_front</span><span style="color: #24292E">({d, u, </span><span style="color: #005CC5">0</span><span style="color: #24292E">});</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> v : g[u][a])</span></span><span class="line"><span style="color: #24292E">                dq.</span><span style="color: #6F42C1">push_front</span><span style="color: #24292E">({d, v, a});</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> [a, _] : g[u])</span></span><span class="line"><span style="color: #24292E">                dq.</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">({d </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, u, a});</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> dis[{e, </span><span style="color: #005CC5">0</span><span style="color: #24292E">}] </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>题解</category>
      
      <category>Codeforces</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>Codeforces</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>字典树</title>
    <link href="/archives/4003859050/"/>
    <url>/archives/4003859050/</url>
    
    <content type="html"><![CDATA[<h2 id="字典树">字典树</h2><p>查找一个字符串是否在「字典」中出现过</p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">struct</span><span style="color: #24292E"> </span><span style="color: #6F42C1">trie</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> nex[</span><span style="color: #005CC5">100000</span><span style="color: #24292E">][</span><span style="color: #005CC5">26</span><span style="color: #24292E">], tot </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">bool</span><span style="color: #24292E"> exist[</span><span style="color: #005CC5">100000</span><span style="color: #24292E">];</span><span style="color: #6A737D"> // 该结点结尾的字符串是否存在</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">insert</span><span style="color: #24292E">(</span><span style="color: #6F42C1">string</span><span style="color: #24292E"> </span><span style="color: #E36209">s</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> p </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">(); i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> c </span><span style="color: #D73A49">=</span><span style="color: #24292E"> s[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;a&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">nex[p][c])</span></span><span class="line"><span style="color: #24292E">                nex[p][c] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">++</span><span style="color: #24292E">tot;</span><span style="color: #6A737D"> // 如果没有，就添加结点</span></span><span class="line"><span style="color: #24292E">            p </span><span style="color: #D73A49">=</span><span style="color: #24292E"> nex[p][c];</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        exist[p] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">bool</span><span style="color: #24292E"> </span><span style="color: #6F42C1">query</span><span style="color: #24292E">(</span><span style="color: #6F42C1">string</span><span style="color: #24292E"> </span><span style="color: #E36209">s</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span><span style="color: #6A737D"> // 查找字符串</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> p </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">(); i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> c </span><span style="color: #D73A49">=</span><span style="color: #24292E"> s[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;a&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">nex[p][c])</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            p </span><span style="color: #D73A49">=</span><span style="color: #24292E"> nex[p][c];</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> exist[p];</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">};</span></span></code></pre></div></div></figure><h2 id="字典树异或">01字典树（异或）</h2><p>最大异或和</p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">struct</span><span style="color: #24292E"> </span><span style="color: #6F42C1">trie</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> nex[</span><span style="color: #005CC5">31</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">100000</span><span style="color: #24292E">][</span><span style="color: #005CC5">2</span><span style="color: #24292E">], tot </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">insert</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> p </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">30</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ch </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> i) </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">nex[p][ch])</span></span><span class="line"><span style="color: #24292E">                nex[p][ch] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">++</span><span style="color: #24292E">tot;</span><span style="color: #6A737D"> // 如果没有，就添加结点</span></span><span class="line"><span style="color: #24292E">            p </span><span style="color: #D73A49">=</span><span style="color: #24292E"> nex[p][ch];</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">query</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span><span style="color: #6A737D"> // 查找字符串</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> p </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">, res </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">30</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ch </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> i) </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (nex[p][ch </span><span style="color: #D73A49">^</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">])</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                res </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> i;</span></span><span class="line"><span style="color: #24292E">                p </span><span style="color: #D73A49">=</span><span style="color: #24292E"> nex[p][ch </span><span style="color: #D73A49">^</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">                p </span><span style="color: #D73A49">=</span><span style="color: #24292E"> nex[p][ch];</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> res;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">};</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>模板</category>
      
      <category>字符串</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>“达梦杯”武汉理工大学第五届新生程序设计大赛</title>
    <link href="/archives/4174912869/"/>
    <url>/archives/4174912869/</url>
    
    <content type="html"><![CDATA[<h2 id="a.-awa开小车">A. Awa开小车</h2><h3 id="思路">思路</h3><p>根据题意模拟。</p><p>遇到没触发过的导向板就进行转向，计数，并标记为来过，直到小车爆炸。</p><h3 id="code">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">111</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">char</span><span style="color: #24292E"> mp[N][N];</span></span><span class="line"><span style="color: #D73A49">bool</span><span style="color: #24292E"> vis[N][N];</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m, x, y;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> y;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> mp[i][j];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">char</span><span style="color: #24292E"> now </span><span style="color: #D73A49">=</span><span style="color: #24292E"> mp[x][y];</span></span><span class="line"><span style="color: #24292E">    vis[x][y] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (now </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;D&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            x</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (now </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;U&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            x</span><span style="color: #D73A49">--</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (now </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;L&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            y</span><span style="color: #D73A49">--</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (now </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;R&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            y</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> x </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">||</span><span style="color: #24292E"> y </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> y </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> m)</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">break</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (vis[x][y])</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        vis[x][y] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mp[x][y] </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> now)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            ans</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            now </span><span style="color: #D73A49">=</span><span style="color: #24292E"> mp[x][y];</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="b.-jokerxuan的明星梦">B. JokerXuan的明星梦</h2><h3 id="思路-1">思路</h3><p><span class="math inline">\(now\)</span> 表示当前的幸运数字，<spanclass="math inline">\(num0\)</span> 和 <spanclass="math inline">\(num1\)</span> 分别表示每个位全为 <spanclass="math inline">\(0\)</span> 的数和全为 <spanclass="math inline">\(1\)</span> 的数经过几天的操作后的结果</p><p>如果出现 <span class="math inline">\(null\)</span>，我们查看 <spanclass="math inline">\(num0\)</span> 和 <spanclass="math inline">\(num1\)</span> 的每一位：</p><ul><li>都为 <span class="math inline">\(1\)</span> 则 <spanclass="math inline">\(now\)</span> 的这一位一定是 <spanclass="math inline">\(1\)</span></li><li>都为 <span class="math inline">\(0\)</span> 则 <spanclass="math inline">\(now\)</span> 的这一位一定是 <spanclass="math inline">\(0\)</span></li><li>如果 <span class="math inline">\(num0\)</span> 为 <spanclass="math inline">\(1\)</span> 且 <spanclass="math inline">\(num1\)</span> 为 <spanclass="math inline">\(0\)</span> 则这一位要改变</li><li>否则这一位没有改变</li></ul><h3 id="code-1">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> now, num0 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">, num1 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">func</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">30</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> ((num0 </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> i) </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> (num1 </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> i))</span></span><span class="line"><span style="color: #24292E">            now </span><span style="color: #D73A49">|=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> i;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> ((</span><span style="color: #D73A49">!</span><span style="color: #24292E">num0 </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> i) </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> </span><span style="color: #D73A49">!</span><span style="color: #24292E">(num1 </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> i))</span></span><span class="line"><span style="color: #24292E">            now </span><span style="color: #D73A49">&amp;=</span><span style="color: #24292E"> </span><span style="color: #D73A49">~</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> i);</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> ((num0 </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> i) </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> </span><span style="color: #D73A49">!</span><span style="color: #24292E">(num1 </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> i))</span></span><span class="line"><span style="color: #24292E">            now </span><span style="color: #D73A49">^=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> i;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    string t;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> now;</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> now </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (t </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;null&quot;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #6F42C1">func</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">            cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (i </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                now </span><span style="color: #D73A49">=</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">int</span><span style="color: #24292E"> time </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">atoi</span><span style="color: #24292E">(t.</span><span style="color: #6F42C1">substr</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">, t.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">() </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">3</span><span style="color: #24292E">).</span><span style="color: #6F42C1">c_str</span><span style="color: #24292E">());</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (time </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">12</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                    now </span><span style="color: #D73A49">&amp;=</span><span style="color: #24292E"> x, num0 </span><span style="color: #D73A49">&amp;=</span><span style="color: #24292E"> x, num1 </span><span style="color: #D73A49">&amp;=</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (time </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">18</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                    now </span><span style="color: #D73A49">|=</span><span style="color: #24292E"> x, num0 </span><span style="color: #D73A49">|=</span><span style="color: #24292E"> x, num1 </span><span style="color: #D73A49">|=</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">                    now </span><span style="color: #D73A49">^=</span><span style="color: #24292E"> x, num0 </span><span style="color: #D73A49">^=</span><span style="color: #24292E"> x, num1 </span><span style="color: #D73A49">^=</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> now </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="c.-what-is-acm">C. What is ACM?</h2><h3 id="思路-2">思路</h3><p>遇到关键字符 <span class="math inline">\(ACM\)</span> 就加入字符串<span class="math inline">\(tmp\)</span>，如果当前不是关键字符就输出<span class="math inline">\(tmp\)</span></p><h3 id="code-2">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    string s, t;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> s </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    string tmp, acm </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;ACM&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (acm.</span><span style="color: #6F42C1">find</span><span style="color: #24292E">(t[i]) </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">string</span><span style="color: #24292E">::npos)</span></span><span class="line"><span style="color: #24292E">            tmp </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> s[i];</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (tmp </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;&quot;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> tmp </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            tmp </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> tmp </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="d.-呼风唤雨">D. 呼风唤雨</h2><h3 id="思路-3">思路</h3><p>将每个位置都作为分界点，记录最大值即可</p><h3 id="code-3">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">ll</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    ll sum </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v[i];</span></span><span class="line"><span style="color: #24292E">        v[i] </span><span style="color: #D73A49">*=</span><span style="color: #24292E"> </span><span style="color: #005CC5">514</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        sum </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> v[i];</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    ll ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> k </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; k </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; k</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        sum </span><span style="color: #D73A49">-=</span><span style="color: #24292E"> v[k];</span></span><span class="line"><span style="color: #24292E">        sum </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> v[k] </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">514</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">114</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(ans, sum);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="e.-急急国王修公路">E. 急急国王修公路</h2><h3 id="思路-4">思路</h3><p>通过并查集记录每个州（联通块）有多少城池（度数）。</p><p>生成一颗树需要 <span class="math inline">\(n-1\)</span> 条无向边，即<span class="math inline">\(2*(n-1)\)</span> 度数</p><p>二分答案 <span class="math inline">\(x\)</span> ，每个联通块能提供<span class="math inline">\(\min (size[i], x)\)</span> 度数，其中 <spanclass="math inline">\(size[i]\)</span> 为第 <spanclass="math inline">\(i\)</span>个联通块的度数，判断度数是否满足即可。</p><h3 id="code-4">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> fa;</span></span><span class="line"><span style="color: #24292E">unordered_map</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;</span><span style="color: #24292E"> mp;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">find</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">) { </span><span style="color: #D73A49">return</span><span style="color: #24292E"> fa[x] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> x </span><span style="color: #D73A49">?</span><span style="color: #24292E"> x </span><span style="color: #D73A49">:</span><span style="color: #24292E"> fa[x] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">find</span><span style="color: #24292E">(fa[x]); }</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">merge</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">y</span><span style="color: #24292E">) { fa[</span><span style="color: #6F42C1">find</span><span style="color: #24292E">(x)] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">find</span><span style="color: #24292E">(y); }</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">bool</span><span style="color: #24292E"> </span><span style="color: #6F42C1">judge</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> sum </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> [a, b] : mp)</span></span><span class="line"><span style="color: #24292E">        sum </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(x, b);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> sum </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> (mp.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">() </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    fa.</span><span style="color: #6F42C1">resize</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        fa[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> i;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (m</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> a, b;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> b;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">merge</span><span style="color: #24292E">(a, b);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        mp[</span><span style="color: #6F42C1">find</span><span style="color: #24292E">(i)]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> l </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">, r </span><span style="color: #D73A49">=</span><span style="color: #24292E"> n, ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> r)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mid </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">+</span><span style="color: #24292E"> r) </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #6F42C1">judge</span><span style="color: #24292E">(mid))</span></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> mid, r </span><span style="color: #D73A49">=</span><span style="color: #24292E"> mid </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">            l </span><span style="color: #D73A49">=</span><span style="color: #24292E"> mid </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="f.-绒绒的括号序列">F. 绒绒的括号序列</h2><h3 id="思路-5">思路</h3><p>待补</p><h3 id="code-5">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292E">待补</span></span></code></pre></div></div></figure><h2 id="g.-神奇的礼物">G. 神奇的礼物</h2><h3 id="思路-6">思路</h3><p>易知，如果两数之差的绝对值模 <span class="math inline">\(3\)</span>余 <span class="math inline">\(0\)</span>，则可以通过数次操作使这两数相等</p><h3 id="code-6">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> g[</span><span style="color: #005CC5">5</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">3</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> g[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> i;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> i;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">swap</span><span style="color: #24292E">(g[i], g[</span><span style="color: #005CC5">1</span><span style="color: #24292E">]);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> ((g[</span><span style="color: #005CC5">2</span><span style="color: #24292E">] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> g[</span><span style="color: #005CC5">3</span><span style="color: #24292E">]) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">3</span><span style="color: #24292E"> </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;Yes</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;No</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="h.-小f的圣诞树">H. 小F的圣诞树</h2><h3 id="思路-7">思路</h3><p>对于重量较大的礼物，相互作用为它的重量乘以它们的深度之和。</p><p>从 <span class="math inline">\(1\)</span>号节点进行搜索，记录每个节点的深度，再按重量对节点降序排序。</p><p>对于节点 <span class="math inline">\(i\)</span> 它和它后面 <spanclass="math inline">\(n\)</span> 个节点的相互作用之和为节点 <spanclass="math inline">\(i\)</span> 的重量乘以后面节点的深度加上 <spanclass="math inline">\(n\)</span> 个节点 <spanclass="math inline">\(i\)</span> 的深度之和。</p><p>通过前缀和优化求深度和的时间复杂度</p><h3 id="code-7">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">9</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">7</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">struct</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> val, dep;</span></span><span class="line"><span style="color: #24292E">};</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">node</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v[i].val;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;int&gt;&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">g</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x, y;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> y;</span></span><span class="line"><span style="color: #24292E">        g[x].</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">(y);</span></span><span class="line"><span style="color: #24292E">        g[y].</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">(x);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    queue</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">pair</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">vis</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">});</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">q.</span><span style="color: #6F42C1">empty</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">auto</span><span style="color: #24292E"> [now, dep] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> q.</span><span style="color: #6F42C1">front</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">        q.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        v[now].dep </span><span style="color: #D73A49">=</span><span style="color: #24292E"> dep;</span></span><span class="line"><span style="color: #24292E">        vis[now] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> it : g[now])</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">vis[it])</span></span><span class="line"><span style="color: #24292E">                q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({it, dep </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">});</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(v.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">() </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, v.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">(), [](</span><span style="color: #6F42C1">node</span><span style="color: #24292E"> </span><span style="color: #E36209">a</span><span style="color: #24292E">, </span><span style="color: #6F42C1">node</span><span style="color: #24292E"> </span><span style="color: #E36209">b</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">         { </span><span style="color: #D73A49">return</span><span style="color: #24292E"> a.val </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> b.val; });</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    ll ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">ll</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">sum</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        sum[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> sum[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> v[i].dep;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (ans </span><span style="color: #D73A49">+</span><span style="color: #24292E"> (v[i].val </span><span style="color: #D73A49">*</span><span style="color: #24292E"> (sum[n] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> sum[i] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">LL</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> i) </span><span style="color: #D73A49">*</span><span style="color: #24292E"> v[i].dep) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> mod)) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> mod;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="i.-优雅太优雅了">I. 优雅太优雅了</h2><h3 id="思路-8">思路</h3><p>已知 <span class="math inline">\(\forall[l, r], \min (a[l], a[l+1],\cdots, a[r]) \geqslant \operatorname{gcd}(a[l], a[l+1], \cdots,a[r])\)</span> 成立</p><p>那么 <span class="math inline">\(\forall[l, r], \min (a[l], a[l+1],\cdots, a[r-1]) \geqslant \operatorname{gcd}(a[l], a[l+1], \cdots,a[r-1])\)</span> 成立</p><p>当 <span class="math inline">\(a_i\)</span>不能改变区间最小值的时候，不管 <spanclass="math inline">\(a_{i+1}\)</span> 是什么数，区间 <spanclass="math inline">\(gcd\)</span> 都不会增加，都有 <spanclass="math inline">\(\forall[l, r], \min (a[l], a[l+1], \cdots, a[r])\geqslant \operatorname{gcd}(a[l], a[l+1], \cdots, a[r+1])\)</span></p><p>反之当 <span class="math inline">\(a_i\)</span> 为区间最小值时考虑<span class="math inline">\(\forall[l, r],a_r \geqslant\operatorname{gcd}(a[l], a[l+1], \cdots, a[r+1])\)</span>，区间 <spanclass="math inline">\(gcd\)</span> 会随着 <spanclass="math inline">\(l\)</span> 减小而减小</p><p>当 <span class="math inline">\(l\)</span> 最靠近 <spanclass="math inline">\(r\)</span> 时，右侧取最大值 <spanclass="math inline">\(\operatorname{gcd}(a[r-1], a[r+1])\)</span></p><p>故只需证明 <span class="math inline">\(\forall[l, r],a_r \geqslant\operatorname{gcd}(a[r-1], a[r+1])\)</span></p><h3 id="code-8">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">gcd</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">a</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">b</span><span style="color: #24292E">) { </span><span style="color: #D73A49">return</span><span style="color: #24292E"> b </span><span style="color: #D73A49">?</span><span style="color: #24292E"> </span><span style="color: #6F42C1">gcd</span><span style="color: #24292E">(b, a </span><span style="color: #D73A49">%</span><span style="color: #24292E"> b) </span><span style="color: #D73A49">:</span><span style="color: #24292E"> a; }</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (v[i] </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">gcd</span><span style="color: #24292E">(v[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">], v[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">]))</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;Rude&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;Elegant&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="j.-逆序对">J. 逆序对</h2><h3 id="思路-9">思路</h3><p><ahref="https://www.nowcoder.com/discuss/425353706683555840">见题解</a></p><h3 id="code-9">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">6</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">5</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> nex[</span><span style="color: #005CC5">31</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> N][</span><span style="color: #005CC5">2</span><span style="color: #24292E">], tot </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> cnt[</span><span style="color: #005CC5">31</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> N][</span><span style="color: #005CC5">2</span><span style="color: #24292E">][</span><span style="color: #005CC5">2</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> a[N], b[N];</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">insert</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">y</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> p </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">30</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> tmp1 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> i) </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> tmp2 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (y </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> i) </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> tmp </span><span style="color: #D73A49">=</span><span style="color: #24292E"> tmp1 </span><span style="color: #D73A49">^</span><span style="color: #24292E"> tmp2;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">nex[p][tmp])</span></span><span class="line"><span style="color: #24292E">            nex[p][tmp] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">++</span><span style="color: #24292E">tot;</span></span><span class="line"><span style="color: #24292E">        cnt[p][tmp1][tmp2]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        p </span><span style="color: #D73A49">=</span><span style="color: #24292E"> nex[p][tmp];</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">query</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">y</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> p </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">, res </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">30</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> tmp1 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> i) </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> tmp2 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (y </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> i) </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> tmp </span><span style="color: #D73A49">=</span><span style="color: #24292E"> tmp1 </span><span style="color: #D73A49">^</span><span style="color: #24292E"> tmp2;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        res </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> cnt[p][tmp2 </span><span style="color: #D73A49">^</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">][tmp1];</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">nex[p][tmp])</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E"> res;</span></span><span class="line"><span style="color: #24292E">        p </span><span style="color: #D73A49">=</span><span style="color: #24292E"> nex[p][tmp];</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> res;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">init</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> tot; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            nex[i][j] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> k </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; k </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">; k</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                cnt[i][j][k] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    tot </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">init</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> b[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    ll ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">query</span><span style="color: #24292E">(a[i], b[i]);</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">insert</span><span style="color: #24292E">(a[i], b[i]);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>题解</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Codeforces Round 929 (Div. 3)</title>
    <link href="/archives/4210095459/"/>
    <url>/archives/4210095459/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="https://codeforces.com/contest/1933">Codeforces Round 929(Div. 3)</a></li></ul><h2 id="a">A</h2><h3 id="思路">思路</h3><p>将所有的负数放到一起，再一起变成相反数。即将所有数的绝对值加在一起即可。</p><h3 id="code">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(x);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="b">B</h2><h3 id="思路-1">思路</h3><p>判断所有数的和对 <span class="math inline">\(3\)</span> 取余的结果：- 余 <span class="math inline">\(0\)</span>：说明已经是三的倍数，直接输出 <span class="math inline">\(0\)</span> -余 <span class="math inline">\(1\)</span> ：如果存在一个数对 <spanclass="math inline">\(3\)</span> 取余为 <spanclass="math inline">\(1\)</span> ，则删除这个数即可，需要 <spanclass="math inline">\(1\)</span> 步。若不存在，则可以让一个数 <spanclass="math inline">\(+2\)</span> ，需要 <spanclass="math inline">\(2\)</span> 步。 - 余 <spanclass="math inline">\(2\)</span> ：直接让一个数 <spanclass="math inline">\(+1\)</span> 即可，需要 <spanclass="math inline">\(1\)</span> 步</p><h3 id="code-1">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">x : a)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> sum </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> x : a)</span></span><span class="line"><span style="color: #24292E">        sum </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> x;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> sum </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">3</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (t </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> t </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (t </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> x : a)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">3</span><span style="color: #24292E"> </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="c">C</h2><h3 id="思路-2">思路</h3><p>因为 <span class="math inline">\(l\)</span> 的大小不超过 <spanclass="math inline">\(1e6\)</span> ，所以 <spanclass="math inline">\(x\)</span> 和 <spanclass="math inline">\(y\)</span> 的大小不超过 <spanclass="math inline">\(20\ (2^{20} = 1048576 \gt 1e6)\)</span></p><p>所以我们遍历所有可能用 <span class="math inline">\(set\)</span>对答案去重即可。（用 <span class="math inline">\(pow\)</span>不会超时但是不建议）</p><h3 id="code-2">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #6F42C1">ll</span><span style="color: #24292E"> </span><span style="color: #6F42C1">qpow</span><span style="color: #24292E">(</span><span style="color: #6F42C1">ll</span><span style="color: #24292E"> </span><span style="color: #E36209">a</span><span style="color: #24292E">, </span><span style="color: #6F42C1">ll</span><span style="color: #24292E"> </span><span style="color: #E36209">b</span><span style="color: #24292E">, </span><span style="color: #6F42C1">ll</span><span style="color: #24292E"> </span><span style="color: #E36209">mod</span><span style="color: #24292E"> </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">9</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">7</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    ll res </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (; b; b </span><span style="color: #D73A49">&gt;&gt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (b </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            res </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">LL</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> res </span><span style="color: #D73A49">*</span><span style="color: #24292E"> a </span><span style="color: #D73A49">%</span><span style="color: #24292E"> mod;</span></span><span class="line"><span style="color: #24292E">        a </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">LL</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> a </span><span style="color: #D73A49">*</span><span style="color: #24292E"> a </span><span style="color: #D73A49">%</span><span style="color: #24292E"> mod;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> res;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    ll a, b, l;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> b </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> l;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    set</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">ll</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> ans;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> x </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; x </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">20</span><span style="color: #24292E">; x</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #6F42C1">qpow</span><span style="color: #24292E">(a, x) </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> l)</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">break</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> y </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; y </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">20</span><span style="color: #24292E">; y</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #6F42C1">qpow</span><span style="color: #24292E">(b, y) </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> l)</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">break</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">            ll z </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">qpow</span><span style="color: #24292E">(a, x) </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #6F42C1">qpow</span><span style="color: #24292E">(b, y);</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">%</span><span style="color: #24292E"> z </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                ans.</span><span style="color: #6F42C1">insert</span><span style="color: #24292E">(l </span><span style="color: #D73A49">/</span><span style="color: #24292E"> z);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">() </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="d">D</h2><h3 id="思路-3">思路</h3><p>已知，如果 <span class="math inline">\(a \lt b\)</span>，则 <spanclass="math inline">\(a\%b =a\)</span>。故我们可以将数组按升序排序。</p><p>如果最小值只有一个数，则从它开始往后取余最后的结果一定是他本身。</p><p>如果最小值不止一个，则遍历所有的数，对最小值取余。取余后的结果一定小于最小值。如果存在不为<span class="math inline">\(0\)</span> 的余数，则输出 <spanclass="math inline">\(YES\)</span>。</p><h3 id="code-3">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v</span><span style="color: #24292E">(n);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(v.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), v.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">());</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (v[</span><span style="color: #005CC5">0</span><span style="color: #24292E">] </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> v[</span><span style="color: #005CC5">1</span><span style="color: #24292E">])</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;YES</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> x : v)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">%</span><span style="color: #24292E"> v[</span><span style="color: #005CC5">0</span><span style="color: #24292E">] </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;YES</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;NO</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="e">E</h2><h3 id="思路-4">思路</h3><p>能力提高的值是一个首项为 <spanclass="math inline">\(u\)</span>，公差为 <spanclass="math inline">\(-1\)</span>，的等差数列的前 <spanclass="math inline">\(n\)</span> 项和，可知当 <spanclass="math inline">\(n = u\)</span> 或者 <span class="math inline">\(n= u + 1\)</span> 时取最大值。</p><p>通过前缀和的预处理加上二分搜索，我们可以快速找到最大值是在哪个赛道。由于懒得证明，采用遍历周围几个判断是否有别的情况。</p><h3 id="code-4">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #6F42C1">ll</span><span style="color: #24292E"> </span><span style="color: #6F42C1">get</span><span style="color: #24292E">(</span><span style="color: #6F42C1">ll</span><span style="color: #24292E"> </span><span style="color: #E36209">a1</span><span style="color: #24292E">, </span><span style="color: #6F42C1">ll</span><span style="color: #24292E"> </span><span style="color: #E36209">d</span><span style="color: #24292E">, </span><span style="color: #6F42C1">ll</span><span style="color: #24292E"> </span><span style="color: #E36209">n</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> n </span><span style="color: #D73A49">*</span><span style="color: #24292E"> a1 </span><span style="color: #D73A49">+</span><span style="color: #24292E"> n </span><span style="color: #D73A49">*</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">) </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> d;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">ll</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">partial_sum</span><span style="color: #24292E">(a.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), a.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">(), a.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">());</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> q;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (q</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> l, u;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> l </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> u;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a[l </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> u </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> a[n])</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> r </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lower_bound</span><span style="color: #24292E">(a.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), a.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">(), a[l </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> u) </span><span style="color: #D73A49">-</span><span style="color: #24292E"> a.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        ll ma </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">-0x</span><span style="color: #005CC5">3f3f3f3f3f3f3f3f</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> p </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(l, r </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">); p </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(r </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">, n); p</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">ans </span><span style="color: #D73A49">||</span><span style="color: #24292E"> </span><span style="color: #6F42C1">get</span><span style="color: #24292E">(u, </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">, a[p] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> a[l </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">]) </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> ma)</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> p;</span></span><span class="line"><span style="color: #24292E">                ma </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">get</span><span style="color: #24292E">(u, </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">, a[p] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> a[l </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">]);</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="f">F</h2><h3 id="思路-5">思路</h3><p>我们可以将石头看作是不动的，那么对于机器人每次有两种行动，向下走两步和向右下角走一步（还有原地不动，对移动没有贡献故不计）。终点每次会向下移动走一步。</p><p>通过 <span class="math inline">\(BFS\)</span>可以求出机器人到达最后一列的步数，此时答案即为步数加上机器人和终点<strong>当前位置</strong>的距离。</p><h3 id="code-5">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">struct</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x, y, cnt;</span></span><span class="line"><span style="color: #24292E">};</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">char</span><span style="color: #24292E"> mp[</span><span style="color: #005CC5">2010</span><span style="color: #24292E">][</span><span style="color: #005CC5">2010</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> px, py;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> mp[i][j];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    px </span><span style="color: #D73A49">=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, py </span><span style="color: #D73A49">=</span><span style="color: #24292E"> m </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    queue</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">node</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"><span style="color: #24292E">    q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({</span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">});</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;bool&gt;&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">vis</span><span style="color: #24292E">(n, </span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">bool</span><span style="color: #24292E">&gt;(m, </span><span style="color: #005CC5">false</span><span style="color: #24292E">));</span></span><span class="line"><span style="color: #24292E">    vis[</span><span style="color: #005CC5">0</span><span style="color: #24292E">][</span><span style="color: #005CC5">0</span><span style="color: #24292E">] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">0x</span><span style="color: #005CC5">3f3f3f3f</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">q.</span><span style="color: #6F42C1">empty</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">auto</span><span style="color: #24292E"> [x, y, cnt] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> q.</span><span style="color: #6F42C1">front</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">        q.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (y </span><span style="color: #D73A49">==</span><span style="color: #24292E"> py)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            px </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (px </span><span style="color: #D73A49">+</span><span style="color: #24292E"> cnt) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(px </span><span style="color: #D73A49">-</span><span style="color: #24292E"> x), </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(px </span><span style="color: #D73A49">-</span><span style="color: #24292E"> x)) </span><span style="color: #D73A49">+</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mp[(x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> n][y] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;0&#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> mp[(x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> n][y] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;0&#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> </span><span style="color: #D73A49">!</span><span style="color: #24292E">vis[(x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> n][y])</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            vis[(x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> n][y] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({(x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> n, y, cnt </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">});</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mp[(x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> n][y </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;0&#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> </span><span style="color: #D73A49">!</span><span style="color: #24292E">vis[(x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> n][y </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">])</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            vis[(x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> n][y </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({(x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> n, y </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, cnt </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">});</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>题解</category>
      
      <category>Codeforces</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>Codeforces</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2024 SZTU-ACM寒期集训阶段赛</title>
    <link href="/archives/3504666746/"/>
    <url>/archives/3504666746/</url>
    
    <content type="html"><![CDATA[<h2 id="写在前面">写在前面</h2><table><thead><tr><th style="text-align: center;">难度</th><th style="text-align: center;">题号</th></tr></thead><tbody><tr><td style="text-align: center;">签到</td><td style="text-align: center;"><span class="math inline">\(G\H\)</span></td></tr><tr><td style="text-align: center;">简单</td><td style="text-align: center;"><span class="math inline">\(F\J\)</span></td></tr><tr><td style="text-align: center;">中等</td><td style="text-align: center;"><span class="math inline">\(B\ C\ E\I\)</span></td></tr><tr><td style="text-align: center;">困难</td><td style="text-align: center;"><span class="math inline">\(A\D\)</span></td></tr></tbody></table><h2 id="a-又要迟到了">A 又要迟到了</h2><h3 id="考点">考点：</h3><ul><li>搜索</li><li>图论</li></ul><h3 id="题解">题解：</h3><blockquote><p>困难题</p></blockquote><h4 id="解法一两遍-bfs-onm-k">解法一：两遍 <spanclass="math inline">\(BFS\)</span> <span class="math inline">\(O(n*m +k)\)</span></h4><p>从起点开始做 <span class="math inline">\(BFS\)</span>记录从起点到每个位置只走路（每步时间为 <spanclass="math inline">\(t_1\)</span> ）的时间 <spanclass="math inline">\(t_{w}\)</span></p><p>从终点开始做 <span class="math inline">\(BFS\)</span>记录从终点到每个位置用单车（每步时间为 <spanclass="math inline">\(t_2\)</span> ）的时间 <spanclass="math inline">\(t_c\)</span></p><p>维护一个最小值 <span class="math inline">\(ans\)</span></p><p>遍历所有的单车的位置 <span class="math inline">\((i,j)\)</span>，此时 <span class="math inline">\(ans = min(ans,\ t_w[i][j] +t_c[i][j])\)</span></p><p>再额外判断一次如果不找单车，直接用走路的方式从起点到终点 <spanclass="math inline">\((i,j)\)</span> ，即 <spanclass="math inline">\(ans = min(ans,\ t_w[i][j])\)</span>​</p><p>如果 <span class="math inline">\(ans \le t\)</span>则输出结果，反之则不能按时到达</p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #D73A49">e</span><span style="color: #005CC5">3</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m, t, t1, t2;</span></span><span class="line"><span style="color: #24292E">pair</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;</span><span style="color: #24292E"> S, T;</span></span><span class="line"><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">pair</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;&gt;</span><span style="color: #24292E"> C;</span></span><span class="line"><span style="color: #D73A49">char</span><span style="color: #24292E"> mp[N][N];</span></span><span class="line"><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt;&gt; </span><span style="color: #6F42C1">t_w</span><span style="color: #24292E">(</span><span style="color: #6F42C1">N</span><span style="color: #24292E">, </span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt;(N, </span><span style="color: #D73A49">0x</span><span style="color: #005CC5">3f3f3f3f</span><span style="color: #24292E">));</span></span><span class="line"><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt;&gt; </span><span style="color: #6F42C1">t_c</span><span style="color: #24292E">(</span><span style="color: #6F42C1">N</span><span style="color: #24292E">, </span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt;(N, </span><span style="color: #D73A49">0x</span><span style="color: #005CC5">3f3f3f3f</span><span style="color: #24292E">));</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> dx[] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">};</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> dy[] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">};</span></span><span class="line"><span style="color: #D73A49">bool</span><span style="color: #24292E"> vis[N][N];</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">bfs</span><span style="color: #24292E">(</span><span style="color: #6F42C1">pair</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt; </span><span style="color: #E36209">PII</span><span style="color: #24292E">, </span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt;&gt; </span><span style="color: #D73A49">&amp;</span><span style="color: #E36209">t</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">dt</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">memset</span><span style="color: #24292E">(vis, </span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #D73A49">sizeof</span><span style="color: #24292E">(vis));</span></span><span class="line"><span style="color: #24292E">    queue</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">pair</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vis[PII.first][PII.second] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    t[PII.first][PII.second] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(</span><span style="color: #6F42C1">make_pair</span><span style="color: #24292E">(PII.first, PII.second));</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">q.</span><span style="color: #6F42C1">empty</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x </span><span style="color: #D73A49">=</span><span style="color: #24292E"> q.</span><span style="color: #6F42C1">front</span><span style="color: #24292E">().first;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> y </span><span style="color: #D73A49">=</span><span style="color: #24292E"> q.</span><span style="color: #6F42C1">front</span><span style="color: #24292E">().second;</span></span><span class="line"><span style="color: #24292E">        q.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">4</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> tx </span><span style="color: #D73A49">=</span><span style="color: #24292E"> x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> dx[i];</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ty </span><span style="color: #D73A49">=</span><span style="color: #24292E"> y </span><span style="color: #D73A49">+</span><span style="color: #24292E"> dy[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (tx </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> ty </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> tx </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">||</span><span style="color: #24292E"> ty </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">||</span><span style="color: #24292E"> vis[tx][ty] </span><span style="color: #D73A49">||</span><span style="color: #24292E"> mp[tx][ty] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;#&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">            vis[tx][ty] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            t[tx][ty] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> t[x][y] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> dt;</span></span><span class="line"><span style="color: #24292E">            q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(</span><span style="color: #6F42C1">make_pair</span><span style="color: #24292E">(tx, ty));</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t1 </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t2;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> mp[i][j];</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mp[i][j] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;S&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                S </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">make_pair</span><span style="color: #24292E">(i, j);</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mp[i][j] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;T&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                T </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">make_pair</span><span style="color: #24292E">(i, j);</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mp[i][j] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;C&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                C.</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">(</span><span style="color: #6F42C1">make_pair</span><span style="color: #24292E">(i, j));</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">bfs</span><span style="color: #24292E">(S, t_w, t1);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">bfs</span><span style="color: #24292E">(T, t_c, t2);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">0x</span><span style="color: #005CC5">3f3f3f3f</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> it : C)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> cx </span><span style="color: #D73A49">=</span><span style="color: #24292E"> it.first;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> cy </span><span style="color: #D73A49">=</span><span style="color: #24292E"> it.second;</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(ans, t_w[cx][cy] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> t_c[cx][cy]);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(ans, t_w[T.first][T.second]);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (ans </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> t)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;Oh no!&quot;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h4 id="解法二bfs优先队列-o2nm-log-nm">解法二：BFS+优先队列 <spanclass="math inline">\(O(2nm \log (nm))\)</span></h4><p>使用优先队列让最短时间在队首，时间相同的时候优先有车的。</p><p><span class="math inline">\(BFS\)</span>直到到达终点，此时的时间即为答案。若队列结束也没有到达终点则返回 <spanclass="math inline">\(-1\)</span></p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #D73A49">e</span><span style="color: #005CC5">3</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m, t, t1, t2;</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> sx, sy;</span></span><span class="line"><span style="color: #D73A49">char</span><span style="color: #24292E"> mp[N][N];</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> dx[] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">};</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> dy[] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">};</span></span><span class="line"><span style="color: #D73A49">bool</span><span style="color: #24292E"> vis[N][N][</span><span style="color: #005CC5">2</span><span style="color: #24292E">];</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">struct</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x, y, t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">bool</span><span style="color: #24292E"> flag;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">friend</span><span style="color: #24292E"> </span><span style="color: #D73A49">bool</span><span style="color: #24292E"> </span><span style="color: #D73A49">operator</span><span style="color: #6F42C1">&lt;</span><span style="color: #24292E">(</span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span><span style="color: #24292E"> </span><span style="color: #E36209">a</span><span style="color: #24292E">, </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span><span style="color: #24292E"> </span><span style="color: #E36209">b</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a.t </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> b.t)</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E"> a.t </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> b.t;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> a.flag </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> b.flag;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">};</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">bfs</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    priority_queue</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">node</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({sx, sy, </span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">});</span></span><span class="line"><span style="color: #24292E">    vis[sx][sy][</span><span style="color: #005CC5">0</span><span style="color: #24292E">] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">q.</span><span style="color: #6F42C1">empty</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        node now </span><span style="color: #D73A49">=</span><span style="color: #24292E"> q.</span><span style="color: #6F42C1">top</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x </span><span style="color: #D73A49">=</span><span style="color: #24292E"> now.x;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> y </span><span style="color: #D73A49">=</span><span style="color: #24292E"> now.y;</span></span><span class="line"><span style="color: #24292E">        q.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mp[x][y] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;T&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E"> now.t;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">4</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> tx </span><span style="color: #D73A49">=</span><span style="color: #24292E"> x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> dx[i];</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ty </span><span style="color: #D73A49">=</span><span style="color: #24292E"> y </span><span style="color: #D73A49">+</span><span style="color: #24292E"> dy[i];</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> tt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> now.t </span><span style="color: #D73A49">+</span><span style="color: #24292E"> (now.flag </span><span style="color: #D73A49">?</span><span style="color: #24292E"> t2 </span><span style="color: #D73A49">:</span><span style="color: #24292E"> t1);</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">bool</span><span style="color: #24292E"> flag </span><span style="color: #D73A49">=</span><span style="color: #24292E"> now.flag </span><span style="color: #D73A49">||</span><span style="color: #24292E"> mp[tx][ty] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;C&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (tx </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> ty </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> tx </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">||</span><span style="color: #24292E"> ty </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">||</span><span style="color: #24292E"> vis[tx][ty][flag] </span><span style="color: #D73A49">||</span><span style="color: #24292E"> mp[tx][ty] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;#&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">            vis[tx][ty][flag] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({tx, ty, tt, flag});</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t1 </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t2;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> mp[i][j];</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mp[i][j] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;S&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                sx </span><span style="color: #D73A49">=</span><span style="color: #24292E"> i, sy </span><span style="color: #D73A49">=</span><span style="color: #24292E"> j;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">bfs</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (ans </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;Oh no!&quot;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="b-最大生成树">B 最大生成树</h2><h3 id="考点-1">考点：</h3><ul><li>图论</li></ul><h3 id="题解-1">题解：</h3><blockquote><p>中等题</p></blockquote><p>最小生成树板子题，将比较时小的优先改为大的优先即可</p><p>复杂度： <span class="math inline">\(O(m \log m)\)</span></p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">struct</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Edge</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> u, v, w;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">bool</span><span style="color: #24292E"> </span><span style="color: #D73A49">operator</span><span style="color: #6F42C1">&lt;</span><span style="color: #24292E">(</span><span style="color: #6F42C1">Edge</span><span style="color: #24292E"> </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;</span><span style="color: #E36209">a</span><span style="color: #24292E">) </span><span style="color: #D73A49">const</span><span style="color: #24292E"> { </span><span style="color: #D73A49">return</span><span style="color: #24292E"> w </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> a.w; }</span></span><span class="line"><span style="color: #24292E">};</span></span><span class="line"></span><span class="line"><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> fa;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">find</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">) { </span><span style="color: #D73A49">return</span><span style="color: #24292E"> fa[x] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> x </span><span style="color: #D73A49">?</span><span style="color: #24292E"> x </span><span style="color: #D73A49">:</span><span style="color: #24292E"> fa[x] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">find</span><span style="color: #24292E">(fa[x]); }</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m;</span></span><span class="line"><span style="color: #24292E">    fa.</span><span style="color: #6F42C1">resize</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        fa[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> i;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    priority_queue</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">Edge</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> e;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> u, v, w;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> u </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> w;</span></span><span class="line"><span style="color: #24292E">        e.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({u, v, w});</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">e.</span><span style="color: #6F42C1">empty</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">auto</span><span style="color: #24292E"> [u, v, w] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> e.</span><span style="color: #6F42C1">top</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">        e.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> fu </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">find</span><span style="color: #24292E">(u), fv </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">find</span><span style="color: #24292E">(v);</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (fu </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> fv)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            fa[fu] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> fv;</span></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> w;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="c-最短路">C 最短路</h2><h3 id="考点-2">考点：</h3><ul><li>图论</li></ul><h3 id="题解-2">题解：</h3><blockquote><p>中等题</p></blockquote><p>通过 <span class="math inline">\(floyd\)</span>​将全源最短路都找出来，最后判断这条边是否可以被另一条最短路替代，计数即可。</p><p>复杂度： <span class="math inline">\(O(n^3)\)</span></p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">struct</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Edge</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> u, v, w;</span></span><span class="line"><span style="color: #24292E">};</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;int&gt;&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">dis</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt;(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #D73A49">0x</span><span style="color: #005CC5">3f3f3f3f</span><span style="color: #24292E">));</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">Edge</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">e</span><span style="color: #24292E">(m);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> e[i].u </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> e[i].v </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> e[i].w;</span></span><span class="line"><span style="color: #24292E">        dis[e[i].u][e[i].v] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> dis[e[i].v][e[i].u] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> e[i].w;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> k </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; k </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; k</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> u </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; u </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; u</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> v </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; v </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; v</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                dis[u][v] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(dis[u][v], dis[u][k] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> dis[k][v]);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> [u, v, w] : e)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">bool</span><span style="color: #24292E"> flag </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> k </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; k </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; k</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (dis[u][k] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> dis[k][v] </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> w)</span></span><span class="line"><span style="color: #24292E">                flag </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> flag;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="d-相撞的房子">D 相撞的房子</h2><h3 id="考点-3">考点：</h3><ul><li>树状数组</li></ul><h3 id="题解-3">题解：</h3><blockquote><p>困难题</p></blockquote><p>本题可以理解为两个一维数组（行和列）进行单点修改和区间求和，很明显是树状数组的板子题，不过还需要进行一些分析。</p><p>以题目的样例为例，先以 <span class="math inline">\((2,2)\)</span>​为中心向东南西北建房子</p><figure class="shiki text"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292e">o x o o</span></span><span class="line"><span style="color: #24292e">x o x x</span></span><span class="line"><span style="color: #24292e">o x o o</span></span><span class="line"><span style="color: #24292e">o x o o</span></span></code></pre></div></div></figure><p>再以 <span class="math inline">\((4,4)\)</span>​为中心向东南西北建房子</p><figure class="shiki text"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #24292e">o x o x</span></span><span class="line"><span style="color: #24292e">x o x o</span></span><span class="line"><span style="color: #24292e">o x o x</span></span><span class="line"><span style="color: #24292e">x o x o</span></span></code></pre></div></div></figure><p>我们可以得到房子的数量应该是：</p><p><strong>放过的行数×m + 放过的列数×n − 抵消块数</strong></p><p>放过的行数和列数用树状数组来维护即可</p><p>而抵消的块数该怎么讨论呢？</p><p>在算行列的时候，每一个交叉点是记了两次的。图中有多少交叉点呢？记放过的行数为<span class="math inline">\(x\)</span>，放过的列数为 <spanclass="math inline">\(y\)</span>，每行每列交叉一个，抵消的块数就是 <spanclass="math inline">\(2xy\)</span>​。</p><p>所以现在只需要求出 <span class="math inline">\(x,y\)</span>​就可以了</p><p>如果放在的行和列是已经放过的那就会变为没房子状态，如果要放的行和列没房子，那就会变成有房子状态，相当于异或操作。</p><p>复杂度： <span class="math inline">\(O(q\log n)\)</span></p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">ll</span><span style="color: #24292E"> long long</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> maxn </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> ax[maxn], ay[maxn];</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> dx[maxn], dy[maxn];</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m, q;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lowbit</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">i</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> i </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> (</span><span style="color: #D73A49">-</span><span style="color: #24292E">i);</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">update</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">c</span><span style="color: #24292E">[], </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">len</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">add</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> x; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> len; i </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lowbit</span><span style="color: #24292E">(i))</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        c[i] </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> add;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #6F42C1">ll</span><span style="color: #24292E"> </span><span style="color: #6F42C1">query</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">c</span><span style="color: #24292E">[], </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    ll sum </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> x; i; i </span><span style="color: #D73A49">-=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lowbit</span><span style="color: #24292E">(i))</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        sum </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> c[i];</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> sum;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">y</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (ax[x] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">update</span><span style="color: #24292E">(dx, n, x, </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">update</span><span style="color: #24292E">(dx, n, x, </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    ax[x] </span><span style="color: #D73A49">^=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (ay[y] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">update</span><span style="color: #24292E">(dy, m, y, </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">update</span><span style="color: #24292E">(dy, m, y, </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    ay[y] </span><span style="color: #D73A49">^=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #6F42C1">ll</span><span style="color: #24292E"> </span><span style="color: #6F42C1">work</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x1</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">y1</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x2</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">y2</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    ll s1 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">query</span><span style="color: #24292E">(dx, x2) </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #6F42C1">query</span><span style="color: #24292E">(dx, x1 </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    ll s2 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">query</span><span style="color: #24292E">(dy, y2) </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #6F42C1">query</span><span style="color: #24292E">(dy, y1 </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">LL</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> s1 </span><span style="color: #D73A49">*</span><span style="color: #24292E"> (y2 </span><span style="color: #D73A49">-</span><span style="color: #24292E"> y1 </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">) </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">LL</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> s2 </span><span style="color: #D73A49">*</span><span style="color: #24292E"> (x2 </span><span style="color: #D73A49">-</span><span style="color: #24292E"> x1 </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">) </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">LL</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> s1 </span><span style="color: #D73A49">*</span><span style="color: #24292E"> s2;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cout.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (q</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> op;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> op;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (op </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x, y;</span></span><span class="line"><span style="color: #24292E">            cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> y;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">(x, y);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x1, y1, x2, y2;</span></span><span class="line"><span style="color: #24292E">            cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x1 </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> y1 </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x2 </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> y2;</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">work</span><span style="color: #24292E">(x1, y1, x2, y2) </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="e-动感超人">E 动感超人</h2><h3 id="考点-4">考点：</h3><ul><li>背包问题</li></ul><h3 id="题解-4">题解：</h3><blockquote><p>中等题</p></blockquote><p>这题可以用背包的思路来做；首先，设<spanclass="math inline">\(dp[j]\)</span>表示运 <spanclass="math inline">\(j\)</span> 只玩具回家的最小时间，<spanclass="math inline">\(tim[i]\)</span> 表示一次性运 <spanclass="math inline">\(i\)</span>只玩具回家的时间，那么状态转移方程就是：<spanclass="math inline">\(dp[j] = min(dp[j],dp[j-i]+tim[i])\)</span>,最后输出 <span class="math inline">\(dp[n]\)</span></p><p><span class="math inline">\(tim[i]\)</span>的计算我们运用前缀和，由于每一次都要加上从家到商场的时间，所以我们在第一项<span class="math inline">\(tim[1]\)</span> 加上 <spanclass="math inline">\(2m\)</span> ,最后输出的时候再减去 <spanclass="math inline">\(m\)</span>​，因为最后一次不用从家到商场</p><p>复杂度： <span class="math inline">\(O(n^2)\)</span></p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">ll</span><span style="color: #24292E"> long long int</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> maxn </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> inf </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">9</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m, w[maxn], tim[maxn], dp[maxn];</span><span style="color: #6A737D">//dp 表示运完 j只所需要的最短时间</span></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">     cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m;</span></span><span class="line"><span style="color: #24292E">     </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; </span><span style="color: #D73A49">++</span><span style="color: #24292E">i)</span></span><span class="line"><span style="color: #24292E">     {</span></span><span class="line"><span style="color: #24292E">          dp[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> inf;</span></span><span class="line"><span style="color: #24292E">          cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> w[i];</span></span><span class="line"><span style="color: #24292E">          tim[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> w[i] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> tim[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #24292E">          </span><span style="color: #D73A49">if</span><span style="color: #24292E">(i</span><span style="color: #D73A49">==</span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">          {</span></span><span class="line"><span style="color: #24292E">               tim[i] </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> m;</span></span><span class="line"><span style="color: #24292E">          }</span></span><span class="line"><span style="color: #24292E">     }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">     </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; </span><span style="color: #D73A49">++</span><span style="color: #24292E">i)</span><span style="color: #6A737D">//一次性运几只</span></span><span class="line"><span style="color: #24292E">     {</span></span><span class="line"><span style="color: #24292E">          </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> i; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; </span><span style="color: #D73A49">++</span><span style="color: #24292E">j)</span></span><span class="line"><span style="color: #24292E">          {</span></span><span class="line"><span style="color: #24292E">               dp[j] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(dp[j], dp[j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> i] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> tim[i]);</span></span><span class="line"><span style="color: #24292E">          }</span></span><span class="line"><span style="color: #24292E">     }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">     cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> dp[n] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> m </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #6A737D">     // std::ios::sync_with_stdio(false);</span></span><span class="line"><span style="color: #6A737D">     // cin.tie(0);</span></span><span class="line"><span style="color: #6A737D">     // cout.tie(0);</span></span><span class="line"><span style="color: #24292E">     </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">     </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="f-01矩阵">F 01矩阵</h2><h3 id="考点-5">考点：</h3><ul><li>前缀和</li><li>二分</li></ul><h3 id="题解-5">题解：</h3><blockquote><p>简单题</p></blockquote><p>通过二维前缀和快速查询矩形内 <span class="math inline">\(1\)</span>的个数。用二分答案确认边长。</p><p>复杂度 <span class="math inline">\(O(n^2\log n)\)</span></p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;int&gt;&gt;</span><span style="color: #24292E"> a;</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">bool</span><span style="color: #24292E"> </span><span style="color: #6F42C1">check</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> x; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> x; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a[i][j] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> a[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> x][j] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> a[i][j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> x] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> a[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> x][j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> x] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> x </span><span style="color: #D73A49">*</span><span style="color: #24292E"> x)</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    a.</span><span style="color: #6F42C1">resize</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt;(m </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">));</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i][j];</span></span><span class="line"><span style="color: #24292E">            a[i][j] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a[i][j] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> a[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">][j] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> a[i][j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> a[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">][j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> l </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">, r </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(n, m), ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> r)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mid </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">+</span><span style="color: #24292E"> r) </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #6F42C1">check</span><span style="color: #24292E">(mid))</span></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> mid, l </span><span style="color: #D73A49">=</span><span style="color: #24292E"> mid </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">            r </span><span style="color: #D73A49">=</span><span style="color: #24292E"> mid </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="g-简单问题">G 简单问题</h2><h3 id="考点-6">考点：</h3><ul><li>排序</li></ul><h3 id="题解-6">题解：</h3><blockquote><p>签到题</p></blockquote><p>一个数如果是 <span class="math inline">\(3\)</span>的倍数，那么它每个位上的数之和也是 <spanclass="math inline">\(3\)</span> 的倍数。</p><p>判断是不是 <span class="math inline">\(3\)</span> 的倍数后，可以用<span class="math inline">\(O(n\log n)\)</span>的排序或者计数排序将卡片降序排序即可。</p><p>复杂度： <span class="math inline">\(O(n\log n)\)</span></p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    string s;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> s;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        t </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> s[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;0&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (t </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">3</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(s.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), s.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">(), </span><span style="color: #6F42C1">greater</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">char</span><span style="color: #24292E">&gt;());</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> s;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="h-回文串">H 回文串</h2><h3 id="考点-7">考点：</h3><ul><li>基础语法</li></ul><h3 id="题解-7">题解：</h3><blockquote><p>签到题</p></blockquote><p>从两边开始一一比较。</p><p>如果两边都不是 <span class="math inline">\(?\)</span>且这两个位置的字母不同，则这个字符串不可能是回文串。</p><p>如果两边都是 <span class="math inline">\(?\)</span> 则有 <spanclass="math inline">\(26\)</span> 种可能。</p><p>如果只有一个 <span class="math inline">\(?\)</span> 则只有 <spanclass="math inline">\(1\)</span> 种可能。</p><p>复杂度： <span class="math inline">\(O(n)\)</span></p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">9</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">7</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    string s;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> s;</span></span><span class="line"><span style="color: #24292E">    ll ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">, j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">() </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> j; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">, j</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (s[i] </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> s[j] </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> s[i] </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;?&#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> s[j] </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;?&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (s[i] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;?&#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> s[j] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;?&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (ans </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">26</span><span style="color: #24292E">) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> mod;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="i-apple-catching-g">I Apple Catching G</h2><h3 id="考点-8">考点：</h3><ul><li>记忆化搜索</li></ul><h3 id="题解-8">题解：</h3><blockquote><p>中等题</p></blockquote><p>可以发现，每⼀时刻前，都可以移动，所以，每⼀时刻前往后，设</p><ul><li><span class="math inline">\(n_1\)</span> =(移动，移动之后，当前时刻能吃到的苹果 + 往后时刻能吃到的苹果)</li><li><span class="math inline">\(n_2\)</span> =(不移动，之后，在当前时刻能吃到的苹果 + 往后时刻能吃到的苹果)</li></ul><p>当前可以吃到的苹果的数量都等于 <spanclass="math inline">\(max(n_1,n_2)\)</span>，发现状态减少，可以⽤记忆化搜索递归下去（或者⽤<span class="math inline">\(dp\)</span>）</p><p>复杂度： <span class="math inline">\(O(NW)\)</span></p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max_len</span><span style="color: #24292E"> 1010</span></span><span class="line"><span style="color: #6A737D">// 苹果掉落的位置</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> apple_location[max_len];</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> N;</span></span><span class="line"><span style="color: #6A737D">// 记忆化数组</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> save_data[max_len][</span><span style="color: #005CC5">2</span><span style="color: #24292E">][</span><span style="color: #005CC5">40</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #D73A49">bool</span><span style="color: #24292E"> is_visit[max_len][</span><span style="color: #005CC5">2</span><span style="color: #24292E">][</span><span style="color: #005CC5">40</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">get_max</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">now_i</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">now_in</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">can_move</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (now_i </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> N)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (is_visit[now_i][now_in][can_move] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E"> save_data[now_i][now_in][can_move];</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> can_get </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        can_get </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (apple_location[now_i] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> now_in) </span><span style="color: #D73A49">+</span></span><span class="line"><span style="color: #24292E">                  </span><span style="color: #6F42C1">get_max</span><span style="color: #24292E">(now_i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, now_in, can_move);</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (can_move </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            can_get </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(can_get, (apple_location[now_i] </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> now_in) </span><span style="color: #D73A49">+</span></span><span class="line"><span style="color: #24292E">                                       </span><span style="color: #6F42C1">get_max</span><span style="color: #24292E">(now_i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #D73A49">!</span><span style="color: #24292E">now_in, can_move </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">));</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        save_data[now_i][now_in][can_move] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> can_get;</span></span><span class="line"><span style="color: #24292E">        is_visit[now_i][now_in][can_move] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> can_get;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> W;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> N </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> W;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> N; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> apple_location[i];</span></span><span class="line"><span style="color: #6A737D">        // 使位置变为0和1，下个位置可用!操作</span></span><span class="line"><span style="color: #24292E">        apple_location[i]</span><span style="color: #D73A49">--</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">get_max</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">, W) </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="j-xor">J Xor</h2><h3 id="考点-9">考点：</h3><ul><li>位运算</li></ul><h3 id="题解-9">题解：</h3><blockquote><p>简单题</p></blockquote><h3 id="解法一暴力-o63-q">解法一：暴力 <span class="math inline">\(O(63* q)\)</span></h3><p>按照题意对每次操作对每一位进行异或</p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    ll x, q;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (q</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> l, r;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> l </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> r;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        ll p </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> l; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> r; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            x </span><span style="color: #D73A49">^=</span><span style="color: #24292E"> p </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> i;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h3 id="解法二差分-oq">解法二：差分 <spanclass="math inline">\(O(q)\)</span>​</h3><p>通过异或偶数次会还原的性质，差分后如果前缀和数组里是奇数则这位置需要异或。</p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    ll x, q;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(</span><span style="color: #005CC5">64</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (q</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> l, r;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> l </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> r;</span></span><span class="line"><span style="color: #24292E">        a[l]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        a[r </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">]</span><span style="color: #D73A49">--</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">partial_sum</span><span style="color: #24292E">(a.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), a.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">(), a.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">());</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">63</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a[i] </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            x </span><span style="color: #D73A49">^=</span><span style="color: #24292E"> (</span><span style="color: #005CC5">1</span><span style="color: #D73A49">LL</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> i);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>题解</category>
      
      <category>SZTU_ACM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>SZTU_ACM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SZTU_ACM2024寒期集训训练赛-基础组第二场</title>
    <link href="/archives/2254342841/"/>
    <url>/archives/2254342841/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="https://vjudge.net/contest/605921">寒期集训-基础组第二场</a></li></ul><h2 id="a---not-shading-codeforces---1627a">A - Not Shading <ahref="https://vjudge.net/problem/CodeForces-1627A/origin">CodeForces -1627A</a></h2><h3 id="思路">思路</h3><p>分类讨论</p><ul><li>如果目标格已经是黑色，直接输出 <spanclass="math inline">\(0\)</span></li><li>如果目标格的同行或者同列是黑色，输出 <spanclass="math inline">\(1\)</span></li><li>如果存在黑色格子，输出 <span class="math inline">\(2\)</span></li><li>其他则为 <span class="math inline">\(-1\)</span></li></ul><h3 id="code">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">char</span><span style="color: #24292E"> mp[</span><span style="color: #005CC5">111</span><span style="color: #24292E">][</span><span style="color: #005CC5">111</span><span style="color: #24292E">];</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m, x, y;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> y;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> mp[i][j];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mp[x][y] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;B&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> k </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; k </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; k</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mp[k][y] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;B&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> k </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; k </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> m; k</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mp[x][k] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;B&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mp[i][j] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;B&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="b---转圈游戏-洛谷---p1965">B - 转圈游戏 <ahref="https://vjudge.net/problem/%E6%B4%9B%E8%B0%B7-P1965/origin">洛谷 -P1965</a></h2><h3 id="思路-1">思路</h3><p>快速幂，如果求移动了多少位后对 <span class="math inline">\(n\)</span>取模，即求 <span class="math inline">\((x+m*10^k)\%n\)</span></p><h3 id="code-1">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">qpow</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">a</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">b</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">mod</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> res </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (; b; b </span><span style="color: #D73A49">&gt;&gt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (b </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            res </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">LL</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> res </span><span style="color: #D73A49">*</span><span style="color: #24292E"> a </span><span style="color: #D73A49">%</span><span style="color: #24292E"> mod;</span></span><span class="line"><span style="color: #24292E">        a </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">LL</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> a </span><span style="color: #D73A49">*</span><span style="color: #24292E"> a </span><span style="color: #D73A49">%</span><span style="color: #24292E"> mod;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> res;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m, k, x;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> k </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">LL</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> m </span><span style="color: #D73A49">*</span><span style="color: #24292E"> (</span><span style="color: #6F42C1">qpow</span><span style="color: #24292E">(</span><span style="color: #005CC5">10</span><span style="color: #24292E">, k, n) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> n) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> n) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="c---broken-rounding-atcoder---abc273_b">C - Broken Rounding <ahref="https://vjudge.net/problem/AtCoder-abc273_b/origin">AtCoder -abc273_b</a></h2><h3 id="思路-2">思路</h3><p>从个位开始，向高位四舍五入直到第 <spanclass="math inline">\(k\)</span> 位</p><h3 id="code-2">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    ll x;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> k;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> k;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    ll t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> k; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        t </span><span style="color: #D73A49">*=</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">%</span><span style="color: #24292E"> t </span><span style="color: #D73A49">/</span><span style="color: #24292E"> (t </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">) </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">5</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            x </span><span style="color: #D73A49">=</span><span style="color: #24292E"> x </span><span style="color: #D73A49">-</span><span style="color: #24292E"> x </span><span style="color: #D73A49">%</span><span style="color: #24292E"> t </span><span style="color: #D73A49">+</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">            x </span><span style="color: #D73A49">=</span><span style="color: #24292E"> x </span><span style="color: #D73A49">-</span><span style="color: #24292E"> x </span><span style="color: #D73A49">%</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="d---营救-洛谷---p1396">D - 营救 <ahref="https://vjudge.net/problem/%E6%B4%9B%E8%B0%B7-P1396/origin">洛谷 -P1396</a></h2><h3 id="思路-3">思路</h3><p>最小生成树，当 <span class="math inline">\(s\)</span> 和 <spanclass="math inline">\(t\)</span> 联通时即为答案</p><h3 id="code-3">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">struct</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Edge</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> u, v, w;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">bool</span><span style="color: #24292E"> </span><span style="color: #D73A49">operator</span><span style="color: #6F42C1">&lt;</span><span style="color: #24292E">(</span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Edge</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;</span><span style="color: #E36209">e</span><span style="color: #24292E">) </span><span style="color: #D73A49">const</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> w </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> e.w;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">};</span></span><span class="line"></span><span class="line"><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> fa;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">find</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">) { </span><span style="color: #D73A49">return</span><span style="color: #24292E"> x </span><span style="color: #D73A49">==</span><span style="color: #24292E"> fa[x] </span><span style="color: #D73A49">?</span><span style="color: #24292E"> x </span><span style="color: #D73A49">:</span><span style="color: #24292E"> fa[x] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">find</span><span style="color: #24292E">(fa[x]); }</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m, s, t;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> s </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    fa.</span><span style="color: #6F42C1">resize</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">iota</span><span style="color: #24292E">(fa.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), fa.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">(), </span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    priority_queue</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">Edge</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> pq;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (m</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> u, v, w;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> u </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> w;</span></span><span class="line"><span style="color: #24292E">        pq.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({u, v, w});</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">pq.</span><span style="color: #6F42C1">empty</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        Edge e </span><span style="color: #D73A49">=</span><span style="color: #24292E"> pq.</span><span style="color: #6F42C1">top</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">        pq.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> fu </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">find</span><span style="color: #24292E">(e.u), fv </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">find</span><span style="color: #24292E">(e.v);</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (fu </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> fv)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            fa[fu] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> fv;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #6F42C1">find</span><span style="color: #24292E">(s) </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #6F42C1">find</span><span style="color: #24292E">(t))</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> e.w </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="e---welcome-to-atcoder-atcoder---abc151_c">E - Welcome toAtCoder <ahref="https://vjudge.net/problem/AtCoder-abc151_c/origin">AtCoder -abc151_c</a></h2><h3 id="思路-4">思路</h3><p>记录题目有没有 <span class="math inline">\(AC\)</span> 过，如果没<span class="math inline">\(AC\)</span> 过就累加 <spanclass="math inline">\(WA\)</span>的次数，最后遍历所有的题目，累加结果即可</p><h3 id="code-4">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">ac</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">), </span><span style="color: #6F42C1">wa</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (m</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> p;</span></span><span class="line"><span style="color: #24292E">        string s;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> p </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> s;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (s </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;AC&quot;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            ac[p] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">ac[p])</span></span><span class="line"><span style="color: #24292E">            wa[p]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ac_cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">, wa_cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (ac[i])</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            ac_cnt</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            wa_cnt </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> wa[i];</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ac_cnt </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> wa_cnt </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="f---摄像头-洛谷---p2712">F - 摄像头 <ahref="https://vjudge.net/problem/%E6%B4%9B%E8%B0%B7-P2712/origin">洛谷 -P2712</a></h2><h3 id="思路-5">思路</h3><p>拓扑排序，记录这个摄像头有没有出现过，监视着哪些摄像头和被多少摄像头监视。</p><p>然后拓扑排序，入度为零且出现过的摄像头进队。</p><h3 id="code-5">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">in</span><span style="color: #24292E">(</span><span style="color: #005CC5">555</span><span style="color: #24292E">), </span><span style="color: #6F42C1">out</span><span style="color: #24292E">(</span><span style="color: #005CC5">555</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;int&gt;&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">g</span><span style="color: #24292E">(</span><span style="color: #005CC5">555</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> u, k;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> u </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> k;</span></span><span class="line"><span style="color: #24292E">        out[u] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (k</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> v;</span></span><span class="line"><span style="color: #24292E">            cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v;</span></span><span class="line"><span style="color: #24292E">            in[v]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            g[u].</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">(v);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    queue</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">500</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">in[i] </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> out[i])</span></span><span class="line"><span style="color: #24292E">            q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(i);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">q.</span><span style="color: #6F42C1">empty</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> u </span><span style="color: #D73A49">=</span><span style="color: #24292E"> q.</span><span style="color: #6F42C1">front</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">        q.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">        cnt</span><span style="color: #D73A49">--</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> v : g[u])</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            in[v]</span><span style="color: #D73A49">--</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">in[v] </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> out[v])</span></span><span class="line"><span style="color: #24292E">                q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(v);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (cnt </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;YES&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> cnt;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>题解</category>
      
      <category>SZTU_ACM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>SZTU_ACM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SZTU_ACM2024寒期集训训练赛-基础组第一场</title>
    <link href="/archives/1127881834/"/>
    <url>/archives/1127881834/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="https://vjudge.net/contest/605450">寒期集训-基础组第一场</a></li></ul><h2 id="a---atcoder-cards-atcoder---abc301_c">A - AtCoder Cards <ahref="https://vjudge.net/problem/AtCoder-abc301_c/origin">AtCoder -abc301_c</a></h2><h3 id="思路">思路</h3><p>记录两个字符串每个字符出现的次数。如果非 <spanclass="math inline">\(@,\ a,\ t,\ c,\ o,\ d,\ e,\ r\)</span>字符出现次数不同直接为不可以。</p><p>对比 <span class="math inline">\(a,\ t,\ c,\ o,\ d,\ e,\ r\)</span>字符的出现差多少个，如果比 <span class="math inline">\(@\)</span>多则不可以，反之则可以。</p><h3 id="code">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    string s, t;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> s </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(</span><span style="color: #005CC5">200</span><span style="color: #24292E">), </span><span style="color: #6F42C1">b</span><span style="color: #24292E">(</span><span style="color: #005CC5">200</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">i : s)</span></span><span class="line"><span style="color: #24292E">        a[i]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">i : t)</span></span><span class="line"><span style="color: #24292E">        b[i]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> num </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a[</span><span style="color: #032F62">&#39;@&#39;</span><span style="color: #24292E">] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> b[</span><span style="color: #032F62">&#39;@&#39;</span><span style="color: #24292E">];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">200</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (i </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;@&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a[i] </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> b[i])</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            string tmp </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;atcoder&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (tmp.</span><span style="color: #6F42C1">find</span><span style="color: #24292E">(i) </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #6F42C1">string</span><span style="color: #24292E">::npos)</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;No&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                num </span><span style="color: #D73A49">-=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> b[i]);</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (num </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;Yes&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;No&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="b---perket-洛谷---p2036">B - PERKET <ahref="https://vjudge.net/problem/%E6%B4%9B%E8%B0%B7-P2036/origin">洛谷 -P2036</a></h2><h3 id="思路一">思路一</h3><p>深度优先搜索，判断所有的选择情况。每次有选和不选两种操作，分别搜索下去。当深度为<span class="math inline">\(n\)</span>的时候判断此时的酸度和苦度的绝对差，记录最小值即可。</p><h3 id="code-1">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> acid, bitter;</span></span><span class="line"><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;bool&gt;</span><span style="color: #24292E"> st;</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> n, ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">0x</span><span style="color: #005CC5">3f3f3f3f</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">bool</span><span style="color: #24292E"> flag </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">dfs</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> n)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> sum1 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, sum2 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (st[i])</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                flag </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">                sum1 </span><span style="color: #D73A49">*=</span><span style="color: #24292E"> acid[i];</span></span><span class="line"><span style="color: #24292E">                sum2 </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> bitter[i];</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (flag)</span></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(ans, </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(sum1 </span><span style="color: #D73A49">-</span><span style="color: #24292E"> sum2));</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">dfs</span><span style="color: #24292E">(x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    st[x] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">dfs</span><span style="color: #24292E">(x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    st[x] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    acid.</span><span style="color: #6F42C1">resize</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    bitter.</span><span style="color: #6F42C1">resize</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    st.</span><span style="color: #6F42C1">resize</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> acid[i] </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> bitter[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">dfs</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h3 id="思路二">思路二</h3><p>因为只有选和不选两种情况，且 <span class="math inline">\(n \le10\)</span> 那么可以用二进制数表示。 <spanclass="math inline">\(1\)</span> 为选了， <spanclass="math inline">\(0\)</span> 为没选</p><h3 id="code-2">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> n, ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">0x</span><span style="color: #005CC5">3f3f3f3f</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">acid</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">), </span><span style="color: #6F42C1">bitter</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> acid[i] </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> bitter[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (ll i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> (</span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> n); i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        ll t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> i;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> a </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, b </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">, p </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (t </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                a </span><span style="color: #D73A49">*=</span><span style="color: #24292E"> acid[p];</span></span><span class="line"><span style="color: #24292E">                b </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> bitter[p];</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">            t </span><span style="color: #D73A49">&gt;&gt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            p</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(ans, </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a </span><span style="color: #D73A49">-</span><span style="color: #24292E"> b));</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="c---merge-sequences-atcoder---abc294_c">C - Merge Sequences <ahref="https://vjudge.net/problem/AtCoder-abc294_c/origin">AtCoder -abc294_c</a></h2><h3 id="思路-1">思路</h3><p>将两个序列合并后排序，然后二分查找下标即可</p><h3 id="code-3">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n), </span><span style="color: #6F42C1">b</span><span style="color: #24292E">(m);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> b[j];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a;</span></span><span class="line"><span style="color: #24292E">    t.</span><span style="color: #6F42C1">insert</span><span style="color: #24292E">(t.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">(), b.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), b.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">());</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(t.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), t.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">());</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lower_bound</span><span style="color: #24292E">(t.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), t.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">(), a[i]) </span><span style="color: #D73A49">-</span><span style="color: #24292E"> t.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">() </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lower_bound</span><span style="color: #24292E">(t.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), t.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">(), b[i]) </span><span style="color: #D73A49">-</span><span style="color: #24292E"> t.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">() </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="d---call-the-id-number-atcoder---abc293_b">D - Call the IDNumber <ahref="https://vjudge.net/problem/AtCoder-abc293_b/origin">AtCoder -abc293_b</a></h2><h3 id="思路-2">思路</h3><p>模拟过程，记录谁没被叫过即可。</p><h3 id="code-4">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;bool&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">vis</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">vis[i])</span></span><span class="line"><span style="color: #24292E">            vis[a[i]] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> ans;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">vis[i])</span></span><span class="line"><span style="color: #24292E">            ans.</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">(i);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">() </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> i : ans)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> i </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="e---k-swap-atcoder---abc254_c">E - K Swap <ahref="https://vjudge.net/problem/AtCoder-abc254_c/origin">AtCoder -abc254_c</a></h2><h3 id="思路-3">思路</h3><p>模拟过程，将每组排完序放回序列，判断最终序列是否满足严格升序</p><h3 id="code-5">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, k;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> k;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> k; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> tmp;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> i; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; j </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> k)</span></span><span class="line"><span style="color: #24292E">            tmp.</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">(a[j]);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(tmp.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), tmp.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">(), </span><span style="color: #6F42C1">greater</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt;());</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> i; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; j </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> k)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            a[j] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> tmp.</span><span style="color: #6F42C1">back</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">            tmp.</span><span style="color: #6F42C1">pop_back</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a[i] </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> a[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">])</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;No&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;Yes&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="f---01迷宫-洛谷---p1141">F - 01迷宫 <ahref="https://vjudge.net/problem/%E6%B4%9B%E8%B0%B7-P1141/origin">洛谷 -P1141</a></h2><h3 id="思路-4">思路</h3><p><span class="math inline">\(BFS\)</span>判断一个格子可以去到哪些格子，给这些点一个相同的编号，然后再从另一个没有编号的格子开始搜索，直到所有的格子都有编号，记录每个编号多少个格子。</p><p>最后通过查询编号对应的格子数即可得到结果</p><h3 id="code-6">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">char</span><span style="color: #24292E"> mp[</span><span style="color: #005CC5">1111</span><span style="color: #24292E">][</span><span style="color: #005CC5">1111</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> vis[</span><span style="color: #005CC5">1111</span><span style="color: #24292E">][</span><span style="color: #005CC5">1111</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> dx[] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">}, dy[] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">};</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">bfs</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">y</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">id</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    queue</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">pair</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"><span style="color: #24292E">    q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({x, y});</span></span><span class="line"><span style="color: #24292E">    vis[x][y] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> id;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">q.</span><span style="color: #6F42C1">empty</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x </span><span style="color: #D73A49">=</span><span style="color: #24292E"> q.</span><span style="color: #6F42C1">front</span><span style="color: #24292E">().first, y </span><span style="color: #D73A49">=</span><span style="color: #24292E"> q.</span><span style="color: #6F42C1">front</span><span style="color: #24292E">().second;</span></span><span class="line"><span style="color: #24292E">        q.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">        cnt</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">4</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> nx </span><span style="color: #D73A49">=</span><span style="color: #24292E"> x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> dx[i], ny </span><span style="color: #D73A49">=</span><span style="color: #24292E"> y </span><span style="color: #D73A49">+</span><span style="color: #24292E"> dy[i];</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (nx </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> ny </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> nx </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">||</span><span style="color: #24292E"> ny </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">||</span><span style="color: #24292E"> vis[nx][ny] </span><span style="color: #D73A49">||</span><span style="color: #24292E"> mp[nx][ny] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> mp[x][y])</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            vis[nx][ny] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> id;</span></span><span class="line"><span style="color: #24292E">            q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({nx, ny});</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> cnt;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> mp[i][j];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">ans</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> id </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">vis[i][j])</span></span><span class="line"><span style="color: #24292E">                ans.</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">(</span><span style="color: #6F42C1">bfs</span><span style="color: #24292E">(i, j, id</span><span style="color: #D73A49">++</span><span style="color: #24292E">));</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (m</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x, y;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> y;</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans[vis[x][y]] </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>题解</category>
      
      <category>SZTU_ACM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>SZTU_ACM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Codeforces Round 920 (Div. 3)</title>
    <link href="/archives/115728041/"/>
    <url>/archives/115728041/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="https://codeforces.com/contest/1921">Codeforces Round 920(Div. 3)</a></li></ul><h2 id="a">A</h2><h3 id="思路">思路</h3><p>横坐标的差值和纵坐标的差值之积</p><h3 id="code">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">pair</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;&gt;</span><span style="color: #24292E"> v;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">4</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> a, b;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> b;</span></span><span class="line"><span style="color: #24292E">        v.</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">({a, b});</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(v.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), v.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">());</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> (v[</span><span style="color: #005CC5">3</span><span style="color: #24292E">].second </span><span style="color: #D73A49">-</span><span style="color: #24292E"> v[</span><span style="color: #005CC5">0</span><span style="color: #24292E">].second) </span><span style="color: #D73A49">*</span><span style="color: #24292E"> (v[</span><span style="color: #005CC5">3</span><span style="color: #24292E">].first </span><span style="color: #D73A49">-</span><span style="color: #24292E"> v[</span><span style="color: #005CC5">0</span><span style="color: #24292E">].first) </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="b">B</h2><h3 id="思路-1">思路</h3><p>两个字符串中 <span class="math inline">\(1\)</span>出现较少的个数加上两个字符串相差多少个 <spanclass="math inline">\(1\)</span> 即为答案</p><h3 id="code-1">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    string s, t;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> s </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> a </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">, b </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (s[i] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> t[i] </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> s[i] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;1&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (s[i] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;1&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            a</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (t[i] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;1&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            b</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(a, b) </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a </span><span style="color: #D73A49">-</span><span style="color: #24292E"> b) </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="c">C</h2><h3 id="思路-2">思路</h3><p>贪心，每步选择耗电最少的即可</p><h3 id="code-2">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    ll n, f, a, b;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> f </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> b;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">ll</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v</span><span style="color: #24292E">(n);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    ll now </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> ((v[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> now) </span><span style="color: #D73A49">*</span><span style="color: #24292E"> a </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> b)</span></span><span class="line"><span style="color: #24292E">            f </span><span style="color: #D73A49">-=</span><span style="color: #24292E"> b;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">            f </span><span style="color: #D73A49">-=</span><span style="color: #24292E"> (v[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> now) </span><span style="color: #D73A49">*</span><span style="color: #24292E"> a;</span></span><span class="line"><span style="color: #24292E">        now </span><span style="color: #D73A49">=</span><span style="color: #24292E"> v[i];</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (f </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;NO&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;YES&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="d">D</h2><h3 id="思路-3">思路</h3><p>将两个序列排序后可知，对于每一个数 <spanclass="math inline">\(a_i\)</span> 选择的应该是最大或者最小的 <spanclass="math inline">\(b_i\)</span>，用双指针从两边向中间移动，每次选择差值最大的</p><h3 id="code-3">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">ll</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n), </span><span style="color: #6F42C1">c</span><span style="color: #24292E">(m);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> c[i];</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(a.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), a.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">());</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(c.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), c.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">());</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">, j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> l </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">, r </span><span style="color: #D73A49">=</span><span style="color: #24292E"> m </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    ll ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> j)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #6F42C1">max</span><span style="color: #24292E">(</span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> c[l]), </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> c[r])) </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(</span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a[j] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> c[l]), </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a[j] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> c[r])))</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a[j] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> c[l]) </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a[j] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> c[r]))</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a[j] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> c[l]);</span></span><span class="line"><span style="color: #24292E">                l</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a[j] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> c[r]);</span></span><span class="line"><span style="color: #24292E">                r</span><span style="color: #D73A49">--</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">            j</span><span style="color: #D73A49">--</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> c[l]) </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> c[r]))</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> c[l]);</span></span><span class="line"><span style="color: #24292E">                l</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> c[r]);</span></span><span class="line"><span style="color: #24292E">                r</span><span style="color: #D73A49">--</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">            i</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="e">E</h2><h3 id="思路-4">思路</h3><p>由题意可知，由于双方每次只能前进一步且不能后退或者停止，那么双方的交汇一定会在两者的中线，而谁吃谁由双方的初始距离决定。</p><ol type="1"><li>当双方一开始就是在同一排或者背对背，此时平局</li><li>当双方的初始距离为奇数时，只有 <spanclass="math inline">\(Alice\)</span> 可以吃掉 <spanclass="math inline">\(Bob\)</span> 的棋子。</li><li>当双方的初始距离为偶数时，只有 <spanclass="math inline">\(Bob\)</span> 可以吃掉 <spanclass="math inline">\(Alice\)</span> 的棋子。</li><li>当出现会被吃的可能时，判断被吃掉的棋子能否逃脱，通过棋子的可移动范围可以判断，能逃脱即为平局。</li></ol><h3 id="code-4">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> h, w, x, y, xx, yy;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> h </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> w </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> y </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> xx </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> yy;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> xx)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;Draw&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> ((xx </span><span style="color: #D73A49">-</span><span style="color: #24292E"> x) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (xx </span><span style="color: #D73A49">-</span><span style="color: #24292E"> x) </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #6F42C1">max</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E">, yy </span><span style="color: #D73A49">-</span><span style="color: #24292E"> (t </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)) </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E">, y </span><span style="color: #D73A49">-</span><span style="color: #24292E"> t) </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(w, yy </span><span style="color: #D73A49">+</span><span style="color: #24292E"> (t </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)) </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(w, y </span><span style="color: #D73A49">+</span><span style="color: #24292E"> t))</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;Alice&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (xx </span><span style="color: #D73A49">-</span><span style="color: #24292E"> x) </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #6F42C1">max</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E">, y </span><span style="color: #D73A49">-</span><span style="color: #24292E"> t) </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E">, yy </span><span style="color: #D73A49">-</span><span style="color: #24292E"> t) </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(w, y </span><span style="color: #D73A49">+</span><span style="color: #24292E"> t) </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(w, yy </span><span style="color: #D73A49">+</span><span style="color: #24292E"> t))</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;Bob&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;Draw&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>题解</category>
      
      <category>Codeforces</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>Codeforces</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AtCoder Beginner Contest 337</title>
    <link href="/archives/3994262799/"/>
    <url>/archives/3994262799/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="https://atcoder.jp/contests/abc337">AtCoder BeginnerContest 337</a></li></ul><h2 id="a">A</h2><h3 id="思路">思路</h3><p>直接累加总分即可</p><h3 id="code">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, X, Y, x </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">, y </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (n</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> X </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> Y;</span></span><span class="line"><span style="color: #24292E">        x </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> X, y </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> Y;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> y)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;Takahashi&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> y)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;Aoki&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;Draw&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="b">B</h2><h3 id="思路-1">思路</h3><p>将长度和字符串 <span class="math inline">\(S\)</span> 的所有扩展<span class="math inline">\(ABC\)</span> 字符串构造出来，看是否出现和<span class="math inline">\(S\)</span> 相同的字符串</p><h3 id="code-1">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    string s;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> s;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">bool</span><span style="color: #24292E"> flag </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">(); i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">() </span><span style="color: #D73A49">-</span><span style="color: #24292E"> i; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            string tmp;</span></span><span class="line"><span style="color: #24292E">            tmp </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">string</span><span style="color: #24292E">(i, </span><span style="color: #032F62">&#39;A&#39;</span><span style="color: #24292E">) </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #6F42C1">string</span><span style="color: #24292E">(j, </span><span style="color: #032F62">&#39;B&#39;</span><span style="color: #24292E">) </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #6F42C1">string</span><span style="color: #24292E">(s.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">() </span><span style="color: #D73A49">-</span><span style="color: #24292E"> i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> j, </span><span style="color: #032F62">&#39;C&#39;</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">            flag </span><span style="color: #D73A49">|=</span><span style="color: #24292E"> (tmp </span><span style="color: #D73A49">==</span><span style="color: #24292E"> s);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (flag)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;Yes&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;No&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="c">C</h2><h3 id="思路-2">思路</h3><p>新开数组 <span class="math inline">\(b\)</span> 存数组 <spanclass="math inline">\(a\)</span> 中每个数的下标，顺着数组 <spanclass="math inline">\(b\)</span> 输出即可</p><h3 id="code-2">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">), </span><span style="color: #6F42C1">b</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> now;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a[i] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            now </span><span style="color: #D73A49">=</span><span style="color: #24292E"> i;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">            b[a[i]] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> i;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> now </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot; &quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        now </span><span style="color: #D73A49">=</span><span style="color: #24292E"> b[now];</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="d">D</h2><h3 id="思路-3">思路</h3><p>分别遍历每行和每列，用前缀和分别记录 <code>.</code> 和 <code>x</code>出现的次数，如果这段出现过 <code>x</code>则不考虑，如果没出现过就看出现了多少 <code>.</code> ，最少即为答案。</p><h3 id="code-3">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m, k;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> k;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;char&gt;&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">mp</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">char</span><span style="color: #24292E">&gt;(m </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">));</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(N), </span><span style="color: #6F42C1">b</span><span style="color: #24292E">(N);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> mp[i][j];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">0x</span><span style="color: #005CC5">3f3f3f3f</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        a[</span><span style="color: #005CC5">0</span><span style="color: #24292E">] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">, b[</span><span style="color: #005CC5">0</span><span style="color: #24292E">] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            a[j] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a[j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> (mp[i][j] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;.&#39;</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">            b[j] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> b[j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> (mp[i][j] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;x&#39;</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> k; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (b[j] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> b[j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> k] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(ans, a[j] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> a[j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> k]);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> m; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        a[</span><span style="color: #005CC5">0</span><span style="color: #24292E">] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">, b[</span><span style="color: #005CC5">0</span><span style="color: #24292E">] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            a[j] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a[j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> (mp[j][i] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;.&#39;</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">            b[j] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> b[j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> (mp[j][i] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;x&#39;</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> k; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (b[j] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> b[j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> k] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(ans, a[j] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> a[j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> k]);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (ans </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #D73A49">0x</span><span style="color: #005CC5">3f3f3f3f</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="e">E</h2><h3 id="思路-4">思路</h3><p>经典老鼠喝药问题（筛选特例问题）</p><p>对输入的 <span class="math inline">\(N\)</span> 求 <spanclass="math inline">\(N - 1\)</span>的二进制位数，位数即为需要的人数</p><p>将朋友排成一排，按编号喝对应二进制位为 <spanclass="math inline">\(1\)</span> 的饮料，如：对于编号为 <spanclass="math inline">\(2\)</span> 的朋友，他需要喝第 <spanclass="math inline">\(3\)</span> 和第 <spanclass="math inline">\(6\)</span> 杯，因为 <spanclass="math inline">\(3\)</span> 的二进制数为 <spanclass="math inline">\(11\)</span> ，<spanclass="math inline">\(6\)</span> 的二进制数为 <spanclass="math inline">\(110\)</span> 他们的第二位都是 <spanclass="math inline">\(1\)</span>。以此类推。需要注意的是，此时饮料的编号是从 <spanclass="math inline">\(0\)</span> 开始的，因为 <spanclass="math inline">\(0\)</span>号饮料并不需要有人喝，但是题目中的饮料编号是从 <spanclass="math inline">\(1\)</span> 开始的。</p><p>对于题目返回的一个 <span class="math inline">\(01\)</span> 串 <spanclass="math inline">\(s\)</span>，我们将其转化为十进制即为坏掉的饮料的编号，此时的编号是从 <spanclass="math inline">\(0\)</span> 开始的，题目的编号是从 <spanclass="math inline">\(1\)</span> 开始的，所以需要 <spanclass="math inline">\(+1\)</span></p><h3 id="code-4">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> m </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">, t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        m</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        t </span><span style="color: #D73A49">/=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;int&gt;&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v</span><span style="color: #24292E">(m </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> p </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, tmp </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (tmp </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (i </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> tmp)</span></span><span class="line"><span style="color: #24292E">                v[p].</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">(i);</span></span><span class="line"><span style="color: #24292E">            p</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            tmp </span><span style="color: #D73A49">*=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> m; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> v[i].</span><span style="color: #6F42C1">size</span><span style="color: #24292E">() </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot; &quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> j : v[i])</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> j </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot; &quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    string s;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> s;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">(); i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (s[i] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;1&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> tmp </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> i; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                tmp </span><span style="color: #D73A49">*=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> tmp;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>题解</category>
      
      <category>AtCoder</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>AtCoder</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>最短路</title>
    <link href="/archives/4061592254/"/>
    <url>/archives/4061592254/</url>
    
    <content type="html"><![CDATA[<table><thead><tr><th style="text-align: center;">最短路算法</th><th style="text-align: center;"><spanclass="math inline">\(SPFA\)</span></th><th style="text-align: center;"><spanclass="math inline">\(Dijkstra\)</span></th><th style="text-align: center;"><spanclass="math inline">\(Johnson\)</span></th></tr></thead><tbody><tr><td style="text-align: center;">最短路类型</td><td style="text-align: center;">单源最短路</td><td style="text-align: center;">单源最短路</td><td style="text-align: center;">每对结点之间的最短路</td></tr><tr><td style="text-align: center;">作用于</td><td style="text-align: center;">任意图</td><td style="text-align: center;">非负权图</td><td style="text-align: center;">任意图</td></tr><tr><td style="text-align: center;">能否检测负环？</td><td style="text-align: center;">能</td><td style="text-align: center;">不能</td><td style="text-align: center;">能</td></tr><tr><td style="text-align: center;">时间复杂度</td><td style="text-align: center;"><spanclass="math inline">\(O(NM)\)</span></td><td style="text-align: center;"><span class="math inline">\(O(M\logM)\)</span></td><td style="text-align: center;"><span class="math inline">\(O(NM\logM)\)</span></td></tr></tbody></table><h2 id="dijkstra">Dijkstra</h2><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x7fffffff</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span><span style="color: #6A737D"> // 点</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">5</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span><span style="color: #6A737D"> // 边</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">struct</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> dis, id;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">bool</span><span style="color: #24292E"> </span><span style="color: #D73A49">operator</span><span style="color: #6F42C1">&lt;</span><span style="color: #24292E">(</span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;</span><span style="color: #E36209">a</span><span style="color: #24292E">) </span><span style="color: #D73A49">const</span><span style="color: #24292E"> { </span><span style="color: #D73A49">return</span><span style="color: #24292E"> dis </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> a.dis; }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">node</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">d</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">) { dis </span><span style="color: #D73A49">=</span><span style="color: #24292E"> d, id </span><span style="color: #D73A49">=</span><span style="color: #24292E"> x; }</span></span><span class="line"><span style="color: #24292E">};</span></span><span class="line"></span><span class="line"><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">pair</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;&gt;</span><span style="color: #24292E"> g[N];</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> dis[N];</span></span><span class="line"><span style="color: #D73A49">bool</span><span style="color: #24292E"> vis[N];</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m, k;</span><span style="color: #6A737D"> // k 出发点</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">dijkstra</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    priority_queue</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">node</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        dis[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> INF;</span></span><span class="line"><span style="color: #24292E">    dis[k] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(</span><span style="color: #6F42C1">node</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">, k));</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">q.</span><span style="color: #6F42C1">empty</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> u </span><span style="color: #D73A49">=</span><span style="color: #24292E"> q.</span><span style="color: #6F42C1">top</span><span style="color: #24292E">().id;</span></span><span class="line"><span style="color: #24292E">        q.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (vis[u])</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        vis[u] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> g[u].</span><span style="color: #6F42C1">size</span><span style="color: #24292E">(); i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> v </span><span style="color: #D73A49">=</span><span style="color: #24292E"> g[u][i].first, w </span><span style="color: #D73A49">=</span><span style="color: #24292E"> g[u][i].second;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (dis[v] </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> dis[u] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> w)</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                dis[v] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> dis[u] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> w;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">vis[v])</span></span><span class="line"><span style="color: #24292E">        q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(</span><span style="color: #6F42C1">node</span><span style="color: #24292E">(dis[v], v));</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> dis[i] </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="spfa">SPFA</h2><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">pair</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;&gt;</span><span style="color: #24292E"> e[N];</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> dis[N], cnt[N], vis[N];</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">bool</span><span style="color: #24292E"> </span><span style="color: #6F42C1">spfa</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">n</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">s</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">memset</span><span style="color: #24292E">(dis, </span><span style="color: #D73A49">0x</span><span style="color: #005CC5">3f</span><span style="color: #24292E">, </span><span style="color: #D73A49">sizeof</span><span style="color: #24292E">(dis));</span></span><span class="line"><span style="color: #24292E">    queue</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"><span style="color: #24292E">    q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(s);</span></span><span class="line"><span style="color: #24292E">    dis[s] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">, vis[s] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">q.</span><span style="color: #6F42C1">empty</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> u </span><span style="color: #D73A49">=</span><span style="color: #24292E"> q.</span><span style="color: #6F42C1">front</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">        q.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">        vis[u] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> e[u].</span><span style="color: #6F42C1">size</span><span style="color: #24292E">(); i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> v </span><span style="color: #D73A49">=</span><span style="color: #24292E"> e[u][i].first, w </span><span style="color: #D73A49">=</span><span style="color: #24292E"> e[u][i].second;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (dis[v] </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> dis[u] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> w)</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                dis[v] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> dis[u] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> w;</span></span><span class="line"><span style="color: #24292E">                cnt[v] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> cnt[u] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span><span style="color: #6A737D"> // 记录最短路经过的边数</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (cnt[v] </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> n)</span></span><span class="line"><span style="color: #24292E">                    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">                // 在不经过负环的情况下，最短路至多经过 n - 1 条边</span></span><span class="line"><span style="color: #6A737D">                // 因此如果经过了多于 n 条边，一定说明经过了负环</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">vis[v])</span></span><span class="line"><span style="color: #24292E">                {</span></span><span class="line"><span style="color: #24292E">                    q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(v);</span></span><span class="line"><span style="color: #24292E">                    vis[v] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">                }</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="johnson">Johnson</h2><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 1e9</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">struct</span><span style="color: #24292E"> </span><span style="color: #6F42C1">edge</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> v, w;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">edge</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">_v</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">_w</span><span style="color: #24292E">) : </span><span style="color: #6F42C1">v</span><span style="color: #24292E">(_v), </span><span style="color: #6F42C1">w</span><span style="color: #24292E">(_w) {}</span></span><span class="line"><span style="color: #24292E">};</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">struct</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> dis, id;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">bool</span><span style="color: #24292E"> </span><span style="color: #D73A49">operator</span><span style="color: #6F42C1">&lt;</span><span style="color: #24292E">(</span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;</span><span style="color: #E36209">a</span><span style="color: #24292E">) </span><span style="color: #D73A49">const</span><span style="color: #24292E"> { </span><span style="color: #D73A49">return</span><span style="color: #24292E"> dis </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> a.dis; }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">node</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">d</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">) : </span><span style="color: #6F42C1">dis</span><span style="color: #24292E">(d), </span><span style="color: #6F42C1">id</span><span style="color: #24292E">(x) {}</span></span><span class="line"><span style="color: #24292E">};</span></span><span class="line"></span><span class="line"><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">edge</span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> adj;</span></span><span class="line"><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> vis, t;</span></span><span class="line"><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">ll</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> h, dis;</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">addedge</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">u</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">v</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">w</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    adj[u].</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">(</span><span style="color: #6F42C1">edge</span><span style="color: #24292E">(v, w));</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">bool</span><span style="color: #24292E"> </span><span style="color: #6F42C1">spfa</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">s</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    queue</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"><span style="color: #24292E">    h.</span><span style="color: #6F42C1">assign</span><span style="color: #24292E">(h.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">(), INF);</span></span><span class="line"><span style="color: #24292E">    h[s] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    vis[s] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(s);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">q.</span><span style="color: #6F42C1">empty</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> u </span><span style="color: #D73A49">=</span><span style="color: #24292E"> q.</span><span style="color: #6F42C1">front</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">        q.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">        vis[u] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">e : adj[u])</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> v </span><span style="color: #D73A49">=</span><span style="color: #24292E"> e.v, w </span><span style="color: #D73A49">=</span><span style="color: #24292E"> e.w;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (h[v] </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> h[u] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> w)</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                h[v] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> h[u] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> w;</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">vis[v])</span></span><span class="line"><span style="color: #24292E">                {</span></span><span class="line"><span style="color: #24292E">                    vis[v] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">                    q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(v);</span></span><span class="line"><span style="color: #24292E">                    t[v]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">                    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (t[v] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">                }</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">dijkstra</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">s</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    priority_queue</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">node</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"><span style="color: #24292E">    dis.</span><span style="color: #6F42C1">assign</span><span style="color: #24292E">(dis.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">(), INF);</span></span><span class="line"><span style="color: #24292E">    vis.</span><span style="color: #6F42C1">assign</span><span style="color: #24292E">(vis.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">(), </span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    dis[s] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(</span><span style="color: #6F42C1">node</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">, s));</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">q.</span><span style="color: #6F42C1">empty</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> u </span><span style="color: #D73A49">=</span><span style="color: #24292E"> q.</span><span style="color: #6F42C1">top</span><span style="color: #24292E">().id;</span></span><span class="line"><span style="color: #24292E">        q.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (vis[u])</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        vis[u] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">e : adj[u])</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> v </span><span style="color: #D73A49">=</span><span style="color: #24292E"> e.v, w </span><span style="color: #D73A49">=</span><span style="color: #24292E"> e.w;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (dis[v] </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> dis[u] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> w)</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                dis[v] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> dis[u] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> w;</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">vis[v])</span></span><span class="line"><span style="color: #24292E">                    q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(</span><span style="color: #6F42C1">node</span><span style="color: #24292E">(dis[v], v));</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m;</span></span><span class="line"><span style="color: #24292E">    adj.</span><span style="color: #6F42C1">resize</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    vis.</span><span style="color: #6F42C1">resize</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    t.</span><span style="color: #6F42C1">resize</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    h.</span><span style="color: #6F42C1">resize</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    dis.</span><span style="color: #6F42C1">resize</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> m; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> u, v, w;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> u </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> w;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">addedge</span><span style="color: #24292E">(u, v, w);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">addedge</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">, i, </span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #6F42C1">spfa</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">))</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> u </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; u </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; u</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">e : adj[u])</span></span><span class="line"><span style="color: #24292E">            e.w </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> h[u] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> h[e.v];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">dijkstra</span><span style="color: #24292E">(i);</span></span><span class="line"><span style="color: #24292E">        ll ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (dis[j] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> INF)</span></span><span class="line"><span style="color: #24292E">                ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> j </span><span style="color: #D73A49">*</span><span style="color: #24292E"> INF;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">                ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> j </span><span style="color: #D73A49">*</span><span style="color: #24292E"> (dis[j] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> h[j] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> h[i]);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>模板</category>
      
      <category>图论</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Codeforces Round 918 (Div. 4)</title>
    <link href="/archives/3281088155/"/>
    <url>/archives/3281088155/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="https://codeforces.com/contest/1915">Codeforces Round 918(Div. 4)</a></li></ul><h2 id="a">A</h2><h3 id="思路">思路</h3><p>输出不和另外两个不相同的即可</p><h3 id="code">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> a, b, c;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> b </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> c;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a </span><span style="color: #D73A49">==</span><span style="color: #24292E"> b)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> c </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a </span><span style="color: #D73A49">==</span><span style="color: #24292E"> c)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> b </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> a </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="b">B</h2><h3 id="思路-1">思路</h3><p>输出出现次数为 <span class="math inline">\(2\)</span> 的字符</p><h3 id="code-1">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    map</span><span style="color: #D73A49">&lt;char</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;</span><span style="color: #24292E"> mp;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">9</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">char</span><span style="color: #24292E"> ch;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> ch;</span></span><span class="line"><span style="color: #24292E">        mp[ch]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">x : mp)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (x.second </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> x.first </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="c">C</h2><h3 id="思路-2">思路</h3><p>累加所有的方块数，通过二分判断是不是平方数</p><h3 id="code-2">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    ll sum </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">        sum </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    ll l </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, r </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">9</span><span style="color: #24292E">, ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> r)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        ll mid </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">+</span><span style="color: #24292E"> r) </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mid </span><span style="color: #D73A49">*</span><span style="color: #24292E"> mid </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> sum)</span></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> mid, r </span><span style="color: #D73A49">=</span><span style="color: #24292E"> mid </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">            l </span><span style="color: #D73A49">=</span><span style="color: #24292E"> mid </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (ans </span><span style="color: #D73A49">*</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">==</span><span style="color: #24292E"> sum)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;YES&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;NO&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="d">D</h2><h3 id="思路-3">思路</h3><p>在除了第一个的每一个 <code>a</code> 或者 <code>e</code>的前一个字符之前加个 <code>.</code> ，直接判断下两个字符是不是<code>a</code> 或者 <code>e</code> 是就加点即可</p><h3 id="code-3">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    string s;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> s;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> s[i];</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (s[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;a&#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> s[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;e&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;.&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> s[n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">] </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> s[n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="e">E</h2><h3 id="思路-4">思路</h3><p>将奇偶不同的玻璃杯容量异号，易知如果这个区间满足条件，则区间和为<span class="math inline">\(0\)</span> 。通过前缀和即可判断。</p><h3 id="code-4">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">ll</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (i </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            a[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #24292E">a[i];</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">partial_sum</span><span style="color: #24292E">(a.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), a.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">(), a.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">());</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    set</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">ll</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> st;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (st.</span><span style="color: #6F42C1">count</span><span style="color: #24292E">(a[i]) </span><span style="color: #D73A49">||</span><span style="color: #24292E"> a[i] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;YES&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        st.</span><span style="color: #6F42C1">insert</span><span style="color: #24292E">(a[i]);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;NO&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="f">F</h2><h3 id="思路-5">思路</h3><p>易知，如果两个人会打招呼则一个人行走的区间一定被另一个人包含。</p><p>将右端点排序，然后从左端点最小的区间开始遍历，二分查找到右端点在数组的下标即有多少区间的右端点更小，然后删除这个右端点，使数组内的区间都是左端点大于当前的左端点的。</p><p>累加查找到的下标即为答案</p><h3 id="code-5">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    map</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;</span><span style="color: #24292E"> mp;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> v;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> a, b;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> b;</span></span><span class="line"><span style="color: #24292E">        mp[a] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> b;</span></span><span class="line"><span style="color: #24292E">        v.</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">(b);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    ll ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(v.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), v.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">());</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> it : mp)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">auto</span><span style="color: #24292E"> pos </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">lower_bound</span><span style="color: #24292E">(v.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), v.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">(), it.second);</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> (pos </span><span style="color: #D73A49">-</span><span style="color: #24292E"> v.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">());</span></span><span class="line"><span style="color: #24292E">        v.</span><span style="color: #6F42C1">erase</span><span style="color: #24292E">(pos);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="g">G</h2><h3 id="思路-6">思路</h3><p>优先队列优化的 <span class="math inline">\(Dijkstra\)</span> 。</p><p><code>dis[u][t]</code> 表示从 <span class="math inline">\(1\)</span>到 <span class="math inline">\(u\)</span> 使用 <spanclass="math inline">\(t\)</span> 城市的自行车的所花费的时间。</p><p>每次到新的城市，如果这里的自行车更优则更新自行车。<code>d + 1LL * s[t] * w</code>表示到达 <span class="math inline">\(j\)</span> 的所花费的时间。</p><h3 id="code-6">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">struct</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    ll d;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> u, t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">friend</span><span style="color: #24292E"> </span><span style="color: #D73A49">bool</span><span style="color: #24292E"> </span><span style="color: #D73A49">operator</span><span style="color: #6F42C1">&lt;</span><span style="color: #24292E">(</span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;</span><span style="color: #E36209">a</span><span style="color: #24292E">, </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;</span><span style="color: #E36209">b</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> a.d </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> b.d;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">};</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">pair</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;&gt;&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">g</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> u, v, w;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> u </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> w;</span></span><span class="line"><span style="color: #24292E">        g[u].</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">({v, w});</span></span><span class="line"><span style="color: #24292E">        g[v].</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">({u, w});</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">s</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> s[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">ll</span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">dis</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #6F42C1">ll</span><span style="color: #24292E">&gt;(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">));</span></span><span class="line"><span style="color: #24292E">    priority_queue</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">node</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({</span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">1</span><span style="color: #24292E">});</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (q.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">auto</span><span style="color: #24292E"> [d, u, t] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> q.</span><span style="color: #6F42C1">top</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">        q.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (dis[u][t] </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        dis[u][t] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> d;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (u </span><span style="color: #D73A49">==</span><span style="color: #24292E"> n)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> d </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> [j, w] : g[u])</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> b </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (s[j] </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> s[t] </span><span style="color: #D73A49">?</span><span style="color: #24292E"> j </span><span style="color: #D73A49">:</span><span style="color: #24292E"> t);</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (dis[j][b] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({d </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">LL</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> s[t] </span><span style="color: #D73A49">*</span><span style="color: #24292E"> w, j, b});</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>题解</category>
      
      <category>Codeforces</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>Codeforces</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AtCoder Beginner Contest 334</title>
    <link href="/archives/1998245045/"/>
    <url>/archives/1998245045/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="https://atcoder.jp/contests/abc334">AtCoder BeginnerContest 334</a></li></ul><h2 id="a">A</h2><h3 id="思路">思路</h3><p>比较大小输出即可。</p><h3 id="code">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> a, b;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> b;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> b)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;Bat&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;Glove&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="b">B</h2><h3 id="思路-1">思路</h3><p>给定 <span class="math inline">\(a,m,l,r\)</span> ，问有多少个整数<span class="math inline">\(k\)</span> 满足 <spanclass="math inline">\(l \le a+mk \le r\)</span> .</p><p>将 <span class="math inline">\(l\)</span> 和 <spanclass="math inline">\(r\)</span> 同时减去 <spanclass="math inline">\(a\)</span> ，即可以认为树是从 <spanclass="math inline">\(0\)</span> 点开始种的</p><p>此时有两种情况，记 <span class="math inline">\(sum(x,y)\)</span> 为<span class="math inline">\((x,y]\)</span> 范围内有多少颗树：</p><ol type="1"><li>当 <span class="math inline">\(l\)</span> 和 <spanclass="math inline">\(r\)</span> 在 <spanclass="math inline">\(0\)</span> 的同一侧时，<code>ans = sum(1, max(l, r)) - sum(1, min(l, r) - 1)</code>，即长的一段减去短的一段</li><li>当 <span class="math inline">\(l\)</span> 和 <spanclass="math inline">\(r\)</span> 不在 <spanclass="math inline">\(0\)</span> 的同一侧时，<code>ans = sum(1, l) + sum(1, r) + 1</code> ，即两段加上 <spanclass="math inline">\(0\)</span> 点</li></ol><h3 id="code-1">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    ll a, m, l, r;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> l </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> r;</span></span><span class="line"><span style="color: #24292E">    l </span><span style="color: #D73A49">-=</span><span style="color: #24292E"> a, r </span><span style="color: #D73A49">-=</span><span style="color: #24292E"> a;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> r </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> (</span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(l) </span><span style="color: #D73A49">/</span><span style="color: #24292E"> m) </span><span style="color: #D73A49">+</span><span style="color: #24292E"> (</span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(r) </span><span style="color: #D73A49">/</span><span style="color: #24292E"> m) </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(</span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(l), </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(r)) </span><span style="color: #D73A49">/</span><span style="color: #24292E"> m </span><span style="color: #D73A49">-</span><span style="color: #24292E"> (</span><span style="color: #6F42C1">min</span><span style="color: #24292E">(</span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(l), </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(r)) </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">) </span><span style="color: #D73A49">/</span><span style="color: #24292E"> m;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="c">C</h2><h3 id="思路-2">思路</h3><p>对于已经成对的袜子，如果拆开并不会更优</p><p>对于单只的袜子，按从小到大排序，两两配对即为最优</p><ul><li>对于偶数个袜子，两两配对即可</li><li>对于奇数个袜子，可以舍弃一只，发现对于舍弃的这只前后两边一定各是偶数个袜子。可以预处理从后两两配对的结果，然后从头遍历一遍可能舍弃的袜子，同时维护前面配对的结果。</li></ul><h3 id="code-2">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, k;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> k;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v</span><span style="color: #24292E">(k);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> k; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (k </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> k; i </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> v[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> v[i];</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> sum </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> k </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">-=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            sum </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> v[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> v[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> sum;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> k </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            sum </span><span style="color: #D73A49">-=</span><span style="color: #24292E"> v[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> v[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #24292E">            sum </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> v[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> v[i];</span></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(ans, sum);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="d">D</h2><h3 id="思路-3">思路</h3><p>显然我们应该选择先拉需要麋鹿最少的雪橇</p><p>按所需麋鹿数量 <span class="math inline">\(r_i\)</span>升序排序后，找到最大的 <span class="math inline">\(k\)</span> 满足 <spanclass="math inline">\(\sum^k_{i=1} r_i\le x\)</span></p><p>建立关于 <span class="math inline">\(r_i\)</span>的前缀和数组，在其中二分查找不大于 <spanclass="math inline">\(x\)</span> 的最大值即可</p><h3 id="code-3">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, q;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">ll</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(a.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), a.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">());</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">partial_sum</span><span style="color: #24292E">(a.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), a.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">(), a.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">());</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (q</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        ll x;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">upper_bound</span><span style="color: #24292E">(a.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), a.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">(), x) </span><span style="color: #D73A49">-</span><span style="color: #24292E"> a.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">() </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="e">E</h2><h3 id="思路-4">思路</h3><p>先通过 <span class="math inline">\(DFS\)</span>标记每个连通块，并记录总共的连通块个数 <spanclass="math inline">\(cnt\)</span> 。</p><p>然后遍历每一个 <code>.</code> ，算出将其改变为 <code>#</code>对连通块个数的影响。很显然，四个方向如果有 <spanclass="math inline">\(x\)</span>个不同的联通块，那么此时连通块的数量就变为了 <spanclass="math inline">\(cnt+1-x\)</span> 。</p><p>累加每个情况连通块的数量，除以 <code>.</code> 的个数对 <spanclass="math inline">\(998244353\)</span> 取模后即为答案</p><h3 id="code-4">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">3</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">char</span><span style="color: #24292E"> mp[N][N];</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> vis[N][N];</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> dx[] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">};</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> dy[] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">};</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m, cnt, fm;</span></span><span class="line"><span style="color: #24292E">ll sum;</span></span><span class="line"></span><span class="line"><span style="color: #6F42C1">ll</span><span style="color: #24292E"> </span><span style="color: #6F42C1">quickpow</span><span style="color: #24292E">(</span><span style="color: #6F42C1">ll</span><span style="color: #24292E"> </span><span style="color: #E36209">a</span><span style="color: #24292E">, </span><span style="color: #6F42C1">ll</span><span style="color: #24292E"> </span><span style="color: #E36209">n</span><span style="color: #24292E">, </span><span style="color: #6F42C1">ll</span><span style="color: #24292E"> </span><span style="color: #E36209">mod</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    ll ret </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (; n; n </span><span style="color: #D73A49">&gt;&gt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, a </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">LL</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> a </span><span style="color: #D73A49">*</span><span style="color: #24292E"> a </span><span style="color: #D73A49">%</span><span style="color: #24292E"> mod)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            ret </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">LL</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> ret </span><span style="color: #D73A49">*</span><span style="color: #24292E"> a </span><span style="color: #D73A49">%</span><span style="color: #24292E"> mod;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> ret;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">dfs</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">y</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">id</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> x </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">||</span><span style="color: #24292E"> y </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> y </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> m </span><span style="color: #D73A49">||</span><span style="color: #24292E"> vis[x][y] </span><span style="color: #D73A49">||</span><span style="color: #24292E"> mp[x][y] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;.&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vis[x][y] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> id;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> k </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; k </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">4</span><span style="color: #24292E">; k</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">dfs</span><span style="color: #24292E">(x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> dx[k], y </span><span style="color: #D73A49">+</span><span style="color: #24292E"> dy[k], id);</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">check</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">y</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    set</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> s;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> k </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; k </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">4</span><span style="color: #24292E">; k</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> nx </span><span style="color: #D73A49">=</span><span style="color: #24292E"> x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> dx[k], ny </span><span style="color: #D73A49">=</span><span style="color: #24292E"> y </span><span style="color: #D73A49">+</span><span style="color: #24292E"> dy[k];</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (nx </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> nx </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">||</span><span style="color: #24292E"> ny </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> ny </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> m </span><span style="color: #D73A49">||</span><span style="color: #24292E"> mp[nx][ny] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;.&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        s.</span><span style="color: #6F42C1">insert</span><span style="color: #24292E">(vis[nx][ny]);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    sum </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> mp[i][j];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mp[i][j] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;#&#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> </span><span style="color: #D73A49">!</span><span style="color: #24292E">vis[i][j])</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #6F42C1">dfs</span><span style="color: #24292E">(i, j, </span><span style="color: #D73A49">++</span><span style="color: #24292E">cnt);</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mp[i][j] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;.&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                fm</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mp[i][j] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;.&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #6F42C1">check</span><span style="color: #24292E">(i, j);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> sum </span><span style="color: #D73A49">%</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #6F42C1">quickpow</span><span style="color: #24292E">(fm, mod </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">, mod) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> mod;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="f">F</h2><h3 id="思路-5">思路</h3><blockquote><p>待补</p></blockquote><h3 id="code-5">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>题解</category>
      
      <category>AtCoder</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>AtCoder</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AtCoder Beginner Contest 333</title>
    <link href="/archives/3917371670/"/>
    <url>/archives/3917371670/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="https://atcoder.jp/contests/abc333">AtCoder BeginnerContest 333</a></li></ul><h2 id="a">A</h2><h3 id="思路">思路</h3><p>根据题意模拟</p><h3 id="code">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="b">B</h2><h3 id="思路-1">思路</h3><p>求两点之间最短距离，判断即可</p><h3 id="code-1">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">char</span><span style="color: #24292E"> a, b, c, d;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> b </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> c </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> d;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a </span><span style="color: #D73A49">-</span><span style="color: #24292E"> b), </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a </span><span style="color: #D73A49">-</span><span style="color: #24292E"> b));</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> y </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(c </span><span style="color: #D73A49">-</span><span style="color: #24292E"> d), </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(c </span><span style="color: #D73A49">-</span><span style="color: #24292E"> d));</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">==</span><span style="color: #24292E"> y </span><span style="color: #D73A49">?</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;Yes&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;No&quot;</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="c">C</h2><h3 id="思路-2">思路</h3><p>暴搜所有结果，这里使用 <code>set</code> 去重。</p><p>也可以使用数组存储后遍历求解</p><h3 id="code-2">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">ll a[] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">11</span><span style="color: #24292E">, </span><span style="color: #005CC5">111</span><span style="color: #24292E">, </span><span style="color: #005CC5">1111</span><span style="color: #24292E">, </span><span style="color: #005CC5">11111</span><span style="color: #24292E">, </span><span style="color: #005CC5">111111</span><span style="color: #24292E">, </span><span style="color: #005CC5">1111111</span><span style="color: #24292E">, </span><span style="color: #005CC5">11111111</span><span style="color: #24292E">, </span><span style="color: #005CC5">111111111</span><span style="color: #24292E">, </span><span style="color: #005CC5">1111111111</span><span style="color: #24292E">, </span><span style="color: #005CC5">11111111111</span><span style="color: #24292E">, </span><span style="color: #005CC5">111111111111</span><span style="color: #24292E">};</span></span><span class="line"><span style="color: #24292E">set</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">ll</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> ans;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">12</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">12</span><span style="color: #24292E">; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> k </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; k </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">12</span><span style="color: #24292E">; k</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                ans.</span><span style="color: #6F42C1">insert</span><span style="color: #24292E">(a[i] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> a[j] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> a[k]);</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> it : ans)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cnt</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (cnt </span><span style="color: #D73A49">==</span><span style="color: #24292E"> n)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> it;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">break</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="d">D</h2><h3 id="思路-3">思路</h3><p>建树，遍历节点 <span class="math inline">\(1\)</span>所能访问的所有结点，如果 <span class="math inline">\(1\)</span>的子树数量为 <span class="math inline">\(1\)</span> 则直接删除节点 <spanclass="math inline">\(1\)</span>即可，否则遍历所有子树，求出每个子树的结点个数，输出除了结点最多的那颗树的其余结点个数</p><h3 id="code-3">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">3</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> g[N];</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> n, maxn, cnt;</span></span><span class="line"><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">bool</span><span style="color: #24292E">&gt; </span><span style="color: #6F42C1">vis</span><span style="color: #24292E">(</span><span style="color: #6F42C1">N</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">bfs</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    queue</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"><span style="color: #24292E">    q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(x);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">q.</span><span style="color: #6F42C1">empty</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cnt</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> u </span><span style="color: #D73A49">=</span><span style="color: #24292E"> q.</span><span style="color: #6F42C1">front</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">        q.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> v : g[u])</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">vis[v])</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                vis[v] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">                q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(v);</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> a, b;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> b;</span></span><span class="line"><span style="color: #24292E">        g[a].</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">(b);</span></span><span class="line"><span style="color: #24292E">        g[b].</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">(a);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (g[</span><span style="color: #005CC5">1</span><span style="color: #24292E">].</span><span style="color: #6F42C1">size</span><span style="color: #24292E">() </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        vis[</span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> u : g[</span><span style="color: #005CC5">1</span><span style="color: #24292E">])</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            vis[u] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #6F42C1">bfs</span><span style="color: #24292E">(u);</span></span><span class="line"><span style="color: #24292E">            maxn </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(maxn, cnt);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> maxn;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="e">E</h2><h3 id="思路-4">思路</h3><p>从后面开始遍历，用 <code>map</code>存出现的怪物的类型以及个数，同时增加携带的药水量也是需要的药水量，前面如果出现这个类型的药水，就减少身上的药水，说明这个类型的药水是这个时候捡起来的。遍历结束后，如果需要的药水量大于<span class="math inline">\(0\)</span> 说明无法打败所有的怪物，输出<span class="math inline">\(-1\)</span>。反之则将捡起药水的顺序倒序输出</p><h3 id="code-4">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">struct</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t, x;</span></span><span class="line"><span style="color: #24292E">};</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">node</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v</span><span style="color: #24292E">(n);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v[i].t </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v[i].x;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    map</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;</span><span style="color: #24292E"> mp;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> ansv;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">, ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (v[i].t </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            mp[v[i].x]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            cnt</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(ans, cnt);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (v[i].t </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> mp[v[i].x])</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            mp[v[i].x]</span><span style="color: #D73A49">--</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            cnt</span><span style="color: #D73A49">--</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            ansv.</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (v[i].t </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            ansv.</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">reverse</span><span style="color: #24292E">(</span><span style="color: #6F42C1">all</span><span style="color: #24292E">(ansv));</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (cnt)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> it : ansv)</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> it </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="f">F</h2><h3 id="思路-5">思路</h3><blockquote><p>待补</p></blockquote><h3 id="code-5">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>题解</category>
      
      <category>AtCoder</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>AtCoder</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AtCoder Beginner Contest 332</title>
    <link href="/archives/2658756992/"/>
    <url>/archives/2658756992/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="https://atcoder.jp/contests/abc332">AtCoder BeginnerContest 332</a></li></ul><h2 id="a">A</h2><h3 id="思路">思路</h3><p>累加费用，如果总价小于 <span class="math inline">\(S\)</span>则加上运费 <span class="math inline">\(K\)</span></p><h3 id="code">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, s, k;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> s </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> k;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x, y;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> y;</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> x </span><span style="color: #D73A49">*</span><span style="color: #24292E"> y;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (ans </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> s)</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> k;</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="b">B</h2><h3 id="思路-1">思路</h3><p>根据题意模拟</p><p>执行 <span class="math inline">\(K\)</span> 次以下操作：</p><ul><li>如果玻璃杯是满的，清空玻璃杯</li><li>否则，如果马克杯是空的，装满马克杯</li><li>否则，将马克杯里的水倒进玻璃杯，直到马克杯为空或者玻璃杯满了</li></ul><h3 id="code-1">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> k, g, m;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> k </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> g </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> gg </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">, mm </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (k</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (gg </span><span style="color: #D73A49">==</span><span style="color: #24292E"> g)</span></span><span class="line"><span style="color: #24292E">            gg </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mm </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            mm </span><span style="color: #D73A49">=</span><span style="color: #24292E"> m;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(g </span><span style="color: #D73A49">-</span><span style="color: #24292E"> gg, mm);</span></span><span class="line"><span style="color: #24292E">            mm </span><span style="color: #D73A49">-=</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">            gg </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> gg </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> mm;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="c">C</h2><h3 id="思路-2">思路</h3><p>根据题意模拟</p><p>出现 <span class="math inline">\(0\)</span> 重置衣服的数量，出现<span class="math inline">\(1\)</span> 优先用纯色，没有衣服可穿就返回<span class="math inline">\(false\)</span></p><h3 id="code-2">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m;</span></span><span class="line"><span style="color: #24292E">string s;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">bool</span><span style="color: #24292E"> </span><span style="color: #6F42C1">check</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> a </span><span style="color: #D73A49">=</span><span style="color: #24292E"> m, b </span><span style="color: #D73A49">=</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (s[i] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;0&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            a </span><span style="color: #D73A49">=</span><span style="color: #24292E"> m, b </span><span style="color: #D73A49">=</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (s[i] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;1&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a)</span></span><span class="line"><span style="color: #24292E">                a</span><span style="color: #D73A49">--</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (b)</span></span><span class="line"><span style="color: #24292E">                b</span><span style="color: #D73A49">--</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (b)</span></span><span class="line"><span style="color: #24292E">                b</span><span style="color: #D73A49">--</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> s;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1000</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #6F42C1">check</span><span style="color: #24292E">(i))</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> i;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="d">D</h2><h3 id="思路-3">思路</h3><p><span class="math inline">\(BFS\)</span> 搜索</p><p>用嵌套 <span class="math inline">\(STL\)</span> 进行操作简单方便</p><h3 id="code-3">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;int&gt;&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n, </span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt;(m));</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i][j];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;int&gt;&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">b</span><span style="color: #24292E">(n, </span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt;(m));</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> b[i][j];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> INF;</span></span><span class="line"><span style="color: #24292E">    map</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;int&gt;&gt;</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;</span><span style="color: #24292E"> vis;</span></span><span class="line"><span style="color: #24292E">    queue</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">pair</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;int&gt;&gt;</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"><span style="color: #24292E">    q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({a, </span><span style="color: #005CC5">0</span><span style="color: #24292E">});</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">q.</span><span style="color: #6F42C1">empty</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;int&gt;&gt;</span><span style="color: #24292E"> now </span><span style="color: #D73A49">=</span><span style="color: #24292E"> q.</span><span style="color: #6F42C1">front</span><span style="color: #24292E">().first;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> q.</span><span style="color: #6F42C1">front</span><span style="color: #24292E">().second;</span></span><span class="line"><span style="color: #24292E">        q.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (now </span><span style="color: #D73A49">==</span><span style="color: #24292E"> b)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(ans, cnt);</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #6F42C1">swap</span><span style="color: #24292E">(now[i], now[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">]);</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (vis[now] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                vis[now] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">                q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({now, cnt </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">});</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #6F42C1">swap</span><span style="color: #24292E">(now[i], now[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">]);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #6F42C1">swap</span><span style="color: #24292E">(now[i][j], now[i][j </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">]);</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (vis[now] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                vis[now] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">                q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({now, cnt </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">});</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #6F42C1">swap</span><span style="color: #24292E">(now[i][j], now[i][j </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">]);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> (ans </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> INF </span><span style="color: #D73A49">?</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="e">E</h2><h3 id="思路-4">思路</h3><blockquote><p>待补</p></blockquote><h3 id="code-4">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>题解</category>
      
      <category>AtCoder</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>AtCoder</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AtCoder Beginner Contest 331</title>
    <link href="/archives/124794938/"/>
    <url>/archives/124794938/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="https://atcoder.jp/contests/abc331">AtCoder BeginnerContest 331</a></li></ul><h2 id="a">A</h2><h3 id="思路">思路</h3><p>简单模拟日期的变化</p><h3 id="code">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mm, dd;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> mm </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> dd;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> y, m, d;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> y </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> d;</span></span><span class="line"><span style="color: #24292E">    d</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (d </span><span style="color: #D73A49">==</span><span style="color: #24292E"> dd </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        d </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, m</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (m </span><span style="color: #D73A49">==</span><span style="color: #24292E"> mm </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        m </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, y</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> y </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> d;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="b">B</h2><h3 id="思路-1">思路</h3><p>遍历所有可能取最小值即可</p><h3 id="code-1">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, a, b, c;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> b </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> c;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> INF;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">20</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">20</span><span style="color: #24292E">; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> k </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; k </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">20</span><span style="color: #24292E">; k</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #005CC5">6</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">8</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> j </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">12</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> k </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> n)</span></span><span class="line"><span style="color: #24292E">                    ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(ans, i </span><span style="color: #D73A49">*</span><span style="color: #24292E"> a </span><span style="color: #D73A49">+</span><span style="color: #24292E"> j </span><span style="color: #D73A49">*</span><span style="color: #24292E"> b </span><span style="color: #D73A49">+</span><span style="color: #24292E"> k </span><span style="color: #D73A49">*</span><span style="color: #24292E"> c);</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="c">C</h2><h3 id="思路-2">思路</h3><p>计数排序，然后做出后缀和，直接查询即可</p><h3 id="code-2">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">6</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">ll</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">sum</span><span style="color: #24292E">(N), </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"><span style="color: #24292E">        sum[a[i]]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1000000</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        sum[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> sum[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> sum[i] </span><span style="color: #D73A49">*</span><span style="color: #24292E"> i;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> sum[a[i] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="d">D</h2><h3 id="思路-3">思路</h3><p>先预处理 <span class="math inline">\(n*n\)</span>的范围内的二维前缀和</p><p>记以 <span class="math inline">\((0,0)\)</span> 为左上角， <spanclass="math inline">\((x,y)\)</span> 为右下角的黑块的数量为 <spanclass="math inline">\(f(x,y)\)</span></p><p>对于一整个区域，我们分为四部分：</p><ol type="1"><li>左上角的 <span class="math inline">\((x/n)*(y/n)\)</span> 个 <spanclass="math inline">\(n*n\)</span> 的范围</li><li>右上角的 <span class="math inline">\((x/n)\)</span> 个 <spanclass="math inline">\(n*(y\%n)\)</span> 的范围</li><li>左下角的 <span class="math inline">\((y/n)\)</span> 个 <spanclass="math inline">\(n*(x\%n)\)</span> 的范围</li><li>右下角的 <span class="math inline">\(1\)</span> 个 <spanclass="math inline">\((x\%n)*(y\%n)\)</span> 的范围</li></ol><p>由二维前缀和以及容斥原理可知： <span class="math inline">\(ans=f(c,d)-f(c,b-1)-f(a-1,d)+f(a-1,b-1)\)</span></p><h3 id="code-3">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">3</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">char</span><span style="color: #24292E">&gt;&gt; </span><span style="color: #6F42C1">mp</span><span style="color: #24292E">(</span><span style="color: #6F42C1">N</span><span style="color: #24292E">, </span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">char</span><span style="color: #24292E">&gt;(N));</span></span><span class="line"><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #6F42C1">ll</span><span style="color: #24292E">&gt;&gt; </span><span style="color: #6F42C1">sum</span><span style="color: #24292E">(</span><span style="color: #6F42C1">N</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">, </span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #6F42C1">ll</span><span style="color: #24292E">&gt;(N </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">));</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> n, q;</span></span><span class="line"></span><span class="line"><span style="color: #6F42C1">ll</span><span style="color: #24292E"> </span><span style="color: #6F42C1">cal</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">y</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    ll res </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    res </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">LL</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">/</span><span style="color: #24292E"> n) </span><span style="color: #D73A49">*</span><span style="color: #24292E"> (y </span><span style="color: #D73A49">/</span><span style="color: #24292E"> n) </span><span style="color: #D73A49">*</span><span style="color: #24292E"> sum[n][n];</span></span><span class="line"><span style="color: #24292E">    res </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">LL</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> (y </span><span style="color: #D73A49">/</span><span style="color: #24292E"> n) </span><span style="color: #D73A49">*</span><span style="color: #24292E"> sum[x </span><span style="color: #D73A49">%</span><span style="color: #24292E"> n][n];</span></span><span class="line"><span style="color: #24292E">    res </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">LL</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">/</span><span style="color: #24292E"> n) </span><span style="color: #D73A49">*</span><span style="color: #24292E"> sum[n][y </span><span style="color: #D73A49">%</span><span style="color: #24292E"> n];</span></span><span class="line"><span style="color: #24292E">    res </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">LL</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> sum[x </span><span style="color: #D73A49">%</span><span style="color: #24292E"> n][y </span><span style="color: #D73A49">%</span><span style="color: #24292E"> n];</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> res;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> mp[i][j];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            sum[i][j] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (mp[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">][j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;B&#39;</span><span style="color: #24292E">) </span><span style="color: #D73A49">+</span><span style="color: #24292E"> sum[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">][j] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> sum[i][j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> sum[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">][j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (q</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> a, b, c, d;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> b </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> c </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> d;</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">cal</span><span style="color: #24292E">(c </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, d </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">) </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #6F42C1">cal</span><span style="color: #24292E">(c </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, b) </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #6F42C1">cal</span><span style="color: #24292E">(a, d </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">) </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #6F42C1">cal</span><span style="color: #24292E">(a, b) </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="e">E</h2><h3 id="思路-4">思路</h3><p>将 <span class="math inline">\(a,\ b\)</span>两个数组降序排序后。</p><p>易证，对于 <span class="math inline">\(a_i\ (0 \le i \le n)\)</span>和 <span class="math inline">\(b_j\ (0 \le j \le m)\)</span> ， <spanclass="math inline">\(a_i+b_j\)</span> 的前 <spanclass="math inline">\(l+1\)</span> 大满足 <spanclass="math inline">\(i*j \le \sqrt{nm}\)</span></p><p>找出范围内的所有值中没被限制的最大值即为答案</p><h3 id="code-4">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">struct</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> w, id;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">friend</span><span style="color: #24292E"> </span><span style="color: #D73A49">bool</span><span style="color: #24292E"> </span><span style="color: #D73A49">operator</span><span style="color: #6F42C1">&lt;</span><span style="color: #24292E">(</span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span><span style="color: #24292E"> </span><span style="color: #E36209">a</span><span style="color: #24292E">, </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span><span style="color: #24292E"> </span><span style="color: #E36209">b</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> a.w </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> b.w;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">};</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m, l;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> l;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">node</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">), </span><span style="color: #6F42C1">b</span><span style="color: #24292E">(m </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i].w;</span></span><span class="line"><span style="color: #24292E">        a[i].id </span><span style="color: #D73A49">=</span><span style="color: #24292E"> i;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> m; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> b[i].w;</span></span><span class="line"><span style="color: #24292E">        b[i].id </span><span style="color: #D73A49">=</span><span style="color: #24292E"> i;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(a.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">() </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, a.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">());</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(b.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">() </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, b.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">());</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    set</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">pair</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;&gt;</span><span style="color: #24292E"> no;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (l</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> c, d;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> c </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> d;</span></span><span class="line"><span style="color: #24292E">        no.</span><span style="color: #6F42C1">insert</span><span style="color: #24292E">(</span><span style="color: #6F42C1">make_pair</span><span style="color: #24292E">(c, d));</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    priority_queue</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> m </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> i </span><span style="color: #D73A49">*</span><span style="color: #24292E"> j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E">, </span><span style="color: #6F42C1">sqrt</span><span style="color: #24292E">(n </span><span style="color: #D73A49">*</span><span style="color: #24292E"> m)); j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (no.</span><span style="color: #6F42C1">count</span><span style="color: #24292E">(</span><span style="color: #6F42C1">make_pair</span><span style="color: #24292E">(a[i].id, b[j].id)))</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(a[i].w </span><span style="color: #D73A49">+</span><span style="color: #24292E"> b[j].w);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> q.</span><span style="color: #6F42C1">top</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>题解</category>
      
      <category>AtCoder</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>AtCoder</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023 SZTU-ACM迎新赛</title>
    <link href="/archives/4125702198/"/>
    <url>/archives/4125702198/</url>
    
    <content type="html"><![CDATA[<h2 id="写在前面">写在前面</h2><table><thead><tr><th style="text-align: center;">难度</th><th style="text-align: center;">题号</th><th style="text-align: center;">考察点</th></tr></thead><tbody><tr><td style="text-align: center;">签到</td><td style="text-align: center;"><span class="math inline">\(I\M\)</span></td><td style="text-align: center;">基本的语言知识</td></tr><tr><td style="text-align: center;">简单</td><td style="text-align: center;"><span class="math inline">\(L\ B\ G\E\)</span></td><td style="text-align: center;">枚举、贪心等基础算法思想</td></tr><tr><td style="text-align: center;">中等</td><td style="text-align: center;"><span class="math inline">\(D\ F\ K\H\)</span></td><td style="text-align: center;">基础算法和代码实现能力</td></tr><tr><td style="text-align: center;">困难</td><td style="text-align: center;"><span class="math inline">\(J\ A\C\)</span></td><td style="text-align: center;">基础算法的进阶</td></tr></tbody></table><blockquote><p>预估：冠军 <span class="math inline">\(8\)</span> 题，金牌 <spanclass="math inline">\(5\)</span> 题，银牌 <spanclass="math inline">\(4\)</span> 题</p></blockquote><h2 id="a-要迟到了">A 要迟到了！</h2><h3 id="考点">考点：</h3><ul><li>搜索</li><li>图论</li></ul><h3 id="题解">题解：</h3><blockquote><p>困难题</p></blockquote><h4 id="解法一两遍-bfs-onm-k">解法一：两遍 <spanclass="math inline">\(BFS\)</span> <span class="math inline">\(O(n*m +k)\)</span></h4><p>从起点开始做 <span class="math inline">\(BFS\)</span>记录从起点到每个位置只走路（每步时间为 <spanclass="math inline">\(t_1\)</span> ）的时间 <spanclass="math inline">\(t_{w}\)</span></p><p>从终点开始做 <span class="math inline">\(BFS\)</span>记录从终点到每个位置用单车（每步时间为 <spanclass="math inline">\(t_2\)</span> ）的时间 <spanclass="math inline">\(t_c\)</span></p><p>维护一个最小值 <span class="math inline">\(ans\)</span></p><p>遍历所有的单车的位置 <span class="math inline">\((i,j)\)</span>，此时 <span class="math inline">\(ans = min(ans,\ t_w[i][j] +t_c[i][j])\)</span></p><p>再额外判断一次如果不找单车，直接用走路的方式从起点到终点 <spanclass="math inline">\((i,j)\)</span> ，即 <spanclass="math inline">\(ans = min(ans,\ t_w[i][j])\)</span></p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #D73A49">e</span><span style="color: #005CC5">3</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m, t1, t2;</span></span><span class="line"><span style="color: #24292E">pair</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;</span><span style="color: #24292E"> S, T;</span></span><span class="line"><span style="color: #24292E">vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">pair</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;&gt;</span><span style="color: #24292E"> C;</span></span><span class="line"><span style="color: #D73A49">char</span><span style="color: #24292E"> mp[N][N];</span></span><span class="line"><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt;&gt; </span><span style="color: #6F42C1">t_w</span><span style="color: #24292E">(</span><span style="color: #6F42C1">N</span><span style="color: #24292E">, </span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt;(N, </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">));</span></span><span class="line"><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt;&gt; </span><span style="color: #6F42C1">t_c</span><span style="color: #24292E">(</span><span style="color: #6F42C1">N</span><span style="color: #24292E">, </span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt;(N, </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">));</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> dx[] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">};</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> dy[] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">};</span></span><span class="line"><span style="color: #D73A49">bool</span><span style="color: #24292E"> vis[N][N];</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">bfs</span><span style="color: #24292E">(</span><span style="color: #6F42C1">pair</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt; </span><span style="color: #E36209">PII</span><span style="color: #24292E">, </span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt;&gt; </span><span style="color: #D73A49">&amp;</span><span style="color: #E36209">t</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">dt</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">memset</span><span style="color: #24292E">(vis, </span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #D73A49">sizeof</span><span style="color: #24292E">(vis));</span></span><span class="line"><span style="color: #24292E">    queue</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">pair</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vis[PII.first][PII.second] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    t[PII.first][PII.second] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(</span><span style="color: #6F42C1">make_pair</span><span style="color: #24292E">(PII.first, PII.second));</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">q.</span><span style="color: #6F42C1">empty</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x </span><span style="color: #D73A49">=</span><span style="color: #24292E"> q.</span><span style="color: #6F42C1">front</span><span style="color: #24292E">().first;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> y </span><span style="color: #D73A49">=</span><span style="color: #24292E"> q.</span><span style="color: #6F42C1">front</span><span style="color: #24292E">().second;</span></span><span class="line"><span style="color: #24292E">        q.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">4</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> tx </span><span style="color: #D73A49">=</span><span style="color: #24292E"> x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> dx[i];</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ty </span><span style="color: #D73A49">=</span><span style="color: #24292E"> y </span><span style="color: #D73A49">+</span><span style="color: #24292E"> dy[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (tx </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> ty </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> tx </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">||</span><span style="color: #24292E"> ty </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">||</span><span style="color: #24292E"> vis[tx][ty] </span><span style="color: #D73A49">||</span><span style="color: #24292E"> mp[tx][ty] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;#&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">            vis[tx][ty] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            t[tx][ty] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> t[x][y] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> dt;</span></span><span class="line"><span style="color: #24292E">            q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(</span><span style="color: #6F42C1">make_pair</span><span style="color: #24292E">(tx, ty));</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t1 </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t2;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> mp[i][j];</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mp[i][j] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;S&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                S </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">make_pair</span><span style="color: #24292E">(i, j);</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mp[i][j] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;T&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                T </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">make_pair</span><span style="color: #24292E">(i, j);</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mp[i][j] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;C&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                C.</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">(</span><span style="color: #6F42C1">make_pair</span><span style="color: #24292E">(i, j));</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">bfs</span><span style="color: #24292E">(S, t_w, t1);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">bfs</span><span style="color: #24292E">(T, t_c, t2);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">0x</span><span style="color: #005CC5">3f3f3f3f</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> it : C)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> cx </span><span style="color: #D73A49">=</span><span style="color: #24292E"> it.first;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> cy </span><span style="color: #D73A49">=</span><span style="color: #24292E"> it.second;</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(ans, t_w[cx][cy] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> t_c[cx][cy]);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(ans, t_w[T.first][T.second]);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h4 id="解法二bfs优先队列-o2nm-log-nm">解法二：BFS+优先队列 <spanclass="math inline">\(O(2nm \log (nm))\)</span></h4><p>使用优先队列让最短时间在队首，时间相同的时候优先有车的。</p><p><span class="math inline">\(BFS\)</span>直到到达终点，此时的时间即为答案。若队列结束也没有到达终点则返回 <spanclass="math inline">\(-1\)</span></p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #D73A49">e</span><span style="color: #005CC5">3</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m, t1, t2;</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> sx, sy;</span></span><span class="line"><span style="color: #D73A49">char</span><span style="color: #24292E"> mp[N][N];</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> dx[] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">};</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> dy[] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">};</span></span><span class="line"><span style="color: #D73A49">bool</span><span style="color: #24292E"> vis[N][N][</span><span style="color: #005CC5">2</span><span style="color: #24292E">];</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">struct</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x, y, t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">bool</span><span style="color: #24292E"> flag;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">friend</span><span style="color: #24292E"> </span><span style="color: #D73A49">bool</span><span style="color: #24292E"> </span><span style="color: #D73A49">operator</span><span style="color: #6F42C1">&lt;</span><span style="color: #24292E">(</span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span><span style="color: #24292E"> </span><span style="color: #E36209">a</span><span style="color: #24292E">, </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span><span style="color: #24292E"> </span><span style="color: #E36209">b</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a.t </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> b.t)</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E"> a.t </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> b.t;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> a.flag </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> b.flag;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">};</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">bfs</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    priority_queue</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">node</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({sx, sy, </span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">0</span><span style="color: #24292E">});</span></span><span class="line"><span style="color: #24292E">    vis[sx][sy][</span><span style="color: #005CC5">0</span><span style="color: #24292E">] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">q.</span><span style="color: #6F42C1">empty</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        node now </span><span style="color: #D73A49">=</span><span style="color: #24292E"> q.</span><span style="color: #6F42C1">top</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x </span><span style="color: #D73A49">=</span><span style="color: #24292E"> now.x;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> y </span><span style="color: #D73A49">=</span><span style="color: #24292E"> now.y;</span></span><span class="line"><span style="color: #24292E">        q.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mp[x][y] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;T&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E"> now.t;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">4</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> tx </span><span style="color: #D73A49">=</span><span style="color: #24292E"> x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> dx[i];</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ty </span><span style="color: #D73A49">=</span><span style="color: #24292E"> y </span><span style="color: #D73A49">+</span><span style="color: #24292E"> dy[i];</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> tt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> now.t </span><span style="color: #D73A49">+</span><span style="color: #24292E"> (now.flag </span><span style="color: #D73A49">?</span><span style="color: #24292E"> t2 </span><span style="color: #D73A49">:</span><span style="color: #24292E"> t1);</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">bool</span><span style="color: #24292E"> flag </span><span style="color: #D73A49">=</span><span style="color: #24292E"> now.flag </span><span style="color: #D73A49">||</span><span style="color: #24292E"> mp[tx][ty] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;C&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (tx </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> ty </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> tx </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">||</span><span style="color: #24292E"> ty </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">||</span><span style="color: #24292E"> vis[tx][ty][flag] </span><span style="color: #D73A49">||</span><span style="color: #24292E"> mp[tx][ty] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;#&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">            vis[tx][ty][flag] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            q.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({tx, ty, tt, flag});</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t1 </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t2;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> mp[i][j];</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mp[i][j] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;S&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                sx </span><span style="color: #D73A49">=</span><span style="color: #24292E"> i, sy </span><span style="color: #D73A49">=</span><span style="color: #24292E"> j;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">bfs</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="b-打怪兽">B 打怪兽</h2><h3 id="考点-1">考点：</h3><ul><li>遍历</li></ul><h3 id="题解-1">题解：</h3><blockquote><p>简单题</p></blockquote><p>遍历所有的怪兽，求出每个怪兽对任何一个小蔡的最短距离，输出其中的最大值即可。</p><p>复杂度： <span class="math inline">\(O(n*k)\)</span></p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, k;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> k;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v</span><span style="color: #24292E">(k </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> k; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">pair</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i].first </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i].second;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">double</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a[i].first;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> y </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a[i].second;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">double</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">18</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> k; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> xx </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a[v[j]].first;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> yy </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a[v[j]].second;</span></span><span class="line"><span style="color: #24292E">            t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(t, </span><span style="color: #6F42C1">sqrt</span><span style="color: #24292E">(</span><span style="color: #6F42C1">pow</span><span style="color: #24292E">(x </span><span style="color: #D73A49">-</span><span style="color: #24292E"> xx, </span><span style="color: #005CC5">2</span><span style="color: #24292E">) </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #6F42C1">pow</span><span style="color: #24292E">(y </span><span style="color: #D73A49">-</span><span style="color: #24292E"> yy, </span><span style="color: #005CC5">2</span><span style="color: #24292E">)));</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(ans, t);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> fixed </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">setprecision</span><span style="color: #24292E">(</span><span style="color: #005CC5">10</span><span style="color: #24292E">) </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="c-演唱会">C 演唱会</h2><h3 id="考点-2">考点：</h3><ul><li>动态规划</li></ul><h3 id="题解-2">题解：</h3><blockquote><p>困难题</p></blockquote><p>定义了一个结构体 <code>node</code>，其中包含了每一天的信息，包括慧慧可以完成的任务数量 <spanclass="math inline">\(l\)</span> ，完成一项任务的薪资 <spanclass="math inline">\(q\)</span> ，以及这一天是哪一天 <spanclass="math inline">\(s\)</span>。此外，我们还计算了这一天可以完成任务的时间段 <spanclass="math inline">\(ledge\)</span> 和 <spanclass="math inline">\(redge\)</span> 。</p><p>定义了一个二维数组 <code>dp</code> ，其中 <code>dp[i][j]</code>表示在第 <span class="math inline">\(i\)</span>天结束时，如果慧慧选择最后提前做到第 <spanclass="math inline">\(j\)</span> 天工作，她可以获得的最大收入。</p><p>对于每一天，我们有两种选择：要么选择工作，要么选择休息。如果选择工作，我们需要更新<code>dp[i][j]</code>的值。为了找到最优的工作日期，我们使用了一个优先队列 <code>que</code>来存储可能的工作日期。在每一天结束时，我们检查队列中的任务是否可以在当前日期完成，如果可以，我们就更新<code>dp[i][j]</code> 的值。</p><p>优先队列 <code>que</code> 的作用是帮助我们在 <spanclass="math inline">\(O(1)\)</span>的时间复杂度内找到最优的工作日期。具体来说，优先队列中存储的是一对值，第一个值是<span class="math inline">\(dp[i - 1][j] - j * day[i].q\)</span>，表示如果在第 <span class="math inline">\(j\)</span>天工作，那么慧慧可以获得的收入；第二个值是 <spanclass="math inline">\(j\)</span> ，表示这一天是哪一天。</p><p>在每一天结束时，我们检查队列中的任务是否可以在当前日期完成，如果可以，我们就更新<code>dp[i][j]</code>的值。为了实现这一点，我们在每一天开始时，都会将可能的工作日期添加到优先队列中。然后，在每一天结束时，我们检查队列的顶部元素，如果这一天的任务可以在当前日期完成，那么我们就从队列中弹出这个元素，并更新<code>dp[i][j]</code> 的值。</p><p>最后，我们遍历 <code>dp[k]</code>数组，找到最大的收入，这就是慧慧可以获得的最大收入。</p><p>复杂度： <span class="math inline">\(O(n*k)\)</span></p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">16000</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">struct</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> s, l, q;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ledge, redge;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">friend</span><span style="color: #24292E"> </span><span style="color: #D73A49">bool</span><span style="color: #24292E"> </span><span style="color: #D73A49">operator</span><span style="color: #6F42C1">&lt;</span><span style="color: #24292E">(</span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;</span><span style="color: #E36209">a</span><span style="color: #24292E">, </span><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;</span><span style="color: #E36209">b</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> a.s </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> b.s;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">} day[</span><span style="color: #005CC5">105</span><span style="color: #24292E">];</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> n, k;</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> dp[</span><span style="color: #005CC5">105</span><span style="color: #24292E">][N];</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> k;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> k; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> day[i].l </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> day[i].q </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> day[i].s;</span></span><span class="line"><span style="color: #24292E">        day[i].ledge </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">, day[i].s </span><span style="color: #D73A49">-</span><span style="color: #24292E"> day[i].l);</span></span><span class="line"><span style="color: #24292E">        day[i].redge </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(n, day[i].s </span><span style="color: #D73A49">+</span><span style="color: #24292E"> day[i].l </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(day </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, day </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> k);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> k; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> day[i].s; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            dp[i][j] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> dp[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">][j];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        priority_queue</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">pair</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;&gt;</span><span style="color: #24292E"> que;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> day[i].ledge; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> day[i].s; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> cur </span><span style="color: #D73A49">=</span><span style="color: #24292E"> dp[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">][j] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> j </span><span style="color: #D73A49">*</span><span style="color: #24292E"> day[i].q;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">que.</span><span style="color: #6F42C1">empty</span><span style="color: #24292E">() </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> dp[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">][que.</span><span style="color: #6F42C1">top</span><span style="color: #24292E">().second] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> que.</span><span style="color: #6F42C1">top</span><span style="color: #24292E">().second </span><span style="color: #D73A49">*</span><span style="color: #24292E"> day[i].q </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> cur)</span></span><span class="line"><span style="color: #24292E">                que.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">            que.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">({cur, j});</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> day[i].s; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> day[i].redge; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">que.</span><span style="color: #6F42C1">empty</span><span style="color: #24292E">() </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> que.</span><span style="color: #6F42C1">top</span><span style="color: #24292E">().second </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> day[i].l)</span></span><span class="line"><span style="color: #24292E">                que.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">            dp[i][j] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(dp[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">][j], dp[i][j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">]);</span></span><span class="line"><span style="color: #24292E">            dp[i][j] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(dp[i][j], dp[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">][que.</span><span style="color: #6F42C1">top</span><span style="color: #24292E">().second] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> (j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> que.</span><span style="color: #6F42C1">top</span><span style="color: #24292E">().second) </span><span style="color: #D73A49">*</span><span style="color: #24292E"> day[i].q);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> day[i].redge </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            dp[i][j] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(dp[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">][j], dp[i][j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">]);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(ans, dp[k][i]);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="d-总要赢一次吧">D 总要赢一次吧</h2><h3 id="考点-3">考点：</h3><ul><li><span class="math inline">\(bash\)</span> 博弈</li></ul><h3 id="题解-3">题解：</h3><blockquote><p>中等题</p></blockquote><p>由题可知，本题需要找先手必胜的条件。</p><p>对于总量为 <span class="math inline">\(v\)</span>升的酒，如果每人每次只能喝 <span class="math inline">\(1 \sim k\)</span>升的酒。想赢就需要让对方喝完后还有剩余，并且在 <spanclass="math inline">\(1 \sim k\)</span> 升之间。所以只要让酒一直是 <spanclass="math inline">\(n(k+1)\ (n \in N)\)</span> 升就一定能够赢。</p><p>证明：当酒为 <span class="math inline">\(n(k+1)\ (n \in N)\)</span>时，如果对方喝 <span class="math inline">\(a\)</span> 升，我们一定能找到<span class="math inline">\(b\)</span> 满足 <spanclass="math inline">\(a+b=k+1\)</span> ，重复此过程，直到还有 <spanclass="math inline">\(k+1\)</span>升酒。此时不论对方喝多少，我们都可以喝最后一次。</p><p>故我们只需要找到满足 <span class="math inline">\(v\%(k+1)\ne0\)</span> 的情况，此时先手必胜，找出最大的k即可。</p><p>复杂度： <span class="math inline">\(O(n*m)\)</span></p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> v, m, k, ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (m</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> k;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (v </span><span style="color: #D73A49">%</span><span style="color: #24292E"> (k </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">))</span></span><span class="line"><span style="color: #24292E">                ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(ans, k);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (ans </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            cnt</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> (cnt </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">?</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;successful&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;I can&#39;t help you&quot;</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="e-臭袜子">E 臭袜子</h2><h3 id="考点-4">考点：</h3><ul><li>STL</li></ul><h3 id="题解-4">题解：</h3><blockquote><p>简单题</p></blockquote><p>使用 <code>map</code> 嵌套 <code>pair</code>进行编号的计数，答案更新的情况有两种，一种是出现的次数比现在的更多，一种是次数相同但是第一次出现的更早。</p><p>复杂度： <span class="math inline">\(O(n)\)</span></p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">map</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">pair</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;</span><span style="color: #24292E"> cnt;</span></span><span class="line"><span style="color: #24292E">map</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">pair</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">pair</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;</span><span style="color: #24292E"> ans;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        pair</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;</span><span style="color: #24292E"> now;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> now.first </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> now.second;</span></span><span class="line"><span style="color: #24292E">        cnt[now]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (t.</span><span style="color: #6F42C1">count</span><span style="color: #24292E">(now) </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            t[now] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> i;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (cnt[now] </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> cnt[ans] </span><span style="color: #D73A49">||</span><span style="color: #24292E"> cnt[now] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> cnt[ans] </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> t[now] </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> t[ans])</span></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> now;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> cnt[ans] </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans.first </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans.second;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="f-我要上厕所">F 我要上厕所！</h2><h3 id="考点-5">考点：</h3><ul><li>模拟</li><li>STL</li><li>分治</li></ul><h3 id="题解-5">题解：</h3><blockquote><p>中等题</p></blockquote><h4 id="解法一分治-onlog-n">解法一：分治 <spanclass="math inline">\(O(n\log n)\)</span></h4><p>分：将数组分成两半，直到只有一个元素</p><p>治：当只有一个元素的时候这个部分的最大就是它本身</p><p>合：将两个数组和在一起的时候是哪种情况：</p><ol type="1"><li>最大子数组是其左侧数组的最大子数组</li><li>最大子数组是其右侧数组的最大子数组</li><li>最大子数组出现在中间位置：从中间向两侧分别加起来，找到分别的最大值然后求和</li></ol><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">5</span><span style="color: #D73A49">e</span><span style="color: #005CC5">4</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">findmid</span><span style="color: #24292E">(</span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt; </span><span style="color: #D73A49">&amp;</span><span style="color: #E36209">a</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">l</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">mid</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">r</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> left_max </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> left_sum </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> mid; i </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> l; i</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        left_sum </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> a[i];</span></span><span class="line"><span style="color: #24292E">        left_max </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(left_max, left_sum);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> right_max </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> right_sum </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> mid </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> r; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        right_sum </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> a[i];</span></span><span class="line"><span style="color: #24292E">        right_max </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(right_max, right_sum);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> left_max </span><span style="color: #D73A49">+</span><span style="color: #24292E"> right_max;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">find</span><span style="color: #24292E">(</span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt; </span><span style="color: #D73A49">&amp;</span><span style="color: #E36209">a</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">l</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">r</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">==</span><span style="color: #24292E"> r)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> a[l];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mid </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">+</span><span style="color: #24292E"> r) </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> left_max </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">find</span><span style="color: #24292E">(a, l, mid);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> right_max </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">find</span><span style="color: #24292E">(a, mid </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, r);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mid_max </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">findmid</span><span style="color: #24292E">(a, l, mid, r);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">({mid_max, left_max, right_max});</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    map</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">string, </span><span style="color: #D73A49">bool&gt;</span><span style="color: #24292E"> out;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(N), </span><span style="color: #6F42C1">b</span><span style="color: #24292E">(N);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> k, f, t;</span></span><span class="line"><span style="color: #24292E">        string s;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> k </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> f </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> s </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> ((k </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> s[</span><span style="color: #005CC5">0</span><span style="color: #24292E">] </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;m&#39;</span><span style="color: #24292E">) </span><span style="color: #D73A49">||</span><span style="color: #24292E"> (k </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> s[</span><span style="color: #005CC5">0</span><span style="color: #24292E">] </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;n&#39;</span><span style="color: #24292E">))</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (f </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            out[s] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (k </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                a[t]</span><span style="color: #D73A49">--</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">                b[t]</span><span style="color: #D73A49">--</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (out[s])</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            out[s] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (k </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                a[t]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">                b[t]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">find</span><span style="color: #24292E">(a, </span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">50000</span><span style="color: #24292E">) </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">find</span><span style="color: #24292E">(b, </span><span style="color: #005CC5">0</span><span style="color: #24292E">, </span><span style="color: #005CC5">50000</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h4 id="解法二dp-on">解法二：dp <spanclass="math inline">\(O(n)\)</span></h4><p>这里对 <span class="math inline">\(dp\)</span> 数组的定义为 以为第<span class="math inline">\(i\)</span> 秒为结尾的最大子数组和为<code>dp[i]</code> 。</p><p>状态转移方程为 <span class="math inline">\(dp[i] = max(nums[i],\ dp[i- 1] + nums[i])\)</span> ，即如果加上第 <spanclass="math inline">\(i\)</span>秒更优就加，否则重新开始一段子数组。</p><p>注意到 <code>dp[i]</code> 仅仅和 <code>dp[i-1]</code>的状态有关，所以可以直接在原数组操作。</p><p>有 <span class="math inline">\(nums[i] = max(nums[i],\ nums[i - 1] +nums[i])\)</span></p><p>输出其中的最大值即可</p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">5</span><span style="color: #D73A49">e</span><span style="color: #005CC5">4</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">dp</span><span style="color: #24292E">(</span><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt; </span><span style="color: #D73A49">&amp;</span><span style="color: #E36209">a</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> res </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a[</span><span style="color: #005CC5">0</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">50000</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        a[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(a[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> a[i], a[i]);</span></span><span class="line"><span style="color: #24292E">        res </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(res, a[i]);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> res;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    map</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">string, </span><span style="color: #D73A49">bool&gt;</span><span style="color: #24292E"> out;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(N), </span><span style="color: #6F42C1">b</span><span style="color: #24292E">(N);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> k, f, t;</span></span><span class="line"><span style="color: #24292E">        string s;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> k </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> f </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> s </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> ((k </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> s[</span><span style="color: #005CC5">0</span><span style="color: #24292E">] </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;m&#39;</span><span style="color: #24292E">) </span><span style="color: #D73A49">||</span><span style="color: #24292E"> (k </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> s[</span><span style="color: #005CC5">0</span><span style="color: #24292E">] </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;n&#39;</span><span style="color: #24292E">))</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (f </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            out[s] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (k </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                a[t]</span><span style="color: #D73A49">--</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">                b[t]</span><span style="color: #D73A49">--</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (out[s])</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            out[s] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (k </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                a[t]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">                b[t]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">dp</span><span style="color: #24292E">(a) </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">dp</span><span style="color: #24292E">(b);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="g-faker的阿卡丽">G Faker的阿卡丽</h2><h3 id="考点-6">考点：</h3><ul><li>贪心</li></ul><h3 id="题解-6">题解：</h3><blockquote><p>简单题</p></blockquote><p>我们可以一开始就使用 <span class="math inline">\(w\)</span> ，增加<span class="math inline">\(b\)</span> 点能量和 <spanclass="math inline">\(1\)</span> 点帅气值</p><p>然后我们将使用技能和普通攻击算作一个整体，即每次消耗 <spanclass="math inline">\(min(a,c)-d\)</span> 点能量，增加 <spanclass="math inline">\(2\)</span> 点帅气值</p><p>但是这样我们需要先把最后一次处理，因为此时的能量并不够我们先用再加，直接记为增加<span class="math inline">\(2\)</span> 点帅气值即可。</p><p>复杂度： <span class="math inline">\(O(1)\)</span></p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, a, b, c, d;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> b </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> c </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> d;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    n </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> b;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(a, c);</span></span><span class="line"><span style="color: #24292E">    n </span><span style="color: #D73A49">-=</span><span style="color: #24292E"> t;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> n </span><span style="color: #D73A49">/</span><span style="color: #24292E"> (t </span><span style="color: #D73A49">-</span><span style="color: #24292E"> d) </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #D73A49">LL</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="h-挑区间">H 挑区间</h2><h3 id="考点-7">考点：</h3><ul><li>前缀和</li></ul><h3 id="题解-7">题解：</h3><blockquote><p>中等题</p></blockquote><p>对于一段区间 <span class="math inline">\([l,r]\)</span> <spanclass="math inline">\((1 \le l \le r \le n)\)</span>我们可以预处理出前缀和数组 <code>pre</code> 和后缀和数组<code>suf</code> ，<code>pre[i]</code> 表示这 <spanclass="math inline">\([1,i]\)</span> 之间的累加和， <code>suf[i]</code>表示 <span class="math inline">\([i,n]\)</span> 之间的累加和。</p><p>我们可以把序列分为三段 <spanclass="math inline">\([1,l-1],[l,r],[r+1,n]\)</span> 。其中 <spanclass="math inline">\([1,l-1]\)</span> 和 <spanclass="math inline">\([r+1,1]\)</span> 我们通过前后缀和查询复杂度为<span class="math inline">\(O(1)\)</span></p><p>对于 <span class="math inline">\([l,r]\)</span> 我们枚举每一个左端点<span class="math inline">\(l\)</span> ，遍历所有的可能区间 <spanclass="math inline">\([l,r]\)</span> ，复杂度为 <spanclass="math inline">\(O(n^2)\)</span>。需要注意的是边界的情况需要特判。</p><p>复杂度： <span class="math inline">\(O(n^2)\)</span></p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, d;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> d;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">), </span><span style="color: #6F42C1">b</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">ll</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">pre</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">), </span><span style="color: #6F42C1">suf</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        pre[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> pre[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> a[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">]);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        suf[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> suf[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> a[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">]);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    ll ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> l </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; l </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; l</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        b </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a;</span></span><span class="line"><span style="color: #24292E">        ll tmp </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> r </span><span style="color: #D73A49">=</span><span style="color: #24292E"> l; r </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(l </span><span style="color: #D73A49">+</span><span style="color: #24292E"> d </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, n); r</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            b[r] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> r;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (r </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                tmp </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(b[r] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> b[r </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">]);</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (r </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> n)</span></span><span class="line"><span style="color: #24292E">                tmp </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(b[r] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> b[r </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">]);</span></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(ans, pre[l </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> suf[r </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> tmp);</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (r </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> n)</span></span><span class="line"><span style="color: #24292E">                tmp </span><span style="color: #D73A49">-=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(b[r] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> b[r </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">]);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="i-四季">I 四季</h2><h3 id="考点-8">考点：</h3><ul><li>基础语法</li></ul><h3 id="题解-8">题解：</h3><blockquote><p>签到题</p></blockquote><p>顺带考察常识：</p><ul><li><span class="math inline">\(3,4,5\)</span> 是春天</li><li><span class="math inline">\(6,7,8\)</span> 是夏天</li><li><span class="math inline">\(9,10,11\)</span> 是秋天</li><li><span class="math inline">\(12,1,2\)</span> 是冬天</li></ul><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;winter&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">5</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;spring&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">8</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;summer&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">11</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;autumn&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;winter&quot;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="j-飞升">J 飞升</h2><h3 id="考点-9">考点：</h3><ul><li>二分</li></ul><h3 id="题解-9">题解：</h3><blockquote><p>困难题</p></blockquote><p>对每个人的能力值进行二分，找到满足条件的最大值</p><p>二分边界为 <span class="math inline">\([a[i],a[i]+k]\)</span>，即一次都不用和 <span class="math inline">\(k\)</span>次都用在他身上</p><p>对于 <code>check()</code>函数，从当前这位开始，向右边累加构造出阶梯型需要多少次操作。判断需要的次数<span class="math inline">\(cnt\)</span> 是否满足 <spanclass="math inline">\(cnt\le k\)</span> 即可</p><p>复杂度： <span class="math inline">\(O(n log n)\)</span></p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">3</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt; </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(</span><span style="color: #6F42C1">N</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> n, k;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">bool</span><span style="color: #24292E"> </span><span style="color: #6F42C1">check</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">x</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">i</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    ll cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> p </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> p </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; p</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> p] </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">-</span><span style="color: #24292E"> p))</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (cnt </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> k)</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        cnt </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">-</span><span style="color: #24292E"> p) </span><span style="color: #D73A49">-</span><span style="color: #24292E"> a[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> p];</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> k;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> l </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a[i], r </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a[i] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> k, tmp;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> r)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mid </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">+</span><span style="color: #24292E"> r) </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #6F42C1">check</span><span style="color: #24292E">(mid, i))</span></span><span class="line"><span style="color: #24292E">                tmp </span><span style="color: #D73A49">=</span><span style="color: #24292E"> mid, l </span><span style="color: #D73A49">=</span><span style="color: #24292E"> mid </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">                r </span><span style="color: #D73A49">=</span><span style="color: #24292E"> mid </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(ans, tmp);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="k-fx-floorlog₂x">K f(x) = floor(log₂(x))</h2><h3 id="考点-10">考点：</h3><ul><li>数学</li></ul><h3 id="题解-10">题解：</h3><blockquote><p>中等题</p></blockquote><p>先预处理 <span class="math inline">\(10^{18}\)</span> 内所有 <spanclass="math inline">\(2\)</span> 的指数幂</p><p>然后一段一段的累加得到 <span class="math inline">\(1 \sim l\)</span>的和，同理得到 <span class="math inline">\(1 \sim r\)</span> 的和</p><p>做差即可得到结果</p><p>复杂度： <span class="math inline">\(O(q \log r)\)</span></p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">9</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">7</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">ll v[</span><span style="color: #005CC5">100</span><span style="color: #24292E">] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span><span style="color: #005CC5">1</span><span style="color: #24292E">};</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">63</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        v[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> v[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> q;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (q</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        ll l, r;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> l </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> r;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        ll a </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">, b </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">, p;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        p </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">upper_bound</span><span style="color: #24292E">(v, v </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">63</span><span style="color: #24292E">, l) </span><span style="color: #D73A49">-</span><span style="color: #24292E"> v </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> p; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            a </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> ((v[i] </span><span style="color: #D73A49">%</span><span style="color: #24292E"> mod) </span><span style="color: #D73A49">*</span><span style="color: #24292E"> i) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> mod;</span></span><span class="line"><span style="color: #24292E">            a </span><span style="color: #D73A49">%=</span><span style="color: #24292E"> mod;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        a </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> p </span><span style="color: #D73A49">*</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">-</span><span style="color: #24292E"> v[p]) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> mod;</span></span><span class="line"><span style="color: #24292E">        a </span><span style="color: #D73A49">%=</span><span style="color: #24292E"> mod;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        p </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">upper_bound</span><span style="color: #24292E">(v, v </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">63</span><span style="color: #24292E">, r) </span><span style="color: #D73A49">-</span><span style="color: #24292E"> v </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> p; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            b </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> ((v[i] </span><span style="color: #D73A49">%</span><span style="color: #24292E"> mod) </span><span style="color: #D73A49">*</span><span style="color: #24292E"> i) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> mod;</span></span><span class="line"><span style="color: #24292E">            b </span><span style="color: #D73A49">%=</span><span style="color: #24292E"> mod;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        b </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> p </span><span style="color: #D73A49">*</span><span style="color: #24292E"> ((r </span><span style="color: #D73A49">-</span><span style="color: #24292E"> v[p] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> mod);</span></span><span class="line"><span style="color: #24292E">        b </span><span style="color: #D73A49">%=</span><span style="color: #24292E"> mod;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> (b </span><span style="color: #D73A49">-</span><span style="color: #24292E"> a </span><span style="color: #D73A49">+</span><span style="color: #24292E"> mod) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="l-哪个倒霉蛋还得再体测一次">L 哪个倒霉蛋还得再体测一次</h2><h3 id="考点-11">考点：</h3><ul><li>递推</li></ul><h3 id="题解-11">题解：</h3><blockquote><p>简单题</p></blockquote><h4 id="解法一递推">解法一：递推</h4><p>易知： <span class="math inline">\(a[n]=\sum_{i=1}^{n/2}a[i]+1\)</span></p><p>复杂度： <span class="math inline">\(O(n^2)\)</span></p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> a[</span><span style="color: #005CC5">1010</span><span style="color: #24292E">];</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> i </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            a[i] </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> a[j];</span></span><span class="line"><span style="color: #24292E">        a[i]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> a[n];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h4 id="解法二递归记忆化">解法二：递归+记忆化</h4><p>将递归的结果先存起来，下次遇到就不用再递归下去</p><p>复杂度： <span class="math inline">\(O(n \log n)\)</span></p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> a[</span><span style="color: #005CC5">1010</span><span style="color: #24292E">];</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">func</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">n</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a[n])</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> a[n];</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> sum </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">; </span><span style="color: #D73A49">++</span><span style="color: #24292E">i)</span></span><span class="line"><span style="color: #24292E">        sum </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">func</span><span style="color: #24292E">(i);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> a[n] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> sum;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">func</span><span style="color: #24292E">(n);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h4 id="解法三打表">解法三：打表</h4><p>以下是打表的代码</p><p>做表大概十分钟，打完表复杂度为 <spanclass="math inline">\(O(1)\)</span></p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">func</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">n</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> sum </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        sum </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">func</span><span style="color: #24292E">(i);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> sum;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;int a[1010]={0&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1000</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;,&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">func</span><span style="color: #24292E">(i);</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;};&quot;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="m-差分是你的谎言o.o">M 差分是你的谎言O.o</h2><h3 id="考点-12">考点：</h3><ul><li>基础语法</li></ul><h3 id="题解-12">题解：</h3><blockquote><p>签到题</p></blockquote><p>按照题意，用 <code>for</code> 构造出 <spanclass="math inline">\(b\)</span> 数组即可</p><p>复杂度： <span class="math inline">\(O(n)\)</span></p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">)-&gt;ios::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n), </span><span style="color: #6F42C1">b</span><span style="color: #24292E">(n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        b[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> a[i]);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (i)</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> b[i];</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>题解</category>
      
      <category>SZTU_ACM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>SZTU_ACM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AtCoder Beginner Contest 330</title>
    <link href="/archives/1886849196/"/>
    <url>/archives/1886849196/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="https://atcoder.jp/contests/abc330">AtCoder BeginnerContest 330</a></li></ul><h2 id="a">A</h2><h3 id="思路">思路</h3><p>满足 <span class="math inline">\(x \ge l\)</span> 的 <spanclass="math inline">\(x\)</span> 的个数即可</p><h3 id="code">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, l;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> l;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> l)</span></span><span class="line"><span style="color: #24292E">            ans</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="b">B</h2><h3 id="思路-1">思路</h3><p>如果满足 <span class="math inline">\(L \le A_i \le R\)</span> 输出<span class="math inline">\(A_i\)</span></p><p>如果满足 <span class="math inline">\(A_i \lt L\)</span> 输出 <spanclass="math inline">\(L\)</span></p><p>如果满足 <span class="math inline">\(A_i \gt R\)</span> 输出 <spanclass="math inline">\(R\)</span></p><h3 id="code-1">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, l, r;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> l </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> r;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> l)</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> l </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> r)</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> r </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> x </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="c">C</h2><h3 id="思路-2">思路</h3><p>令 <span class="math inline">\(x\)</span> 从 <spanclass="math inline">\(0\)</span> 遍历到 <spanclass="math inline">\(\lceil \sqrt{D}\rceil\)</span> ，如果 <spanclass="math inline">\(x\)</span> 大于 <span class="math inline">\(\lceil\sqrt{D}\rceil\)</span> ，那么设置 <spanclass="math inline">\(y=0\)</span> 是最优的，但这里的 <spanclass="math inline">\(|x^2+y^2-D|\)</span> 明显大于 <spanclass="math inline">\(x=\lceil \sqrt{D}\rceil\)</span> 和 <spanclass="math inline">\(y=0\)</span> 时。</p><p>对一个 <span class="math inline">\(x\)</span> 最佳的 <spanclass="math inline">\(y\)</span> 为 <spanclass="math inline">\(y=\lfloor \sqrt{-C}\rfloor\)</span> 或 <spanclass="math inline">\(y=\lceil\sqrt{-C}\rceil\)</span>，可以直接算出这时候的值，更新 <span class="math inline">\(ans\)</span>。</p><h3 id="code-2">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    ll d;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> d;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    ll ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">0x</span><span style="color: #005CC5">7fffffff</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">*</span><span style="color: #24292E"> i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> d; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        ll x </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">LL</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> i </span><span style="color: #D73A49">*</span><span style="color: #24292E"> i;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> d)</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">break</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        ll y1 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">sqrt</span><span style="color: #24292E">(d </span><span style="color: #D73A49">-</span><span style="color: #24292E"> x);</span></span><span class="line"><span style="color: #24292E">        ll y2 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> y1 </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">({ans, </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">((x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> y1 </span><span style="color: #D73A49">*</span><span style="color: #24292E"> y1) </span><span style="color: #D73A49">-</span><span style="color: #24292E"> d), </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">((x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> y2 </span><span style="color: #D73A49">*</span><span style="color: #24292E"> y2) </span><span style="color: #D73A49">-</span><span style="color: #24292E"> d)});</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="d">D</h2><h3 id="思路-3">思路</h3><p>记录每一行每一列有多少 <span class="math inline">\(o\)</span>，最后遍历每个 <span class="math inline">\(o\)</span>看这行这列还有多少其余的 <span class="math inline">\(o\)</span>，算出方案数累加即可。</p><h3 id="code-3">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #D73A49">e</span><span style="color: #005CC5">3</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">char</span><span style="color: #24292E"> mp[N][N];</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> a[N], b[N];</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> mp[i][j];</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mp[i][j] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;o&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                a[i]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mp[i][j] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;o&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                b[j]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    ll ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (mp[i][j] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;o&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">LL</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> (a[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">) </span><span style="color: #D73A49">*</span><span style="color: #24292E"> (b[j] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="e">E</h2><h3 id="思路-4">思路</h3><p>使用 <code>set</code> 的自动排序和去重来计算 <spanclass="math inline">\(mex\)</span> ，即存储有哪些数不在序列中。</p><p>由于序列长度仅为 <span class="math inline">\(n\)</span> 故超过 <spanclass="math inline">\(n\)</span> 的数我们不对 <code>set</code>进行操作。</p><p>使用一个数组存储当前的序列每个数有多少个，当出现 <spanclass="math inline">\(0\rightarrow 1\)</span> 和 <spanclass="math inline">\(1 \rightarrow 0\)</span> 的变化时，更新<code>set</code> 。</p><h3 id="code-4">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, q;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">), </span><span style="color: #6F42C1">cnt</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    set</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> st;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a[i] </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n)</span></span><span class="line"><span style="color: #24292E">            cnt[a[i]]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">cnt[i])</span></span><span class="line"><span style="color: #24292E">            st.</span><span style="color: #6F42C1">insert</span><span style="color: #24292E">(i);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (q</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> i, x;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> i </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a[i] </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cnt[a[i]]</span><span style="color: #D73A49">--</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (cnt[a[i]] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                st.</span><span style="color: #6F42C1">insert</span><span style="color: #24292E">(a[i]);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cnt[x]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (cnt[x] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                st.</span><span style="color: #6F42C1">erase</span><span style="color: #24292E">(x);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        a[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E">st.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">() </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>题解</category>
      
      <category>AtCoder</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>AtCoder</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SZTU Monthly 2023 Nov.</title>
    <link href="/archives/1599660916/"/>
    <url>/archives/1599660916/</url>
    
    <content type="html"><![CDATA[<blockquote><p><ahref="http://acm.sztu.edu.cn/csgoj/contest/problemset?cid=1048">比赛链接</a></p></blockquote><h2 id="写在前面">写在前面</h2><h3 id="题目难度">题目难度：</h3><p>这次比赛难度划分是两道简单题，两道中等题，两道困难题。 <spanclass="math inline">\(DA\)</span> 简单题 ， <spanclass="math inline">\(BF\)</span> 中等题， <spanclass="math inline">\(CE\)</span> 困难题。</p><p>题目难度都不大，需要注意的细节较多</p><h2 id="a-魔法少女英梨梨">A 魔法少女英梨梨</h2><h3 id="考点">考点：</h3><ul><li>思维</li><li>博弈论</li></ul><h3 id="题解">题解：</h3><p>每人进行一次操作之后都会改变牌桌上的 <spanclass="math inline">\(1\)</span> 的个数的奇偶性。</p><p>平局的情况：</p><ul><li>能添加的 <span class="math inline">\(1\)</span> 小于 <spanclass="math inline">\(k\)</span> 且初始牌桌上不是刚好差一张</li><li>全场的 <span class="math inline">\(1\)</span> 都凑不出 <spanclass="math inline">\(k\)</span></li></ul><p>先手赢：</p><ul><li>初始牌桌上的 <span class="math inline">\(1\)</span> 的个数和 <spanclass="math inline">\(k\)</span> 的奇偶性不同，即操作后奇偶性相同</li><li>初始牌桌刚好差一张，可以从牌堆中加牌</li><li>初始牌桌已经满足胜利条件</li></ul><p>其余情况就是后手赢</p><h3 id="ac-code">AC Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    ll n, k, c;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> k </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> c;</span></span><span class="line"><span style="color: #24292E">    string s;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> s;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">(); i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (s[i] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;1&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            cnt</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (c </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> k </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> k </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">+</span><span style="color: #24292E"> c </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> k)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;GG!&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> ((cnt </span><span style="color: #D73A49">+</span><span style="color: #24292E"> k) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> (k </span><span style="color: #D73A49">==</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> c </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">) </span><span style="color: #D73A49">||</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> k)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;Eriri win!&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;Megumi kato win!&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="b-堕落星球">B 堕落星球</h2><h3 id="考点-1">考点：</h3><ul><li>思维</li><li>排序</li></ul><h3 id="题解-1">题解：</h3><p>考虑距离的最小值即为横坐标相减的最小值与纵坐标相减的和的最小值</p><p>我们将序列进行排序，每个点与相邻的两个点之间的差值一定小于其他点，故我们选前<span class="math inline">\(n\)</span> 个为横坐标，后 <spanclass="math inline">\(n\)</span> 个为纵坐标即可。</p><p>数据量很小，也可以选择用 <span class="math inline">\(O(n^2)\)</span>的排序，如冒泡排序。</p><p>这里的排序升序和降序不影响结果。</p><h3 id="ac-code-1">AC Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(</span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> n);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(</span><span style="color: #6F42C1">all</span><span style="color: #24292E">(a));</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    ll ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> a[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> a[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> a[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> n] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> a[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="c-我想吃烤鸭">C 我想吃烤鸭</h2><h3 id="考点-2">考点：</h3><ul><li>二分</li></ul><h3 id="题解-2">题解：</h3><p>考虑二分答案，对毒素的持续时间进行二分。</p><p>需要注意的是，鸭鸭恶霸的生命值可能高达 <spanclass="math inline">\(10^{18}\)</span> ，故 <code>check</code>函数不能一点一点的去数伤害，需要直接通过受伤的时间点之间的间隔来判断这次受伤毒素持续了多久。</p><h3 id="ac-code-2">AC Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #6F42C1">vector</span><span style="color: #24292E">&lt;</span><span style="color: #6F42C1">ll</span><span style="color: #24292E">&gt; </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(</span><span style="color: #6F42C1">N</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">ll n, h;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">bool</span><span style="color: #24292E"> </span><span style="color: #6F42C1">check</span><span style="color: #24292E">(</span><span style="color: #6F42C1">ll</span><span style="color: #24292E"> </span><span style="color: #E36209">k</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    ll sum </span><span style="color: #D73A49">=</span><span style="color: #24292E"> k;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> a[i] </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> k)</span></span><span class="line"><span style="color: #24292E">            sum </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> k;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">            sum </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> a[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> a[i];</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> sum </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> h;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> h;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    ll l </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, r </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">18</span><span style="color: #24292E">, ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> r)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        ll mid </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">+</span><span style="color: #24292E"> r) </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #6F42C1">check</span><span style="color: #24292E">(mid))</span></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> mid, r </span><span style="color: #D73A49">=</span><span style="color: #24292E"> mid </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">            l </span><span style="color: #D73A49">=</span><span style="color: #24292E"> mid </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="d-灭霸要打响指啦">D 灭霸要打响指啦！</h2><h3 id="考点-3">考点：</h3><ul><li>简单语法</li></ul><h3 id="题解-3">题解：</h3><p>直接判断奇偶性输出即可</p><h3 id="ac-code-3">AC Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E"> </span><span style="color: #D73A49">?</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;NO&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;YES&quot;</span><span style="color: #24292E">) </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="e-国足巨星">E 国足巨星！</h2><h3 id="考点-4">考点：</h3><ul><li>组合数学</li><li>贪心</li></ul><h3 id="题解-4">题解：</h3><p>计算出每项能力还差多少能力值，然后进行排序，用最少的技能点得到最多的能力。</p><p>对于一项能力，计算出 <span class="math inline">\(A_n^m\)</span>即为一项能力的方案数，其中 <span class="math inline">\(n\)</span>为这项能力还有多少人没有， <span class="math inline">\(m\)</span>为这项能力还差几点。</p><p>将每项能力的方案数累乘就是总的方案数，记得取模 <spanclass="math inline">\(998244353\)</span></p><h3 id="ac-code-4">AC Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">3</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> a[N][N];</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">cal</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">m</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">n</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    ll res </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> m; i </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i</span><span style="color: #D73A49">--</span><span style="color: #24292E">, n</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        res </span><span style="color: #D73A49">*=</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">        res </span><span style="color: #D73A49">%=</span><span style="color: #24292E"> mod;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> res;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m, k, q;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> k </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i][j];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    ll ans1 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">, ans2 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> v;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a[i][j])</span></span><span class="line"><span style="color: #24292E">                cnt</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (cnt </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> k)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            ans1</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        v.</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">(k </span><span style="color: #D73A49">-</span><span style="color: #24292E"> cnt);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(</span><span style="color: #6F42C1">all</span><span style="color: #24292E">(v));</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> v.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">(); i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (q </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> v[i])</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">break</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        ans2 </span><span style="color: #D73A49">*=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">cal</span><span style="color: #24292E">(v[i], n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> k </span><span style="color: #D73A49">+</span><span style="color: #24292E"> v[i]);</span></span><span class="line"><span style="color: #24292E">        ans2 </span><span style="color: #D73A49">%=</span><span style="color: #24292E"> mod;</span></span><span class="line"><span style="color: #24292E">        ans1</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        q </span><span style="color: #D73A49">-=</span><span style="color: #24292E"> v[i];</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans1 </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl</span></span><span class="line"><span style="color: #24292E">         </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans2;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="f-大学计算机">F 大学计算机</h2><h3 id="考点-5">考点：</h3><ul><li>数学</li></ul><h3 id="题解-5">题解：</h3><p>由题可知，这是计算一个等差数列的前 <spanclass="math inline">\(n\)</span> 项和。</p><p>需要注意的有：</p><ul><li><p><span class="math inline">\(b\)</span>并不是等差数列其中一项</p></li><li><p>会有出现死循环的情况</p></li></ul><h3 id="ac-code-5">AC Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    ll ans, a, b, c;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> b </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> c;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    ll cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (b </span><span style="color: #D73A49">-</span><span style="color: #24292E"> a) </span><span style="color: #D73A49">/</span><span style="color: #24292E"> c;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (cnt </span><span style="color: #D73A49">*</span><span style="color: #24292E"> c </span><span style="color: #D73A49">+</span><span style="color: #24292E"> a </span><span style="color: #D73A49">==</span><span style="color: #24292E"> b)</span></span><span class="line"><span style="color: #24292E">        cnt</span><span style="color: #D73A49">--</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (b </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> a </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> c </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> b </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> a </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> c </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> (cnt </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">) </span><span style="color: #D73A49">*</span><span style="color: #24292E"> a </span><span style="color: #D73A49">+</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">*</span><span style="color: #24292E"> (cnt </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">) </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #24292E"> c;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>题解</category>
      
      <category>SZTU_ACM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>SZTU_ACM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Educational Codeforces Round 158 (Rated for Div. 2)</title>
    <link href="/archives/324571094/"/>
    <url>/archives/324571094/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="https://codeforces.com/contest/1901">Educational CodeforcesRound 158 (Rated for Div. 2)</a></li></ul><h2 id="a">A</h2><h3 id="思路">思路</h3><p>找到每个加油站之间的距离的最大值，需要特殊处理最后一个加油站和 <spanclass="math inline">\(x\)</span> 之间的来回距离</p><h3 id="code">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">3</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, x;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">-</span><span style="color: #24292E"> a[n]) </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(ans, a[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> a[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">]);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="b">B</h2><h3 id="思路-1">思路</h3><p>贪心经典题型，如果当前比前一个高，则累加高出的高度。如果当前比前面矮，则必然会被前面的操作所覆盖</p><h3 id="code-1">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">ll</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">c</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> c[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    ll now </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">, ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (c[i] </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> now)</span></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> c[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> now;</span></span><span class="line"><span style="color: #24292E">        now </span><span style="color: #D73A49">=</span><span style="color: #24292E"> c[i];</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="c">C</h2><h3 id="思路-2">思路</h3><p>由变化的关系式可知，如果 <span class="math inline">\(a_i \lea_j\)</span> ，不论操作多少次，都不会使 <span class="math inline">\(a_i\gt a_j\)</span>。故我们只需要判断数组中的最大值和最小值最后是否相等</p><p>每次的操作可以视作将加上一个数后右移一位</p><p>对于 <span class="math inline">\(a\)</span> 和 <spanclass="math inline">\(b\)</span> <span class="math inline">\((a \leb)\)</span> ，本题变为判断如何让 <span class="math inline">\((b + x) / 2- (a + x) / 2\)</span> 差值更小</p><p>会发现如果 <span class="math inline">\(a\)</span> 为奇数且 <spanclass="math inline">\(b\)</span> 为偶数时， <spanclass="math inline">\(x = 1\)</span> 会让差值更小</p><h3 id="code-2">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #6F42C1">min_element</span><span style="color: #24292E">(</span><span style="color: #6F42C1">all</span><span style="color: #24292E">(a)), y </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #6F42C1">max_element</span><span style="color: #24292E">(</span><span style="color: #6F42C1">all</span><span style="color: #24292E">(a));</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> ans;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> y)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (y </span><span style="color: #D73A49">-</span><span style="color: #24292E"> x </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                ans.</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">                ans.</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">break</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            x </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (x </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">) </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            y </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (y </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">) </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            ans.</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">(</span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            x </span><span style="color: #D73A49">=</span><span style="color: #24292E"> x </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            y </span><span style="color: #D73A49">=</span><span style="color: #24292E"> y </span><span style="color: #D73A49">/</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            ans.</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">() </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (ans.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">() </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> ans.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> ans.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">(); i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (i)</span></span><span class="line"><span style="color: #24292E">                cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans[i];</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="d">D</h2><h3 id="思路-3">思路</h3><p><code>pre[i]</code> ：消灭第 <span class="math inline">\(i-1\)</span>个怪物在最坏情况下所需的法术力量</p><p><code>suf[i]</code> ：消灭第 <span class="math inline">\(i+1\)</span>个怪物在最坏情况下所需的法术力量</p><p>然后，我们遍历所有的怪物，对于每个怪物 <spanclass="math inline">\(i\)</span> ，我们计算一个值，这个值是<code>a[i]</code> ， <code>pre[i]</code> 和 <code>suf[i]</code>中的最大值（即杀死这个怪物及其相邻的两个怪物所需的初始法术力量）。最后找到这个值的最小值，这个最小值就是需要的最小初始法术力量。</p><h3 id="code-3">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">), </span><span style="color: #6F42C1">pre</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">), </span><span style="color: #6F42C1">suf</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        pre[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(pre[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">], a[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> (i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">));</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        suf[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(suf[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">], a[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> i);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">0x</span><span style="color: #005CC5">7fffffff</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(ans, </span><span style="color: #6F42C1">max</span><span style="color: #24292E">({a[i], pre[i], suf[i]}));</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #6A737D">    // cin &gt;&gt; t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>题解</category>
      
      <category>Codeforces</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>Codeforces</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AtCoder Beginner Contest 329</title>
    <link href="/archives/280002889/"/>
    <url>/archives/280002889/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="https://atcoder.jp/contests/abc329">AtCoder BeginnerContest 329</a></li></ul><h2 id="a">A</h2><h3 id="思路">思路</h3><p>循环输出，用空格分隔字符串 <span class="math inline">\(S\)</span>中的每个字符。</p><h3 id="code">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    string s;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> s;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">(); i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (i)</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> s[i];</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="b">B</h2><h3 id="思路-1">思路</h3><p>倒序排序后，遍历全部整数，输出第一个小于最大值的数。</p><h3 id="code-1">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v</span><span style="color: #24292E">(n);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(</span><span style="color: #6F42C1">all</span><span style="color: #24292E">(v), </span><span style="color: #6F42C1">greater</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt;());</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (v[i] </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> v[</span><span style="color: #005CC5">0</span><span style="color: #24292E">])</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> v[i];</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="c">C</h2><h3 id="思路-2">思路</h3><p>记录每个字母连续出现的最大长度，最后累加即可。</p><h3 id="code-2">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    string s;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> s;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">char</span><span style="color: #24292E"> now </span><span style="color: #D73A49">=</span><span style="color: #24292E"> s[</span><span style="color: #005CC5">0</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v</span><span style="color: #24292E">(</span><span style="color: #005CC5">30</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (s[i] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> now)</span></span><span class="line"><span style="color: #24292E">            cnt</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            v[now </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;a&#39;</span><span style="color: #24292E">] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(v[now </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;a&#39;</span><span style="color: #24292E">], cnt);</span></span><span class="line"><span style="color: #24292E">            now </span><span style="color: #D73A49">=</span><span style="color: #24292E"> s[i];</span></span><span class="line"><span style="color: #24292E">            cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    v[now </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;a&#39;</span><span style="color: #24292E">] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(v[now </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;a&#39;</span><span style="color: #24292E">], cnt);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">26</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (v[i])</span></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> v[i];</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="d">D</h2><h3 id="思路-3">思路</h3><p>每次投票后更新最多票数候选人编号和他的票数。</p><p>若一次投票后，被投票的候选人的票数没有超过当前的获胜者，则无需操作，反之则更新。</p><h3 id="code-3">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> maxn </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">, max_index </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (m</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        v[x]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (v[x] </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> maxn </span><span style="color: #D73A49">||</span><span style="color: #24292E"> (v[x] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> maxn </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> x </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> max_index))</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            maxn </span><span style="color: #D73A49">=</span><span style="color: #24292E"> v[x];</span></span><span class="line"><span style="color: #24292E">            max_index </span><span style="color: #D73A49">=</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> max_index </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="e">E</h2><h3 id="思路-4">思路</h3><p>DFS模拟覆盖的过程，找到 <span class="math inline">\(S\)</span>中完整的字符串 <span class="math inline">\(T\)</span> ，将其用 <spanclass="math inline">\(\%\)</span>覆盖，说明此处可以是任意的字符，然后向左向右搜索是否还能凑出字符串 <spanclass="math inline">\(T\)</span> 。操作完成后字符串 <spanclass="math inline">\(S\)</span> 应该会被还原成全是 <spanclass="math inline">\(\%\)</span> 的字符串，如果不是则说明无法匹配。</p><h3 id="code-4">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m;</span></span><span class="line"><span style="color: #24292E">string s, t;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">dfs</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">l</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">r</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> l; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> r; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        s[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;%&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> k </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; k </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; k</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (l </span><span style="color: #D73A49">-</span><span style="color: #24292E"> k </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">break</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">bool</span><span style="color: #24292E"> flag </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (s[l </span><span style="color: #D73A49">-</span><span style="color: #24292E"> k </span><span style="color: #D73A49">+</span><span style="color: #24292E"> i] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;%&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                cnt</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (s[l </span><span style="color: #D73A49">-</span><span style="color: #24292E"> k </span><span style="color: #D73A49">+</span><span style="color: #24292E"> i] </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> t[i] </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> s[l </span><span style="color: #D73A49">-</span><span style="color: #24292E"> k </span><span style="color: #D73A49">+</span><span style="color: #24292E"> i] </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;%&#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">==</span><span style="color: #24292E"> m)</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                flag </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">break</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (flag)</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #6F42C1">dfs</span><span style="color: #24292E">(l </span><span style="color: #D73A49">-</span><span style="color: #24292E"> k, l </span><span style="color: #D73A49">-</span><span style="color: #24292E"> k </span><span style="color: #D73A49">+</span><span style="color: #24292E"> m);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> k </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; k </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; k</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (r </span><span style="color: #D73A49">+</span><span style="color: #24292E"> k </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> n)</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">break</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">bool</span><span style="color: #24292E"> flag </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (s[l </span><span style="color: #D73A49">+</span><span style="color: #24292E"> k </span><span style="color: #D73A49">+</span><span style="color: #24292E"> i] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;%&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                cnt</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> ((s[l </span><span style="color: #D73A49">+</span><span style="color: #24292E"> k </span><span style="color: #D73A49">+</span><span style="color: #24292E"> i] </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> t[i] </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> s[l </span><span style="color: #D73A49">+</span><span style="color: #24292E"> k </span><span style="color: #D73A49">+</span><span style="color: #24292E"> i] </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;%&#39;</span><span style="color: #24292E">) </span><span style="color: #D73A49">||</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">==</span><span style="color: #24292E"> m)</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                flag </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">break</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (flag </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #6F42C1">dfs</span><span style="color: #24292E">(l </span><span style="color: #D73A49">+</span><span style="color: #24292E"> k, l </span><span style="color: #D73A49">+</span><span style="color: #24292E"> k </span><span style="color: #D73A49">+</span><span style="color: #24292E"> m);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> s </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (s.</span><span style="color: #6F42C1">find</span><span style="color: #24292E">(t) </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">string</span><span style="color: #24292E">::npos)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> p </span><span style="color: #D73A49">=</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">find</span><span style="color: #24292E">(t);</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">dfs</span><span style="color: #24292E">(p, p </span><span style="color: #D73A49">+</span><span style="color: #24292E"> m);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (s[i] </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;%&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;No&quot;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;Yes&quot;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="f">F</h2><h3 id="思路-5">思路</h3><p>通过 <code>std::set</code> 进行去重。</p><p>当我们要合并两个箱子时,我们要选择把球数少的箱子倒进球数多的箱子。</p><p>但是题目已经限定倒入的方向为 <span class="math inline">\(a\)</span>倒入 <span class="math inline">\(b\)</span> 中，我们可以通过一个<code>swap()</code> 来交换两个箱子，通过 <code>set[i]</code> 表示 <spanclass="math inline">\(i\)</span> 号箱子的具体情况</p><h3 id="code-5">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> m;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">set</span><span style="color: #D73A49">&lt;int&gt;&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">st</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">        st[i].</span><span style="color: #6F42C1">insert</span><span style="color: #24292E">(x);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (m</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> a, b;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> b;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (st[a].</span><span style="color: #6F42C1">size</span><span style="color: #24292E">() </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> st[b].</span><span style="color: #6F42C1">size</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #6F42C1">swap</span><span style="color: #24292E">(st[a], st[b]);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        st[b].</span><span style="color: #6F42C1">insert</span><span style="color: #24292E">(</span><span style="color: #6F42C1">all</span><span style="color: #24292E">(st[a]));</span></span><span class="line"><span style="color: #24292E">        st[a].</span><span style="color: #6F42C1">clear</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> st[b].</span><span style="color: #6F42C1">size</span><span style="color: #24292E">() </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>题解</category>
      
      <category>AtCoder</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>AtCoder</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Codeforces Round 909 (Div. 3)</title>
    <link href="/archives/2728152226/"/>
    <url>/archives/2728152226/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="https://codeforces.com/contest/1899">Codeforces Round 909(Div. 3)</a></li></ul><h2 id="a">A</h2><h3 id="思路">思路</h3><p>因双方的行动可以相互抵消，故当 <span class="math inline">\(n\)</span>不为 <span class="math inline">\(3\)</span> 的倍数时，先手必胜</p><h3 id="code">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">3</span><span style="color: #24292E"> </span><span style="color: #D73A49">?</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;First&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;Second&quot;</span><span style="color: #24292E">) </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="b">B</h2><h3 id="思路-1">思路</h3><p>枚举所有的 <span class="math inline">\(k\)</span>，计算此时的最大差值，记录出现的最大值。 <span class="math inline">\(O(n\log n)\)</span></p><h3 id="code-1">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">ll</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">sum</span><span style="color: #24292E">(n </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        sum[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> sum[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> v[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    ll ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">%</span><span style="color: #24292E"> i </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">ll</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> a;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> i; j </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; j </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> i)</span></span><span class="line"><span style="color: #24292E">                a.</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">(sum[j] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> sum[j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> i]);</span></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(ans, </span><span style="color: #D73A49">*</span><span style="color: #6F42C1">max_element</span><span style="color: #24292E">(</span><span style="color: #6F42C1">all</span><span style="color: #24292E">(a)) </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #D73A49">*</span><span style="color: #6F42C1">min_element</span><span style="color: #24292E">(</span><span style="color: #6F42C1">all</span><span style="color: #24292E">(a)));</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="c">C</h2><h3 id="思路-2">思路</h3><p>将数组分为若干个区间，每个区间边界为相邻的奇偶性相同的两个数之间，维护每个区间的最小前缀，可以通过舍弃最小前缀保证当前值是最大值。<spanclass="math inline">\(O(n)\)</span></p><h3 id="code-2">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;iostream&gt;</span></span><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;algorithm&gt;</span></span><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;string&gt;</span></span><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;cstring&gt;</span></span><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;vector&gt;</span></span><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;queue&gt;</span></span><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;stack&gt;</span></span><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;map&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v</span><span style="color: #24292E">(n);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> v[</span><span style="color: #005CC5">0</span><span style="color: #24292E">], sum </span><span style="color: #D73A49">=</span><span style="color: #24292E"> v[</span><span style="color: #005CC5">0</span><span style="color: #24292E">], pre </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">, v[</span><span style="color: #005CC5">0</span><span style="color: #24292E">]);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> ((v[i] </span><span style="color: #D73A49">+</span><span style="color: #24292E"> v[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">]) </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E"> </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            pre </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">            sum </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        sum </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> v[i];</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(ans, sum </span><span style="color: #D73A49">-</span><span style="color: #24292E"> pre);</span></span><span class="line"><span style="color: #24292E">        pre </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(pre, sum);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="d">D</h2><h3 id="思路-3">思路</h3><p>通过对式子的改写，可知满足条件的可能情况为 <spanclass="math inline">\(b_i = b_j\)</span> 或 <spanclass="math inline">\(b_i = 1, b_j = 2\)</span> 或 <spanclass="math inline">\(b_i = 2, b_j = 1\)</span> 。</p><h3 id="code-3">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    ll ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    map</span><span style="color: #D73A49">&lt;int</span><span style="color: #24292E">, </span><span style="color: #D73A49">int&gt;</span><span style="color: #24292E"> mp;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> mp[a[i]];</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a[i] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> mp[</span><span style="color: #005CC5">2</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a[i] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> mp[</span><span style="color: #005CC5">1</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #24292E">        mp[a[i]]</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="e">E</h2><h3 id="思路-4">思路</h3><p>对于这个序列，我们无法对整个序列的最小值以后的数进行操作，若最小值以后的数不满足不递减的顺序，则这次排序是不可能的，反之则输出最小值之前的元素数量。</p><h3 id="code-4">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">v</span><span style="color: #24292E">(n);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> v[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> pos </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min_element</span><span style="color: #24292E">(</span><span style="color: #6F42C1">all</span><span style="color: #24292E">(v)) </span><span style="color: #D73A49">-</span><span style="color: #24292E"> v.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> pos; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (v[i] </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> v[i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">])</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> pos </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="f">F</h2><h3 id="思路-5">思路</h3><p>初始化树为一条链，此时两个叶结点之间的距离为 <spanclass="math inline">\(n-1\)</span> ，每次移动 <spanclass="math inline">\(n\)</span> 结点，使其与链上编号为 <spanclass="math inline">\(d_i\)</span> 的结点相连，此时 <spanclass="math inline">\(n\)</span> 结点与 <spanclass="math inline">\(1\)</span> 结点之间的距离为 <spanclass="math inline">\(d_i\)</span> 。</p><h3 id="code-5">Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">all</span><span style="color: #24292E">(</span><span style="color: #E36209">v</span><span style="color: #24292E">) v.begin(), v.end()</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">INF</span><span style="color: #24292E"> 0x3f3f3f3f</span></span><span class="line"><span style="color: #D73A49">#define</span><span style="color: #24292E"> </span><span style="color: #6F42C1">endl</span><span style="color: #24292E"> &#39;\n&#39;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> mod </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">998244353</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> M </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, q;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> q;</span></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">d</span><span style="color: #24292E">(q);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> q; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> d[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; </span><span style="color: #D73A49">++</span><span style="color: #24292E">i)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> i </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot; &quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> now </span><span style="color: #D73A49">=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> dis : d)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (dis </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> now)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> n </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot; &quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> now </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot; &quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> dis </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">            now </span><span style="color: #D73A49">=</span><span style="color: #24292E"> dis;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;-1 -1 -1&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">ios</span><span style="color: #24292E">::</span><span style="color: #6F42C1">sync_with_stdio</span><span style="color: #24292E">(</span><span style="color: #005CC5">false</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    cin.</span><span style="color: #6F42C1">tie</span><span style="color: #24292E">(</span><span style="color: #005CC5">0</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>题解</category>
      
      <category>Codeforces</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>Codeforces</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SZTU Monthly 2023 Oct.</title>
    <link href="/archives/471967587/"/>
    <url>/archives/471967587/</url>
    
    <content type="html"><![CDATA[<blockquote><p><ahref="http://acm.sztu.edu.cn/csgoj/contest/problemset?cid=1047">比赛链接</a></p></blockquote><h2 id="写在前面">写在前面</h2><h3 id="题目难度">题目难度：</h3><p>这次比赛难度划分是四道简单题，两道中等题，两道困难题。 <spanclass="math inline">\(HGDF\)</span> 简单题 ， <spanclass="math inline">\(EA\)</span> 中等题， <spanclass="math inline">\(BC\)</span> 困难题。</p><h2 id="a-预测排名">A 预测排名</h2><h3 id="考点">考点：</h3><ul><li>贪心</li><li>模拟</li></ul><h3 id="题解">题解：</h3><p>题目给出了ACM赛制排名的说明，同时给出每个人的过题数量、每题的需要的时间和罚时次数，需要我们输出每个人的排名</p><h3 id="ac-code">AC Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">struct</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> m;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t[</span><span style="color: #005CC5">111</span><span style="color: #24292E">];</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> wa;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> all;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> id;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> rank;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">cal</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(t, t </span><span style="color: #D73A49">+</span><span style="color: #24292E"> m);</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> item </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            item </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> t[i];</span></span><span class="line"><span style="color: #24292E">            all </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> item;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        all </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> wa;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">} a[</span><span style="color: #005CC5">1111</span><span style="color: #24292E">];</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">bool</span><span style="color: #24292E"> </span><span style="color: #6F42C1">cmp1</span><span style="color: #24292E">(</span><span style="color: #6F42C1">node</span><span style="color: #24292E"> </span><span style="color: #E36209">a</span><span style="color: #24292E">, </span><span style="color: #6F42C1">node</span><span style="color: #24292E"> </span><span style="color: #E36209">b</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a.m </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> b.m)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> a.m </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> b.m;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> a.all </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> b.all;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">bool</span><span style="color: #24292E"> </span><span style="color: #6F42C1">cmp2</span><span style="color: #24292E">(</span><span style="color: #6F42C1">node</span><span style="color: #24292E"> </span><span style="color: #E36209">a</span><span style="color: #24292E">, </span><span style="color: #6F42C1">node</span><span style="color: #24292E"> </span><span style="color: #E36209">b</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> a.id </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> b.id;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">scanf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%d</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">n);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">scanf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%d</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">a[i].m);</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> a[i].m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #6F42C1">scanf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%d</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">a[i].t[j]);</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> a[i].m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> wa;</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #6F42C1">scanf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%d</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">wa);</span></span><span class="line"><span style="color: #24292E">            a[i].wa </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> wa </span><span style="color: #D73A49">*</span><span style="color: #24292E"> </span><span style="color: #005CC5">20</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">        a[i].id </span><span style="color: #D73A49">=</span><span style="color: #24292E"> i;</span></span><span class="line"><span style="color: #24292E">        a[i].</span><span style="color: #6F42C1">cal</span><span style="color: #24292E">();</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(a, a </span><span style="color: #D73A49">+</span><span style="color: #24292E"> n, cmp1);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        a[i].rank </span><span style="color: #D73A49">=</span><span style="color: #24292E"> i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (i </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> a[i].all </span><span style="color: #D73A49">==</span><span style="color: #24292E"> a[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">].all)</span></span><span class="line"><span style="color: #24292E">            a[i].rank </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">].rank;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(a, a </span><span style="color: #D73A49">+</span><span style="color: #24292E"> n, cmp2);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">printf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%d</span><span style="color: #032F62"> &quot;</span><span style="color: #24292E">, a[i].rank);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="b-三数之积">B 三数之积</h2><h3 id="考点-1">考点：</h3><ul><li>枚举</li></ul><h3 id="题解-1">题解：</h3><p>根据题意，枚举每一种可能即可，注意循环的范围</p><h3 id="ac-code-1">AC Code</h3><p>C</p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">struct</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> a, b, c;</span></span><span class="line"><span style="color: #24292E">} ans[N];</span></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">scanf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%d</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">n);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">*</span><span style="color: #24292E"> i </span><span style="color: #D73A49">*</span><span style="color: #24292E"> i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">%</span><span style="color: #24292E"> i </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> i </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">3</span><span style="color: #24292E"> </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">/</span><span style="color: #24292E"> i;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">*</span><span style="color: #24292E"> j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> t; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (t </span><span style="color: #D73A49">%</span><span style="color: #24292E"> j </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> j </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">3</span><span style="color: #24292E"> </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> t </span><span style="color: #D73A49">/</span><span style="color: #24292E"> j </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">3</span><span style="color: #24292E"> </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">            ans[cnt].a </span><span style="color: #D73A49">=</span><span style="color: #24292E"> i;</span></span><span class="line"><span style="color: #24292E">            ans[cnt].b </span><span style="color: #D73A49">=</span><span style="color: #24292E"> j;</span></span><span class="line"><span style="color: #24292E">            ans[cnt].c </span><span style="color: #D73A49">=</span><span style="color: #24292E"> t </span><span style="color: #D73A49">/</span><span style="color: #24292E"> j;</span></span><span class="line"><span style="color: #24292E">            cnt</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (cnt </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">printf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;NO</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">printf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;YES</span><span style="color: #005CC5">\n</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> cnt; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">printf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%d</span><span style="color: #032F62"> </span><span style="color: #005CC5">%d</span><span style="color: #032F62"> </span><span style="color: #005CC5">%d\n</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, ans[i].a, ans[i].b, ans[i].c);</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">scanf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%d</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">t);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><p>C++</p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">struct</span><span style="color: #24292E"> </span><span style="color: #6F42C1">node</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> a, b, c;</span></span><span class="line"><span style="color: #24292E">};</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">node</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> ans;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">*</span><span style="color: #24292E"> i </span><span style="color: #D73A49">*</span><span style="color: #24292E"> i </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">%</span><span style="color: #24292E"> i </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> i </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">3</span><span style="color: #24292E"> </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> n </span><span style="color: #D73A49">/</span><span style="color: #24292E"> i;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">*</span><span style="color: #24292E"> j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> t; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (t </span><span style="color: #D73A49">%</span><span style="color: #24292E"> j </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> j </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">3</span><span style="color: #24292E"> </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> t </span><span style="color: #D73A49">/</span><span style="color: #24292E"> j </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">3</span><span style="color: #24292E"> </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">            ans.</span><span style="color: #6F42C1">push_back</span><span style="color: #24292E">({i, j, t </span><span style="color: #D73A49">/</span><span style="color: #24292E"> j});</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (ans.</span><span style="color: #6F42C1">empty</span><span style="color: #24292E">())</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;NO&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;YES&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">auto</span><span style="color: #24292E"> it : ans)</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> it.a </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> it.b </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> it.c </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> endl;</span></span><span class="line"><span style="color: #24292E">}</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (t</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">solve</span><span style="color: #24292E">();</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="c-消灭敌人">C 消灭敌人</h2><h3 id="考点-2">考点：</h3><ul><li>枚举</li></ul><h3 id="题解-2">题解：</h3><p>在一条线上有若干敌人和若干炮台，求敌人离最近的炮台的最大值</p><h3 id="ac-code-2">AC Code</h3><p>解法一 <span class="math inline">\(O(nm)\)</span>：</p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">3</span><span style="color: #D73A49">e</span><span style="color: #005CC5">4</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> a[N], b[N];</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">scanf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%d%d</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">n, </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">m);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">scanf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%d</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">a[i]);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">scanf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%d</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">b[i]);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(a, a </span><span style="color: #D73A49">+</span><span style="color: #24292E"> n);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(b, b </span><span style="color: #D73A49">+</span><span style="color: #24292E"> m);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> dis </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">0x</span><span style="color: #005CC5">7fffffff</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            dis </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(dis, </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> b[j]));</span></span><span class="line"><span style="color: #24292E">        ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(ans, dis);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">printf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%d</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, ans);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><p>解法二 <span class="math inline">\(O(n\log n)\)</span> ：</p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">3</span><span style="color: #D73A49">e</span><span style="color: #005CC5">4</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> a[N], b[N];</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n, m;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">scanf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%d%d</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">n, </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">m);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">scanf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%d</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">a[i]);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">scanf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%d</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">b[i]);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(a, a </span><span style="color: #D73A49">+</span><span style="color: #24292E"> n);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(b, b </span><span style="color: #D73A49">+</span><span style="color: #24292E"> m);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">, j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">j </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> a[i] </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> b[j])</span></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(ans, </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> b[j]));</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (j </span><span style="color: #D73A49">==</span><span style="color: #24292E"> m </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(ans, </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(</span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> b[j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">]), </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> b[j])));</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> m </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> b[j] </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> a[i])</span></span><span class="line"><span style="color: #24292E">                j</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">max</span><span style="color: #24292E">(ans, </span><span style="color: #6F42C1">min</span><span style="color: #24292E">(</span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> b[j </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">]), </span><span style="color: #6F42C1">abs</span><span style="color: #24292E">(a[i] </span><span style="color: #D73A49">-</span><span style="color: #24292E"> b[j])));</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">printf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%d</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, ans);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="d-括号匹配">D 括号匹配</h2><h3 id="考点-3">考点：</h3><ul><li>字符串</li></ul><h3 id="题解-3">题解：</h3><p>用 <span class="math inline">\(cnt\)</span> 计数，每出现左括号 <spanclass="math inline">\(cnt+1\)</span> ，出现右括号 <spanclass="math inline">\(cnt-1\)</span> 。如果出现中途 <spanclass="math inline">\(cnt&lt;0\)</span>即括号不能匹配，最后判断括号是否匹配。</p><h3 id="ac-code-3">AC Code</h3><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">char</span><span style="color: #24292E"> s[N];</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">scanf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%s</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, s);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> len </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">strlen</span><span style="color: #24292E">(s), cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> len; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (s[i] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;(&#39;</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            cnt</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">            cnt</span><span style="color: #D73A49">--</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (cnt </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #6F42C1">printf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;NO&quot;</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (cnt </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">printf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;YES&quot;</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">printf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;NO&quot;</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="e-求第k个数位">E 求第k个数位</h2><h3 id="考点-4">考点：</h3><ul><li>字符串</li></ul><h3 id="题解-4">题解：</h3><p>将密码本先预处理好，每次直接查询即可</p><h3 id="ac-code-4">AC Code</h3><p>C</p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">2</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">char</span><span style="color: #24292E"> s[N], t[N];</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; s[</span><span style="color: #005CC5">100000</span><span style="color: #24292E">] </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;</span><span style="color: #005CC5">\0</span><span style="color: #032F62">&#39;</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">itoa</span><span style="color: #24292E">(i, t, </span><span style="color: #005CC5">10</span><span style="color: #24292E">);</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">strcat</span><span style="color: #24292E">(s, t);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">scanf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%d</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">n);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (n</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">scanf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%d</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">x);</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">printf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%c</span><span style="color: #032F62"> &quot;</span><span style="color: #24292E">, s[x </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">]);</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><p>C++</p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    string s;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; s.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">() </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">100000</span><span style="color: #24292E">; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        s </span><span style="color: #D73A49">+=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">to_string</span><span style="color: #24292E">(i);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (n</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> x;</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> s[x </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">] </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="f-翻转单词">F 翻转单词</h2><h3 id="考点-5">考点：</h3><ul><li>字符串</li><li>输入？</li></ul><h3 id="题解-5">题解：</h3><p>输入每个单词后倒序输出</p><h3 id="ac-code-5">AC Code</h3><p>C</p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">char</span><span style="color: #24292E"> s[N];</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #6F42C1">scanf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%s</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, s) </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> EOF)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (n)</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #6F42C1">printf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot; &quot;</span><span style="color: #24292E">);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">strlen</span><span style="color: #24292E">(s) </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #6F42C1">printf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%c</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, s[i]);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        n</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><p>C++</p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    string s;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> s)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (n)</span></span><span class="line"><span style="color: #24292E">            cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39; &#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">reverse</span><span style="color: #24292E">(s.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), s.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">());</span></span><span class="line"><span style="color: #24292E">        cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> s;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        n</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="g-求数组里的第二大数">G 求数组里的第二大数</h2><h3 id="考点-6">考点：</h3><ul><li>排序</li></ul><h3 id="题解-6">题解：</h3><p>如题，排序后输出数组里的第二大数即可</p><h3 id="ac-code-6">AC Code</h3><p>C</p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"><span style="color: #D73A49">const</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> N </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #D73A49">e</span><span style="color: #005CC5">5</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> a[N];</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">scanf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%d</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">n);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">scanf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%d</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">a[i]);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> i </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; j</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a[i] </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> a[j])</span></span><span class="line"><span style="color: #24292E">            {</span></span><span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">int</span><span style="color: #24292E"> t </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a[i];</span></span><span class="line"><span style="color: #24292E">                a[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a[j];</span></span><span class="line"><span style="color: #24292E">                a[j] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> t;</span></span><span class="line"><span style="color: #24292E">            }</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a[i] </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> a[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">])</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a[i];</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">break</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">printf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%d</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, ans);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><p>C++</p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> n;</span></span><span class="line"><span style="color: #24292E">    cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> n;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    vector</span><span style="color: #D73A49">&lt;int&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">a</span><span style="color: #24292E">(n);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        cin </span><span style="color: #D73A49">&gt;&gt;</span><span style="color: #24292E"> a[i];</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(a.</span><span style="color: #6F42C1">begin</span><span style="color: #24292E">(), a.</span><span style="color: #6F42C1">end</span><span style="color: #24292E">(), </span><span style="color: #6F42C1">greater</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">&gt;());</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> n; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a[i] </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> a[i </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">])</span></span><span class="line"><span style="color: #24292E">        {</span></span><span class="line"><span style="color: #24292E">            ans </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a[i];</span></span><span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">break</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        }</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"><span style="color: #24292E">    cout </span><span style="color: #D73A49">&lt;&lt;</span><span style="color: #24292E"> ans;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><h2 id="h-ab-problem">H A+B Problem</h2><h3 id="考点-7">考点：</h3><ul><li>排序</li></ul><h3 id="题解-7">题解：</h3><p>以十六进制输出 <span class="math inline">\(a+b\)</span> 的结果</p><h3 id="ac-code-7">AC Code</h3><p>解法一：</p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> a, b;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">scanf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%d%d</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">a, </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">b);</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">printf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%x</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, a </span><span style="color: #D73A49">+</span><span style="color: #24292E"> b);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure><p>解法二：</p><figure class="shiki cpp"><div class='codeblock'><div class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></div><div class="code"><pre class="shiki github-light"><code><span class="line"><span style="color: #D73A49">#include</span><span style="color: #24292E"> </span><span style="color: #032F62">&lt;bits/stdc++.h&gt;</span></span><span class="line"><span style="color: #D73A49">using</span><span style="color: #24292E"> </span><span style="color: #D73A49">namespace</span><span style="color: #24292E"> </span><span style="color: #6F42C1">std</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #D73A49">typedef</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> </span><span style="color: #D73A49">long</span><span style="color: #24292E"> ll;</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">char</span><span style="color: #24292E"> ans[</span><span style="color: #005CC5">10</span><span style="color: #24292E">];</span></span><span class="line"></span><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">()</span></span><span class="line"><span style="color: #24292E">{</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> a, b;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #6F42C1">scanf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%d%d</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">a, </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E">b);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> c </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a </span><span style="color: #D73A49">+</span><span style="color: #24292E"> b, cnt </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (c)</span></span><span class="line"><span style="color: #24292E">    {</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (c </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">16</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">            ans[cnt] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> c </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">16</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">else</span></span><span class="line"><span style="color: #24292E">            ans[cnt] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> c </span><span style="color: #D73A49">%</span><span style="color: #24292E"> </span><span style="color: #005CC5">16</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">10</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;a&#39;</span><span style="color: #24292E">;</span></span><span class="line"></span><span class="line"><span style="color: #24292E">        c </span><span style="color: #D73A49">/=</span><span style="color: #24292E"> </span><span style="color: #005CC5">16</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">        cnt</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">    }</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> cnt </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&gt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i</span><span style="color: #D73A49">--</span><span style="color: #24292E">)</span></span><span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">printf</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">%c</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">, ans[i]);</span></span><span class="line"></span><span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span><span class="line"><span style="color: #24292E">}</span></span></code></pre></div></div></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>题解</category>
      
      <category>SZTU_ACM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>SZTU_ACM</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
